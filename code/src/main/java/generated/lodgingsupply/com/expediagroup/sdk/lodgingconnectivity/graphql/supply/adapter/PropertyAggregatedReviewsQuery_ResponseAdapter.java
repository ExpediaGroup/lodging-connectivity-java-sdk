//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ListAdapter;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.PropertyAggregatedReviewsQuery;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.ReviewBrand;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter.ReviewBrand_ResponseAdapter;
import java.io.IOException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class PropertyAggregatedReviewsQuery_ResponseAdapter {
  public enum Data implements Adapter<PropertyAggregatedReviewsQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("property");

    @Override
    public PropertyAggregatedReviewsQuery.Data fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      PropertyAggregatedReviewsQuery.Property _property = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _property = new NullableAdapter<>(new ObjectAdapter<PropertyAggregatedReviewsQuery.Property>(Property.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new PropertyAggregatedReviewsQuery.Data(
        _property
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        PropertyAggregatedReviewsQuery.Data value) throws IOException {
      writer.name("property");
      new NullableAdapter<>(new ObjectAdapter<PropertyAggregatedReviewsQuery.Property>(Property.INSTANCE, false)).toJson(writer, customScalarAdapters, value.property);
    }
  }

  public enum Property implements Adapter<PropertyAggregatedReviewsQuery.Property> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("aggregatedReviews");

    @Override
    public PropertyAggregatedReviewsQuery.Property fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      PropertyAggregatedReviewsQuery.AggregatedReviews _aggregatedReviews = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _aggregatedReviews = new NullableAdapter<>(new ObjectAdapter<PropertyAggregatedReviewsQuery.AggregatedReviews>(AggregatedReviews.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new PropertyAggregatedReviewsQuery.Property(
        _aggregatedReviews
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        PropertyAggregatedReviewsQuery.Property value) throws IOException {
      writer.name("aggregatedReviews");
      new NullableAdapter<>(new ObjectAdapter<PropertyAggregatedReviewsQuery.AggregatedReviews>(AggregatedReviews.INSTANCE, false)).toJson(writer, customScalarAdapters, value.aggregatedReviews);
    }
  }

  public enum AggregatedReviews implements Adapter<PropertyAggregatedReviewsQuery.AggregatedReviews> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("brandsWithScores");

    @Override
    public PropertyAggregatedReviewsQuery.AggregatedReviews fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      List<PropertyAggregatedReviewsQuery.BrandsWithScore> _brandsWithScores = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _brandsWithScores = new ListAdapter<>(new ObjectAdapter<PropertyAggregatedReviewsQuery.BrandsWithScore>(BrandsWithScore.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_brandsWithScores, "brandsWithScores");

      return new PropertyAggregatedReviewsQuery.AggregatedReviews(
        _brandsWithScores
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        PropertyAggregatedReviewsQuery.AggregatedReviews value) throws IOException {
      writer.name("brandsWithScores");
      new ListAdapter<>(new ObjectAdapter<PropertyAggregatedReviewsQuery.BrandsWithScore>(BrandsWithScore.INSTANCE, false)).toJson(writer, customScalarAdapters, value.brandsWithScores);
    }
  }

  public enum BrandsWithScore implements Adapter<PropertyAggregatedReviewsQuery.BrandsWithScore> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("brandName", "categoriesWithScore", "totalReviewsCount");

    @Override
    public PropertyAggregatedReviewsQuery.BrandsWithScore fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      ReviewBrand _brandName = null;
      List<PropertyAggregatedReviewsQuery.CategoriesWithScore> _categoriesWithScore = null;
      Integer _totalReviewsCount = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _brandName = ReviewBrand_ResponseAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          case 1: _categoriesWithScore = new ListAdapter<>(new ObjectAdapter<PropertyAggregatedReviewsQuery.CategoriesWithScore>(CategoriesWithScore.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          case 2: _totalReviewsCount = Adapters.IntAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_brandName, "brandName");
      Assertions.checkFieldNotMissing(_categoriesWithScore, "categoriesWithScore");
      Assertions.checkFieldNotMissing(_totalReviewsCount, "totalReviewsCount");

      return new PropertyAggregatedReviewsQuery.BrandsWithScore(
        _brandName,
        _categoriesWithScore,
        _totalReviewsCount
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        PropertyAggregatedReviewsQuery.BrandsWithScore value) throws IOException {
      writer.name("brandName");
      ReviewBrand_ResponseAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.brandName);

      writer.name("categoriesWithScore");
      new ListAdapter<>(new ObjectAdapter<PropertyAggregatedReviewsQuery.CategoriesWithScore>(CategoriesWithScore.INSTANCE, false)).toJson(writer, customScalarAdapters, value.categoriesWithScore);

      writer.name("totalReviewsCount");
      Adapters.IntAdapter.toJson(writer, customScalarAdapters, value.totalReviewsCount);
    }
  }

  public enum CategoriesWithScore implements Adapter<PropertyAggregatedReviewsQuery.CategoriesWithScore> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("category", "value");

    @Override
    public PropertyAggregatedReviewsQuery.CategoriesWithScore fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String _category = null;
      PropertyAggregatedReviewsQuery.Value _value = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _category = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _value = new ObjectAdapter<PropertyAggregatedReviewsQuery.Value>(Value.INSTANCE, false).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_category, "category");
      Assertions.checkFieldNotMissing(_value, "value");

      return new PropertyAggregatedReviewsQuery.CategoriesWithScore(
        _category,
        _value
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        PropertyAggregatedReviewsQuery.CategoriesWithScore value) throws IOException {
      writer.name("category");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.category);

      writer.name("value");
      new ObjectAdapter<PropertyAggregatedReviewsQuery.Value>(Value.INSTANCE, false).toJson(writer, customScalarAdapters, value.value);
    }
  }

  public enum Value implements Adapter<PropertyAggregatedReviewsQuery.Value> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("reviewsCount", "score");

    @Override
    public PropertyAggregatedReviewsQuery.Value fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      Integer _reviewsCount = null;
      Double _score = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _reviewsCount = Adapters.IntAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _score = Adapters.DoubleAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_reviewsCount, "reviewsCount");
      Assertions.checkFieldNotMissing(_score, "score");

      return new PropertyAggregatedReviewsQuery.Value(
        _reviewsCount,
        _score
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        PropertyAggregatedReviewsQuery.Value value) throws IOException {
      writer.name("reviewsCount");
      Adapters.IntAdapter.toJson(writer, customScalarAdapters, value.reviewsCount);

      writer.name("score");
      Adapters.DoubleAdapter.toJson(writer, customScalarAdapters, value.score);
    }
  }
}
