//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;

/**
 * Updated supplier amount of the reservation
 */
public class SupplierAmountInput {
  public final String currencyCode;

  public final List<SupplierRateInput> rates;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public SupplierAmountInput(String currencyCode, List<SupplierRateInput> rates) {
    this.currencyCode = currencyCode;
    this.rates = rates;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof SupplierAmountInput) {
      SupplierAmountInput that = (SupplierAmountInput) o;
      return ((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode))
       &&((this.rates == null) ? (that.rates == null) : this.rates.equals(that.rates));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
      __h *= 1000003;
      __h ^= (rates == null) ? 0 : rates.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "SupplierAmountInput{"
        + "currencyCode=" + currencyCode + ", "
        + "rates=" + rates
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private String currencyCode;

    private List<SupplierRateInput> rates;

    Builder() {
    }

    /**
     * map to currency in domain
     */
    public Builder currencyCode(String currencyCode) {
      this.currencyCode = currencyCode;
      return this;
    }

    /**
     * the updated daily rates
     */
    public Builder rates(List<SupplierRateInput> rates) {
      this.rates = rates;
      return this;
    }

    public SupplierAmountInput build() {
      return new SupplierAmountInput(currencyCode, rates);
    }
  }
}
