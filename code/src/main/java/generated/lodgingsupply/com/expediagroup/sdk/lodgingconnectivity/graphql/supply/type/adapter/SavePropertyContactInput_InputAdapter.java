//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloOptionalAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ListAdapter;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.PhoneNumberInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.SavePropertyContactInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum SavePropertyContactInput_InputAdapter implements Adapter<SavePropertyContactInput> {
  INSTANCE;

  @Override
  public SavePropertyContactInput fromJson(JsonReader reader,
      CustomScalarAdapters customScalarAdapters) throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      SavePropertyContactInput value) throws IOException {
    if (value.emailAddresses instanceof Optional.Present) {
      writer.name("emailAddresses");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ListAdapter<>(Adapters.StringAdapter))).toJson(writer, customScalarAdapters, value.emailAddresses);
    }
    if (value.name instanceof Optional.Present) {
      writer.name("name");
      new ApolloOptionalAdapter<>(Adapters.NullableStringAdapter).toJson(writer, customScalarAdapters, value.name);
    }
    if (value.phoneNumbers instanceof Optional.Present) {
      writer.name("phoneNumbers");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ListAdapter<>(new ObjectAdapter<PhoneNumberInput>(PhoneNumberInput_InputAdapter.INSTANCE, false)))).toJson(writer, customScalarAdapters, value.phoneNumbers);
    }
    writer.name("type");
    ContactType_ResponseAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.type);
  }
}
