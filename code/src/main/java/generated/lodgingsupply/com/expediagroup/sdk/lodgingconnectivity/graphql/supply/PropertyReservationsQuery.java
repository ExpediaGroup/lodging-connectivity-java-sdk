//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.Query;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter.PropertyReservationsQuery_ResponseAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter.PropertyReservationsQuery_VariablesAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.selections.PropertyReservationsQuerySelections;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.BusinessModel;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CancellationPenaltyRuleType;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CancellationWindowTemporalUnit;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CheckOutDateFilter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.DistributionChannel;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.IdSource;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.InstallmentPaymentStatus;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.InventoryType;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.MerchantOfRecord;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.PaymentInstrumentType;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.RateTimeUnit;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.RateType;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.RemittanceType;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.ReservationFilterInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.ReservationPaymentStatus;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.ReservationStatus;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.SupplierFeeType;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.SupplierOperatingModel;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.TravelPurpose;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.VrboCancellationReason;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.time.LocalDate;
import java.util.List;

public class PropertyReservationsQuery implements Query<PropertyReservationsQuery.Data> {
  public static final String OPERATION_ID = "6bab5bc781ee8d60d7e2c6371ad572d5cc923154086ef7dacb2aa639c709a0d1";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query PropertyReservations($propertyId: String!, $checkOutDate: CheckOutDateFilter, $filter: ReservationFilterInput, $pageSize: Int!, $after: String, $includePaymentInstrumentToken: Boolean! = false , $includeSupplierAmount: Boolean! = false , $skipSummaryView: Boolean! = false ) {
   *   property(id: $propertyId) {
   *     reservations(pageSize: $pageSize, checkOutDate: $checkOutDate, filter: $filter, after: $after) {
   *       totalCount
   *       pageInfo {
   *         endCursor
   *         hasNextPage
   *       }
   *       edges {
   *         cursor
   *         node {
   *           id
   *           alternativeIds {
   *             supplierId
   *           }
   *           accessibilityText
   *           adultCount
   *           amounts @skip(if: $skipSummaryView) {
   *             nightlyPayments {
   *               cancellationAmounts {
   *                 amount {
   *                   amount
   *                   currencyCode
   *                 }
   *                 description
   *                 percent
   *                 type
   *               }
   *               dailyAmounts {
   *                 amount {
   *                   amount
   *                   currencyCode
   *                 }
   *                 date
   *                 description
   *                 percent
   *                 type
   *               }
   *               perStayAmounts {
   *                 amount {
   *                   amount
   *                   currencyCode
   *                 }
   *                 description
   *                 percent
   *                 type
   *               }
   *             }
   *             summary {
   *               amount {
   *                 amount
   *                 currencyCode
   *               }
   *               description
   *               percent
   *               type
   *             }
   *           }
   *           audit {
   *             creationDateTimeUtc
   *             lastUpdateDateTimeUtc
   *           }
   *           bedTypes
   *           businessModel
   *           cancellation {
   *             pendingCancellation
   *             vrboPrimaryReason
   *           }
   *           cancellationPolicy {
   *             effectivePolicy {
   *               endDateTimeUtc
   *               policyType
   *               startDateTimeUtc
   *             }
   *             tiers {
   *               cancellationWindow {
   *                 cutoff
   *                 temporalUnit
   *               }
   *               penaltyRule {
   *                 costFlatAmount {
   *                   amount
   *                   currencyCode
   *                 }
   *                 numberOfNights
   *                 percentage
   *                 priceAmount {
   *                   amount
   *                   currencyCode
   *                 }
   *                 type
   *               }
   *             }
   *           }
   *           checkInDate
   *           checkOutDate
   *           childAges
   *           childCount
   *           creationDateTime
   *           distribution {
   *             distributionChannel
   *             reservationSource
   *           }
   *           guests {
   *             adultCount
   *             childCount
   *             pets {
   *               travelingWithPets
   *             }
   *             primaryGuest {
   *               firstName
   *               lastName
   *               emailAddress
   *               fullPhoneNumber
   *             }
   *           }
   *           inventoryType
   *           isReconciled
   *           lastUpdatedDateTime
   *           merchantOfRecord
   *           messageThreadId
   *           multiRoomText
   *           payment {
   *             installments {
   *               amount {
   *                 amount
   *                 currencyCode
   *               }
   *               distributions {
   *                 amount {
   *                   currencyCode
   *                   amount
   *                 }
   *                 type
   *               }
   *               dueDate
   *               installmentId
   *               paymentStatus
   *             }
   *             instructions
   *             instrument {
   *               token @include(if: $includePaymentInstrumentToken) {
   *                 expirationDateTime
   *                 value
   *               }
   *               type
   *             }
   *             status
   *           }
   *           paymentInstructions
   *           petCount
   *           policies {
   *             cancellationPolicy {
   *               effectivePolicy {
   *                 endDateTimeUtc
   *                 policyType
   *                 startDateTimeUtc
   *               }
   *               tiers {
   *                 cancellationWindow {
   *                   cutoff
   *                   temporalUnit
   *                 }
   *                 penaltyRule {
   *                   costFlatAmount {
   *                     amount
   *                     currencyCode
   *                   }
   *                   numberOfNights
   *                   percentage
   *                   priceAmount {
   *                     amount
   *                     currencyCode
   *                   }
   *                   type
   *                 }
   *               }
   *             }
   *           }
   *           primaryGuest {
   *             emailAddress
   *             firstName
   *             lastName
   *             loyaltyTier
   *             phoneNumbers {
   *               areaCode
   *               countryCode
   *               number
   *             }
   *             supplierLoyaltyPlanInfo {
   *               membershipNumber
   *               planCode
   *             }
   *             travelPurpose
   *           }
   *           rateIds {
   *             id
   *             idSource
   *           }
   *           reconciliationEligibility {
   *             invalidScenarios {
   *               reason
   *               scenario
   *             }
   *             validScenarios
   *           }
   *           reconciliationType
   *           remittanceType
   *           reservationIds {
   *             id
   *             idSource
   *           }
   *           smokingType
   *           source
   *           specialRequest
   *           status
   *           statuses {
   *             status
   *           }
   *           stayDates {
   *             checkInDate
   *             checkOutDate
   *           }
   *           subStatus
   *           supplierAmount @include(if: $includeSupplierAmount) {
   *             __typename
   *             currencyCode
   *             rateType
   *             ... on ExpediaSupplierAmount {
   *               currencyCode
   *               rateType
   *               rates {
   *                 compensation {
   *                   acceleratorPercent
   *                   basePercent
   *                 }
   *                 fromDate
   *                 rateItems {
   *                   amount
   *                   feeType
   *                 }
   *                 rateTimeUnit
   *                 toDate
   *               }
   *               total {
   *                 amountAfterTax
   *                 amountBeforeTax
   *                 compensation {
   *                   acceleratorPercent
   *                   basePercent
   *                 }
   *               }
   *             }
   *           }
   *           supplierOperatingModel
   *           tidsCode
   *           totalGuestCount
   *           unitIds {
   *             id
   *             idSource
   *           }
   *           valueAddedPromotions {
   *             description
   *             id
   *           }
   *           vrboAmounts @skip(if: $skipSummaryView) {
   *             summary {
   *               amount {
   *                 amount
   *                 currencyCode
   *               }
   *               productCode
   *               type
   *             }
   *           }
   *         }
   *       }
   *     }
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query PropertyReservations($propertyId: String!, $checkOutDate: CheckOutDateFilter, $filter: ReservationFilterInput, $pageSize: Int!, $after: String, $includePaymentInstrumentToken: Boolean! = false , $includeSupplierAmount: Boolean! = false , $skipSummaryView: Boolean! = false ) { property(id: $propertyId) { reservations(pageSize: $pageSize, checkOutDate: $checkOutDate, filter: $filter, after: $after) { totalCount pageInfo { endCursor hasNextPage } edges { cursor node { id alternativeIds { supplierId } accessibilityText adultCount amounts @skip(if: $skipSummaryView) { nightlyPayments { cancellationAmounts { amount { amount currencyCode } description percent type } dailyAmounts { amount { amount currencyCode } date description percent type } perStayAmounts { amount { amount currencyCode } description percent type } } summary { amount { amount currencyCode } description percent type } } audit { creationDateTimeUtc lastUpdateDateTimeUtc } bedTypes businessModel cancellation { pendingCancellation vrboPrimaryReason } cancellationPolicy { effectivePolicy { endDateTimeUtc policyType startDateTimeUtc } tiers { cancellationWindow { cutoff temporalUnit } penaltyRule { costFlatAmount { amount currencyCode } numberOfNights percentage priceAmount { amount currencyCode } type } } } checkInDate checkOutDate childAges childCount creationDateTime distribution { distributionChannel reservationSource } guests { adultCount childCount pets { travelingWithPets } primaryGuest { firstName lastName emailAddress fullPhoneNumber } } inventoryType isReconciled lastUpdatedDateTime merchantOfRecord messageThreadId multiRoomText payment { installments { amount { amount currencyCode } distributions { amount { currencyCode amount } type } dueDate installmentId paymentStatus } instructions instrument { token @include(if: $includePaymentInstrumentToken) { expirationDateTime value } type } status } paymentInstructions petCount policies { cancellationPolicy { effectivePolicy { endDateTimeUtc policyType startDateTimeUtc } tiers { cancellationWindow { cutoff temporalUnit } penaltyRule { costFlatAmount { amount currencyCode } numberOfNights percentage priceAmount { amount currencyCode } type } } } } primaryGuest { emailAddress firstName lastName loyaltyTier phoneNumbers { areaCode countryCode number } supplierLoyaltyPlanInfo { membershipNumber planCode } travelPurpose } rateIds { id idSource } reconciliationEligibility { invalidScenarios { reason scenario } validScenarios } reconciliationType remittanceType reservationIds { id idSource } smokingType source specialRequest status statuses { status } stayDates { checkInDate checkOutDate } subStatus supplierAmount @include(if: $includeSupplierAmount) { __typename currencyCode rateType ... on ExpediaSupplierAmount { currencyCode rateType rates { compensation { acceleratorPercent basePercent } fromDate rateItems { amount feeType } rateTimeUnit toDate } total { amountAfterTax amountBeforeTax compensation { acceleratorPercent basePercent } } } } supplierOperatingModel tidsCode totalGuestCount unitIds { id idSource } valueAddedPromotions { description id } vrboAmounts @skip(if: $skipSummaryView) { summary { amount { amount currencyCode } productCode type } } } } } } }";

  public static final String OPERATION_NAME = "PropertyReservations";

  public final String propertyId;

  public final Optional<CheckOutDateFilter> checkOutDate;

  public final Optional<ReservationFilterInput> filter;

  public final Integer pageSize;

  public final Optional<String> after;

  public final Optional<Boolean> includePaymentInstrumentToken;

  public final Optional<Boolean> includeSupplierAmount;

  public final Optional<Boolean> skipSummaryView;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public PropertyReservationsQuery(String propertyId, Optional<CheckOutDateFilter> checkOutDate,
      Optional<ReservationFilterInput> filter, Integer pageSize, Optional<String> after,
      Optional<Boolean> includePaymentInstrumentToken, Optional<Boolean> includeSupplierAmount,
      Optional<Boolean> skipSummaryView) {
    this.propertyId = propertyId;
    this.checkOutDate = checkOutDate;
    this.filter = filter;
    this.pageSize = pageSize;
    this.after = after;
    this.includePaymentInstrumentToken = includePaymentInstrumentToken;
    this.includeSupplierAmount = includeSupplierAmount;
    this.skipSummaryView = skipSummaryView;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof PropertyReservationsQuery) {
      PropertyReservationsQuery that = (PropertyReservationsQuery) o;
      return ((this.propertyId == null) ? (that.propertyId == null) : this.propertyId.equals(that.propertyId))
       &&((this.checkOutDate == null) ? (that.checkOutDate == null) : this.checkOutDate.equals(that.checkOutDate))
       &&((this.filter == null) ? (that.filter == null) : this.filter.equals(that.filter))
       &&((this.pageSize == null) ? (that.pageSize == null) : this.pageSize.equals(that.pageSize))
       &&((this.after == null) ? (that.after == null) : this.after.equals(that.after))
       &&((this.includePaymentInstrumentToken == null) ? (that.includePaymentInstrumentToken == null) : this.includePaymentInstrumentToken.equals(that.includePaymentInstrumentToken))
       &&((this.includeSupplierAmount == null) ? (that.includeSupplierAmount == null) : this.includeSupplierAmount.equals(that.includeSupplierAmount))
       &&((this.skipSummaryView == null) ? (that.skipSummaryView == null) : this.skipSummaryView.equals(that.skipSummaryView));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (propertyId == null) ? 0 : propertyId.hashCode();
      __h *= 1000003;
      __h ^= (checkOutDate == null) ? 0 : checkOutDate.hashCode();
      __h *= 1000003;
      __h ^= (filter == null) ? 0 : filter.hashCode();
      __h *= 1000003;
      __h ^= (pageSize == null) ? 0 : pageSize.hashCode();
      __h *= 1000003;
      __h ^= (after == null) ? 0 : after.hashCode();
      __h *= 1000003;
      __h ^= (includePaymentInstrumentToken == null) ? 0 : includePaymentInstrumentToken.hashCode();
      __h *= 1000003;
      __h ^= (includeSupplierAmount == null) ? 0 : includeSupplierAmount.hashCode();
      __h *= 1000003;
      __h ^= (skipSummaryView == null) ? 0 : skipSummaryView.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "PropertyReservationsQuery{"
        + "propertyId=" + propertyId + ", "
        + "checkOutDate=" + checkOutDate + ", "
        + "filter=" + filter + ", "
        + "pageSize=" + pageSize + ", "
        + "after=" + after + ", "
        + "includePaymentInstrumentToken=" + includePaymentInstrumentToken + ", "
        + "includeSupplierAmount=" + includeSupplierAmount + ", "
        + "skipSummaryView=" + skipSummaryView
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters)
      throws IOException {
    PropertyReservationsQuery_VariablesAdapter.INSTANCE.toJson(writer, customScalarAdapters, this);
  }

  @Override
  public Adapter<Data> adapter() {
    return new ObjectAdapter<Data>(PropertyReservationsQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Query.type
    )
    .selections(PropertyReservationsQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    private String propertyId;

    private Optional<CheckOutDateFilter> checkOutDate = Optional.absent();

    private Optional<ReservationFilterInput> filter = Optional.absent();

    private Integer pageSize;

    private Optional<String> after = Optional.absent();

    private Optional<Boolean> includePaymentInstrumentToken = Optional.absent();

    private Optional<Boolean> includeSupplierAmount = Optional.absent();

    private Optional<Boolean> skipSummaryView = Optional.absent();

    Builder() {
    }

    public Builder propertyId(String propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    public Builder checkOutDate(CheckOutDateFilter checkOutDate) {
      this.checkOutDate = Optional.present(checkOutDate);
      return this;
    }

    public Builder filter(ReservationFilterInput filter) {
      this.filter = Optional.present(filter);
      return this;
    }

    public Builder pageSize(Integer pageSize) {
      this.pageSize = pageSize;
      return this;
    }

    public Builder after(String after) {
      this.after = Optional.present(after);
      return this;
    }

    public Builder includePaymentInstrumentToken(Boolean includePaymentInstrumentToken) {
      this.includePaymentInstrumentToken = Optional.present(includePaymentInstrumentToken);
      return this;
    }

    public Builder includeSupplierAmount(Boolean includeSupplierAmount) {
      this.includeSupplierAmount = Optional.present(includeSupplierAmount);
      return this;
    }

    public Builder skipSummaryView(Boolean skipSummaryView) {
      this.skipSummaryView = Optional.present(skipSummaryView);
      return this;
    }

    public PropertyReservationsQuery build() {
      return new PropertyReservationsQuery(propertyId, checkOutDate, filter, pageSize, after, includePaymentInstrumentToken, includeSupplierAmount, skipSummaryView);
    }
  }

  public static class Data implements Query.Data {
    public Property property;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Data(Property property) {
      this.property = property;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.property == null) ? (that.property == null) : this.property.equals(that.property));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (property == null) ? 0 : property.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "property=" + property
          + "}";
      }
      return $toString;
    }
  }

  public static class Property {
    /**
     * retrieve reservation data by property ID
     */
    public Reservations reservations;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Property(Reservations reservations) {
      this.reservations = reservations;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Property) {
        Property that = (Property) o;
        return ((this.reservations == null) ? (that.reservations == null) : this.reservations.equals(that.reservations));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (reservations == null) ? 0 : reservations.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Property{"
          + "reservations=" + reservations
          + "}";
      }
      return $toString;
    }
  }

  public static class Reservations {
    /**
     * the total number of reservations
     */
    public Integer totalCount;

    /**
     * information about the current page of results
     */
    public PageInfo pageInfo;

    /**
     * the edges in the connection to traverse, each contain a cursor and node
     */
    public List<Edge> edges;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Reservations(Integer totalCount, PageInfo pageInfo, List<Edge> edges) {
      this.totalCount = totalCount;
      this.pageInfo = pageInfo;
      this.edges = edges;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Reservations) {
        Reservations that = (Reservations) o;
        return ((this.totalCount == null) ? (that.totalCount == null) : this.totalCount.equals(that.totalCount))
         &&((this.pageInfo == null) ? (that.pageInfo == null) : this.pageInfo.equals(that.pageInfo))
         &&((this.edges == null) ? (that.edges == null) : this.edges.equals(that.edges));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (totalCount == null) ? 0 : totalCount.hashCode();
        __h *= 1000003;
        __h ^= (pageInfo == null) ? 0 : pageInfo.hashCode();
        __h *= 1000003;
        __h ^= (edges == null) ? 0 : edges.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Reservations{"
          + "totalCount=" + totalCount + ", "
          + "pageInfo=" + pageInfo + ", "
          + "edges=" + edges
          + "}";
      }
      return $toString;
    }
  }

  public static class PageInfo {
    /**
     * the value of the cursor of the last reservation in the current page
     */
    public String endCursor;

    /**
     * indicates if there are additional pages to retrieve
     */
    public Boolean hasNextPage;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public PageInfo(String endCursor, Boolean hasNextPage) {
      this.endCursor = endCursor;
      this.hasNextPage = hasNextPage;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof PageInfo) {
        PageInfo that = (PageInfo) o;
        return ((this.endCursor == null) ? (that.endCursor == null) : this.endCursor.equals(that.endCursor))
         &&((this.hasNextPage == null) ? (that.hasNextPage == null) : this.hasNextPage.equals(that.hasNextPage));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (endCursor == null) ? 0 : endCursor.hashCode();
        __h *= 1000003;
        __h ^= (hasNextPage == null) ? 0 : hasNextPage.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "PageInfo{"
          + "endCursor=" + endCursor + ", "
          + "hasNextPage=" + hasNextPage
          + "}";
      }
      return $toString;
    }
  }

  public static class Edge {
    /**
     * the cursor value for this edge
     */
    public String cursor;

    /**
     * node points to the actual Reservation data
     */
    public Node node;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Edge(String cursor, Node node) {
      this.cursor = cursor;
      this.node = node;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Edge) {
        Edge that = (Edge) o;
        return ((this.cursor == null) ? (that.cursor == null) : this.cursor.equals(that.cursor))
         &&((this.node == null) ? (that.node == null) : this.node.equals(that.node));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (cursor == null) ? 0 : cursor.hashCode();
        __h *= 1000003;
        __h ^= (node == null) ? 0 : node.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Edge{"
          + "cursor=" + cursor + ", "
          + "node=" + node
          + "}";
      }
      return $toString;
    }
  }

  public static class Node {
    /**
     * Expedia id of the reservation
     */
    public String id;

    /**
     * Alternative IDs for the Reservation
     */
    public AlternativeIds alternativeIds;

    /**
     * Accessibility requests made by the guest for the reservation.
     */
    public List<String> accessibilityText;

    /**
     * Count for all adult guests associated with the reservation.
     */
    public Integer adultCount;

    /**
     * the amounts for Core-OTA reservation
     */
    public Amounts amounts;

    /**
     * Time stamp details for audit trails on the reservation
     */
    public Audit audit;

    /**
     * Bed type of the reservation.
     */
    public String bedTypes;

    /**
     * Entity that collects payment for the reservation.
     */
    public BusinessModel businessModel;

    /**
     * Details on the cancellations if the reservation has been canceled
     */
    public Cancellation cancellation;

    /**
     * Policy applied for cancelling the reservation
     */
    public CancellationPolicy cancellationPolicy;

    /**
     * the reservation's arrival date (format: YYYY-MM-DD)
     */
    public LocalDate checkInDate;

    /**
     * the reservation's departure date (format: YYYY-MM-DD)
     */
    public LocalDate checkOutDate;

    /**
     * Count for all children associated with the reservation.
     */
    public List<Integer> childAges;

    /**
     * Count for all children associated with the reservation.
     */
    public Integer childCount;

    /**
     * a timestamp for when the reservation was created (format: YYYY-MM-DDThh:mm:ssTZD, TZD is a time zone designator in the form +/-hh:mm)
     */
    public String creationDateTime;

    /**
     * Information about the distribution details of the reservation
     */
    public Distribution distribution;

    /**
     * Details of the guests in the reservation
     */
    public Guests guests;

    /**
     * Inventory type used for this Reservation
     */
    public InventoryType inventoryType;

    /**
     * Is the reservation reconciled
     */
    public Boolean isReconciled;

    /**
     * last updated Date Time
     */
    public String lastUpdatedDateTime;

    /**
     * Indicates who the merchant of record for the reservation is. In other words, who collects the money from the traveler.
     */
    public MerchantOfRecord merchantOfRecord;

    /**
     * the ID of the message thread associated with the reservation
     */
    public String messageThreadId;

    /**
     * Text that is displayed to travelers if there is a multi-room booking associated with the reservation.
     */
    public String multiRoomText;

    /**
     * Text that is displayed to travelers if a payment type is associated with the reservation.
     */
    public Payment payment;

    /**
     * Text that is displayed to travelers if a payment type is associated with the reservation.
     */
    public String paymentInstructions;

    /**
     * VRBO only, Count for all pets associated with the reservation.
     */
    public Integer petCount;

    /**
     * Policies attached to the Reservation
     */
    public Policies policies;

    /**
     * the Guest who made the booking
     */
    public PrimaryGuest1 primaryGuest;

    /**
     * ID of the rate/rate plan and the source of the ID.
     */
    public List<RateId> rateIds;

    /**
     * Eligibility of reconciling current reservation
     */
    public ReconciliationEligibility reconciliationEligibility;

    /**
     * The reconciliation type of the reservation
     */
    public String reconciliationType;

    /**
     * Remittance Type of the Reservation
     */
    public RemittanceType remittanceType;

    /**
     * an array of IDs associated with the reservation
     */
    public List<ReservationId> reservationIds;

    /**
     * Whether smoking is allowed for the reservation.
     */
    public String smokingType;

    /**
     * Source of the reservation.
     */
    public String source;

    /**
     * Text that is displayed to travelers if there is a special request associated with the reservation.
     */
    public String specialRequest;

    /**
     * Current status of the reservation.
     */
    public ReservationStatus status;

    /**
     * Information on the statuses of the reservation
     */
    public Statuses statuses;

    /**
     * Relevant dates for the reservation
     */
    public StayDates stayDates;

    /**
     * Current sub status of the reservation, it is applicable for vrbo reservations only.
     */
    public String subStatus;

    /**
     * the supplier amount for the reservation
     */
    public SupplierAmount supplierAmount;

    /**
     * Operating Model of the Supplier for this Reservation
     */
    public SupplierOperatingModel supplierOperatingModel;

    /**
     * Travel Industry Designator Service is a unique code that allows a bookings to be recognized by industry suppliers
     */
    public Integer tidsCode;

    /**
     * Total number of guests associated with the reservation.
     */
    public Integer totalGuestCount;

    /**
     * ID associated with the unit/room and source of the ID.
     */
    public List<UnitId> unitIds;

    /**
     * Value added Promotions
     */
    public List<ValueAddedPromotion> valueAddedPromotions;

    /**
     * the amounts for VRBO reservation
     */
    public VrboAmounts vrboAmounts;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Node(String id, AlternativeIds alternativeIds, List<String> accessibilityText,
        Integer adultCount, Amounts amounts, Audit audit, String bedTypes,
        BusinessModel businessModel, Cancellation cancellation,
        CancellationPolicy cancellationPolicy, LocalDate checkInDate, LocalDate checkOutDate,
        List<Integer> childAges, Integer childCount, String creationDateTime,
        Distribution distribution, Guests guests, InventoryType inventoryType, Boolean isReconciled,
        String lastUpdatedDateTime, MerchantOfRecord merchantOfRecord, String messageThreadId,
        String multiRoomText, Payment payment, String paymentInstructions, Integer petCount,
        Policies policies, PrimaryGuest1 primaryGuest, List<RateId> rateIds,
        ReconciliationEligibility reconciliationEligibility, String reconciliationType,
        RemittanceType remittanceType, List<ReservationId> reservationIds, String smokingType,
        String source, String specialRequest, ReservationStatus status, Statuses statuses,
        StayDates stayDates, String subStatus, SupplierAmount supplierAmount,
        SupplierOperatingModel supplierOperatingModel, Integer tidsCode, Integer totalGuestCount,
        List<UnitId> unitIds, List<ValueAddedPromotion> valueAddedPromotions,
        VrboAmounts vrboAmounts) {
      this.id = id;
      this.alternativeIds = alternativeIds;
      this.accessibilityText = accessibilityText;
      this.adultCount = adultCount;
      this.amounts = amounts;
      this.audit = audit;
      this.bedTypes = bedTypes;
      this.businessModel = businessModel;
      this.cancellation = cancellation;
      this.cancellationPolicy = cancellationPolicy;
      this.checkInDate = checkInDate;
      this.checkOutDate = checkOutDate;
      this.childAges = childAges;
      this.childCount = childCount;
      this.creationDateTime = creationDateTime;
      this.distribution = distribution;
      this.guests = guests;
      this.inventoryType = inventoryType;
      this.isReconciled = isReconciled;
      this.lastUpdatedDateTime = lastUpdatedDateTime;
      this.merchantOfRecord = merchantOfRecord;
      this.messageThreadId = messageThreadId;
      this.multiRoomText = multiRoomText;
      this.payment = payment;
      this.paymentInstructions = paymentInstructions;
      this.petCount = petCount;
      this.policies = policies;
      this.primaryGuest = primaryGuest;
      this.rateIds = rateIds;
      this.reconciliationEligibility = reconciliationEligibility;
      this.reconciliationType = reconciliationType;
      this.remittanceType = remittanceType;
      this.reservationIds = reservationIds;
      this.smokingType = smokingType;
      this.source = source;
      this.specialRequest = specialRequest;
      this.status = status;
      this.statuses = statuses;
      this.stayDates = stayDates;
      this.subStatus = subStatus;
      this.supplierAmount = supplierAmount;
      this.supplierOperatingModel = supplierOperatingModel;
      this.tidsCode = tidsCode;
      this.totalGuestCount = totalGuestCount;
      this.unitIds = unitIds;
      this.valueAddedPromotions = valueAddedPromotions;
      this.vrboAmounts = vrboAmounts;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Node) {
        Node that = (Node) o;
        return ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.alternativeIds == null) ? (that.alternativeIds == null) : this.alternativeIds.equals(that.alternativeIds))
         &&((this.accessibilityText == null) ? (that.accessibilityText == null) : this.accessibilityText.equals(that.accessibilityText))
         &&((this.adultCount == null) ? (that.adultCount == null) : this.adultCount.equals(that.adultCount))
         &&((this.amounts == null) ? (that.amounts == null) : this.amounts.equals(that.amounts))
         &&((this.audit == null) ? (that.audit == null) : this.audit.equals(that.audit))
         &&((this.bedTypes == null) ? (that.bedTypes == null) : this.bedTypes.equals(that.bedTypes))
         &&((this.businessModel == null) ? (that.businessModel == null) : this.businessModel.equals(that.businessModel))
         &&((this.cancellation == null) ? (that.cancellation == null) : this.cancellation.equals(that.cancellation))
         &&((this.cancellationPolicy == null) ? (that.cancellationPolicy == null) : this.cancellationPolicy.equals(that.cancellationPolicy))
         &&((this.checkInDate == null) ? (that.checkInDate == null) : this.checkInDate.equals(that.checkInDate))
         &&((this.checkOutDate == null) ? (that.checkOutDate == null) : this.checkOutDate.equals(that.checkOutDate))
         &&((this.childAges == null) ? (that.childAges == null) : this.childAges.equals(that.childAges))
         &&((this.childCount == null) ? (that.childCount == null) : this.childCount.equals(that.childCount))
         &&((this.creationDateTime == null) ? (that.creationDateTime == null) : this.creationDateTime.equals(that.creationDateTime))
         &&((this.distribution == null) ? (that.distribution == null) : this.distribution.equals(that.distribution))
         &&((this.guests == null) ? (that.guests == null) : this.guests.equals(that.guests))
         &&((this.inventoryType == null) ? (that.inventoryType == null) : this.inventoryType.equals(that.inventoryType))
         &&((this.isReconciled == null) ? (that.isReconciled == null) : this.isReconciled.equals(that.isReconciled))
         &&((this.lastUpdatedDateTime == null) ? (that.lastUpdatedDateTime == null) : this.lastUpdatedDateTime.equals(that.lastUpdatedDateTime))
         &&((this.merchantOfRecord == null) ? (that.merchantOfRecord == null) : this.merchantOfRecord.equals(that.merchantOfRecord))
         &&((this.messageThreadId == null) ? (that.messageThreadId == null) : this.messageThreadId.equals(that.messageThreadId))
         &&((this.multiRoomText == null) ? (that.multiRoomText == null) : this.multiRoomText.equals(that.multiRoomText))
         &&((this.payment == null) ? (that.payment == null) : this.payment.equals(that.payment))
         &&((this.paymentInstructions == null) ? (that.paymentInstructions == null) : this.paymentInstructions.equals(that.paymentInstructions))
         &&((this.petCount == null) ? (that.petCount == null) : this.petCount.equals(that.petCount))
         &&((this.policies == null) ? (that.policies == null) : this.policies.equals(that.policies))
         &&((this.primaryGuest == null) ? (that.primaryGuest == null) : this.primaryGuest.equals(that.primaryGuest))
         &&((this.rateIds == null) ? (that.rateIds == null) : this.rateIds.equals(that.rateIds))
         &&((this.reconciliationEligibility == null) ? (that.reconciliationEligibility == null) : this.reconciliationEligibility.equals(that.reconciliationEligibility))
         &&((this.reconciliationType == null) ? (that.reconciliationType == null) : this.reconciliationType.equals(that.reconciliationType))
         &&((this.remittanceType == null) ? (that.remittanceType == null) : this.remittanceType.equals(that.remittanceType))
         &&((this.reservationIds == null) ? (that.reservationIds == null) : this.reservationIds.equals(that.reservationIds))
         &&((this.smokingType == null) ? (that.smokingType == null) : this.smokingType.equals(that.smokingType))
         &&((this.source == null) ? (that.source == null) : this.source.equals(that.source))
         &&((this.specialRequest == null) ? (that.specialRequest == null) : this.specialRequest.equals(that.specialRequest))
         &&((this.status == null) ? (that.status == null) : this.status.equals(that.status))
         &&((this.statuses == null) ? (that.statuses == null) : this.statuses.equals(that.statuses))
         &&((this.stayDates == null) ? (that.stayDates == null) : this.stayDates.equals(that.stayDates))
         &&((this.subStatus == null) ? (that.subStatus == null) : this.subStatus.equals(that.subStatus))
         &&((this.supplierAmount == null) ? (that.supplierAmount == null) : this.supplierAmount.equals(that.supplierAmount))
         &&((this.supplierOperatingModel == null) ? (that.supplierOperatingModel == null) : this.supplierOperatingModel.equals(that.supplierOperatingModel))
         &&((this.tidsCode == null) ? (that.tidsCode == null) : this.tidsCode.equals(that.tidsCode))
         &&((this.totalGuestCount == null) ? (that.totalGuestCount == null) : this.totalGuestCount.equals(that.totalGuestCount))
         &&((this.unitIds == null) ? (that.unitIds == null) : this.unitIds.equals(that.unitIds))
         &&((this.valueAddedPromotions == null) ? (that.valueAddedPromotions == null) : this.valueAddedPromotions.equals(that.valueAddedPromotions))
         &&((this.vrboAmounts == null) ? (that.vrboAmounts == null) : this.vrboAmounts.equals(that.vrboAmounts));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (alternativeIds == null) ? 0 : alternativeIds.hashCode();
        __h *= 1000003;
        __h ^= (accessibilityText == null) ? 0 : accessibilityText.hashCode();
        __h *= 1000003;
        __h ^= (adultCount == null) ? 0 : adultCount.hashCode();
        __h *= 1000003;
        __h ^= (amounts == null) ? 0 : amounts.hashCode();
        __h *= 1000003;
        __h ^= (audit == null) ? 0 : audit.hashCode();
        __h *= 1000003;
        __h ^= (bedTypes == null) ? 0 : bedTypes.hashCode();
        __h *= 1000003;
        __h ^= (businessModel == null) ? 0 : businessModel.hashCode();
        __h *= 1000003;
        __h ^= (cancellation == null) ? 0 : cancellation.hashCode();
        __h *= 1000003;
        __h ^= (cancellationPolicy == null) ? 0 : cancellationPolicy.hashCode();
        __h *= 1000003;
        __h ^= (checkInDate == null) ? 0 : checkInDate.hashCode();
        __h *= 1000003;
        __h ^= (checkOutDate == null) ? 0 : checkOutDate.hashCode();
        __h *= 1000003;
        __h ^= (childAges == null) ? 0 : childAges.hashCode();
        __h *= 1000003;
        __h ^= (childCount == null) ? 0 : childCount.hashCode();
        __h *= 1000003;
        __h ^= (creationDateTime == null) ? 0 : creationDateTime.hashCode();
        __h *= 1000003;
        __h ^= (distribution == null) ? 0 : distribution.hashCode();
        __h *= 1000003;
        __h ^= (guests == null) ? 0 : guests.hashCode();
        __h *= 1000003;
        __h ^= (inventoryType == null) ? 0 : inventoryType.hashCode();
        __h *= 1000003;
        __h ^= (isReconciled == null) ? 0 : isReconciled.hashCode();
        __h *= 1000003;
        __h ^= (lastUpdatedDateTime == null) ? 0 : lastUpdatedDateTime.hashCode();
        __h *= 1000003;
        __h ^= (merchantOfRecord == null) ? 0 : merchantOfRecord.hashCode();
        __h *= 1000003;
        __h ^= (messageThreadId == null) ? 0 : messageThreadId.hashCode();
        __h *= 1000003;
        __h ^= (multiRoomText == null) ? 0 : multiRoomText.hashCode();
        __h *= 1000003;
        __h ^= (payment == null) ? 0 : payment.hashCode();
        __h *= 1000003;
        __h ^= (paymentInstructions == null) ? 0 : paymentInstructions.hashCode();
        __h *= 1000003;
        __h ^= (petCount == null) ? 0 : petCount.hashCode();
        __h *= 1000003;
        __h ^= (policies == null) ? 0 : policies.hashCode();
        __h *= 1000003;
        __h ^= (primaryGuest == null) ? 0 : primaryGuest.hashCode();
        __h *= 1000003;
        __h ^= (rateIds == null) ? 0 : rateIds.hashCode();
        __h *= 1000003;
        __h ^= (reconciliationEligibility == null) ? 0 : reconciliationEligibility.hashCode();
        __h *= 1000003;
        __h ^= (reconciliationType == null) ? 0 : reconciliationType.hashCode();
        __h *= 1000003;
        __h ^= (remittanceType == null) ? 0 : remittanceType.hashCode();
        __h *= 1000003;
        __h ^= (reservationIds == null) ? 0 : reservationIds.hashCode();
        __h *= 1000003;
        __h ^= (smokingType == null) ? 0 : smokingType.hashCode();
        __h *= 1000003;
        __h ^= (source == null) ? 0 : source.hashCode();
        __h *= 1000003;
        __h ^= (specialRequest == null) ? 0 : specialRequest.hashCode();
        __h *= 1000003;
        __h ^= (status == null) ? 0 : status.hashCode();
        __h *= 1000003;
        __h ^= (statuses == null) ? 0 : statuses.hashCode();
        __h *= 1000003;
        __h ^= (stayDates == null) ? 0 : stayDates.hashCode();
        __h *= 1000003;
        __h ^= (subStatus == null) ? 0 : subStatus.hashCode();
        __h *= 1000003;
        __h ^= (supplierAmount == null) ? 0 : supplierAmount.hashCode();
        __h *= 1000003;
        __h ^= (supplierOperatingModel == null) ? 0 : supplierOperatingModel.hashCode();
        __h *= 1000003;
        __h ^= (tidsCode == null) ? 0 : tidsCode.hashCode();
        __h *= 1000003;
        __h ^= (totalGuestCount == null) ? 0 : totalGuestCount.hashCode();
        __h *= 1000003;
        __h ^= (unitIds == null) ? 0 : unitIds.hashCode();
        __h *= 1000003;
        __h ^= (valueAddedPromotions == null) ? 0 : valueAddedPromotions.hashCode();
        __h *= 1000003;
        __h ^= (vrboAmounts == null) ? 0 : vrboAmounts.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Node{"
          + "id=" + id + ", "
          + "alternativeIds=" + alternativeIds + ", "
          + "accessibilityText=" + accessibilityText + ", "
          + "adultCount=" + adultCount + ", "
          + "amounts=" + amounts + ", "
          + "audit=" + audit + ", "
          + "bedTypes=" + bedTypes + ", "
          + "businessModel=" + businessModel + ", "
          + "cancellation=" + cancellation + ", "
          + "cancellationPolicy=" + cancellationPolicy + ", "
          + "checkInDate=" + checkInDate + ", "
          + "checkOutDate=" + checkOutDate + ", "
          + "childAges=" + childAges + ", "
          + "childCount=" + childCount + ", "
          + "creationDateTime=" + creationDateTime + ", "
          + "distribution=" + distribution + ", "
          + "guests=" + guests + ", "
          + "inventoryType=" + inventoryType + ", "
          + "isReconciled=" + isReconciled + ", "
          + "lastUpdatedDateTime=" + lastUpdatedDateTime + ", "
          + "merchantOfRecord=" + merchantOfRecord + ", "
          + "messageThreadId=" + messageThreadId + ", "
          + "multiRoomText=" + multiRoomText + ", "
          + "payment=" + payment + ", "
          + "paymentInstructions=" + paymentInstructions + ", "
          + "petCount=" + petCount + ", "
          + "policies=" + policies + ", "
          + "primaryGuest=" + primaryGuest + ", "
          + "rateIds=" + rateIds + ", "
          + "reconciliationEligibility=" + reconciliationEligibility + ", "
          + "reconciliationType=" + reconciliationType + ", "
          + "remittanceType=" + remittanceType + ", "
          + "reservationIds=" + reservationIds + ", "
          + "smokingType=" + smokingType + ", "
          + "source=" + source + ", "
          + "specialRequest=" + specialRequest + ", "
          + "status=" + status + ", "
          + "statuses=" + statuses + ", "
          + "stayDates=" + stayDates + ", "
          + "subStatus=" + subStatus + ", "
          + "supplierAmount=" + supplierAmount + ", "
          + "supplierOperatingModel=" + supplierOperatingModel + ", "
          + "tidsCode=" + tidsCode + ", "
          + "totalGuestCount=" + totalGuestCount + ", "
          + "unitIds=" + unitIds + ", "
          + "valueAddedPromotions=" + valueAddedPromotions + ", "
          + "vrboAmounts=" + vrboAmounts
          + "}";
      }
      return $toString;
    }
  }

  public static class AlternativeIds {
    /**
     * Supplier Id for the Reservation
     */
    public String supplierId;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public AlternativeIds(String supplierId) {
      this.supplierId = supplierId;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof AlternativeIds) {
        AlternativeIds that = (AlternativeIds) o;
        return ((this.supplierId == null) ? (that.supplierId == null) : this.supplierId.equals(that.supplierId));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (supplierId == null) ? 0 : supplierId.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "AlternativeIds{"
          + "supplierId=" + supplierId
          + "}";
      }
      return $toString;
    }
  }

  public static class Amounts {
    /**
     * Detailed (per-day) list of the reservation amounts
     */
    public NightlyPayments nightlyPayments;

    /**
     * Summary list of the reservation amounts
     */
    public List<Summary> summary;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Amounts(NightlyPayments nightlyPayments, List<Summary> summary) {
      this.nightlyPayments = nightlyPayments;
      this.summary = summary;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Amounts) {
        Amounts that = (Amounts) o;
        return ((this.nightlyPayments == null) ? (that.nightlyPayments == null) : this.nightlyPayments.equals(that.nightlyPayments))
         &&((this.summary == null) ? (that.summary == null) : this.summary.equals(that.summary));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (nightlyPayments == null) ? 0 : nightlyPayments.hashCode();
        __h *= 1000003;
        __h ^= (summary == null) ? 0 : summary.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Amounts{"
          + "nightlyPayments=" + nightlyPayments + ", "
          + "summary=" + summary
          + "}";
      }
      return $toString;
    }
  }

  public static class NightlyPayments {
    /**
     * Cancellation amounts for the reservation
     */
    public List<CancellationAmount> cancellationAmounts;

    /**
     * Reservation amounts for a specific stay date
     */
    public List<DailyAmount> dailyAmounts;

    /**
     * Reservation amounts that apply to the whole stay
     */
    public List<PerStayAmount> perStayAmounts;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public NightlyPayments(List<CancellationAmount> cancellationAmounts,
        List<DailyAmount> dailyAmounts, List<PerStayAmount> perStayAmounts) {
      this.cancellationAmounts = cancellationAmounts;
      this.dailyAmounts = dailyAmounts;
      this.perStayAmounts = perStayAmounts;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof NightlyPayments) {
        NightlyPayments that = (NightlyPayments) o;
        return ((this.cancellationAmounts == null) ? (that.cancellationAmounts == null) : this.cancellationAmounts.equals(that.cancellationAmounts))
         &&((this.dailyAmounts == null) ? (that.dailyAmounts == null) : this.dailyAmounts.equals(that.dailyAmounts))
         &&((this.perStayAmounts == null) ? (that.perStayAmounts == null) : this.perStayAmounts.equals(that.perStayAmounts));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (cancellationAmounts == null) ? 0 : cancellationAmounts.hashCode();
        __h *= 1000003;
        __h ^= (dailyAmounts == null) ? 0 : dailyAmounts.hashCode();
        __h *= 1000003;
        __h ^= (perStayAmounts == null) ? 0 : perStayAmounts.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "NightlyPayments{"
          + "cancellationAmounts=" + cancellationAmounts + ", "
          + "dailyAmounts=" + dailyAmounts + ", "
          + "perStayAmounts=" + perStayAmounts
          + "}";
      }
      return $toString;
    }
  }

  public static class CancellationAmount {
    /**
     * Amount value
     */
    public Amount amount;

    /**
     * Description associated to the amount
     */
    public String description;

    /**
     * Percentage of amount (when applicable)
     */
    public Double percent;

    /**
     * Amount type (BASE, DISCOUNT, TAX, GUESS_PAYMENT, PAYOUT, ...)
     */
    public String type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public CancellationAmount(Amount amount, String description, Double percent, String type) {
      this.amount = amount;
      this.description = description;
      this.percent = percent;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof CancellationAmount) {
        CancellationAmount that = (CancellationAmount) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.description == null) ? (that.description == null) : this.description.equals(that.description))
         &&((this.percent == null) ? (that.percent == null) : this.percent.equals(that.percent))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (description == null) ? 0 : description.hashCode();
        __h *= 1000003;
        __h ^= (percent == null) ? 0 : percent.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "CancellationAmount{"
          + "amount=" + amount + ", "
          + "description=" + description + ", "
          + "percent=" + percent + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }

  public static class Amount {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public Object amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Amount(Object amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Amount) {
        Amount that = (Amount) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Amount{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }

  public static class DailyAmount {
    /**
     * Amount value
     */
    public Amount1 amount;

    /**
     * Amount date
     */
    public LocalDate date;

    /**
     * Description associated to the amount
     */
    public String description;

    /**
     * Percentage of amount (when applicable)
     */
    public Double percent;

    /**
     * Amount type (BASE, DISCOUNT, TAX, GUESS_PAYMENT, PAYOUT, ...)
     */
    public String type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public DailyAmount(Amount1 amount, LocalDate date, String description, Double percent,
        String type) {
      this.amount = amount;
      this.date = date;
      this.description = description;
      this.percent = percent;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof DailyAmount) {
        DailyAmount that = (DailyAmount) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.date == null) ? (that.date == null) : this.date.equals(that.date))
         &&((this.description == null) ? (that.description == null) : this.description.equals(that.description))
         &&((this.percent == null) ? (that.percent == null) : this.percent.equals(that.percent))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (date == null) ? 0 : date.hashCode();
        __h *= 1000003;
        __h ^= (description == null) ? 0 : description.hashCode();
        __h *= 1000003;
        __h ^= (percent == null) ? 0 : percent.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "DailyAmount{"
          + "amount=" + amount + ", "
          + "date=" + date + ", "
          + "description=" + description + ", "
          + "percent=" + percent + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }

  public static class Amount1 {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public Object amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Amount1(Object amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Amount1) {
        Amount1 that = (Amount1) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Amount1{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }

  public static class PerStayAmount {
    /**
     * Amount value
     */
    public Amount2 amount;

    /**
     * Description associated to the amount
     */
    public String description;

    /**
     * Percentage of amount (when applicable)
     */
    public Double percent;

    /**
     * Amount type (BASE, DISCOUNT, TAX, GUESS_PAYMENT, PAYOUT, ...)
     */
    public String type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public PerStayAmount(Amount2 amount, String description, Double percent, String type) {
      this.amount = amount;
      this.description = description;
      this.percent = percent;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof PerStayAmount) {
        PerStayAmount that = (PerStayAmount) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.description == null) ? (that.description == null) : this.description.equals(that.description))
         &&((this.percent == null) ? (that.percent == null) : this.percent.equals(that.percent))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (description == null) ? 0 : description.hashCode();
        __h *= 1000003;
        __h ^= (percent == null) ? 0 : percent.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "PerStayAmount{"
          + "amount=" + amount + ", "
          + "description=" + description + ", "
          + "percent=" + percent + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }

  public static class Amount2 {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public Object amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Amount2(Object amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Amount2) {
        Amount2 that = (Amount2) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Amount2{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }

  public static class Summary {
    /**
     * Amount value
     */
    public Amount3 amount;

    /**
     * Description associated to the amount
     */
    public String description;

    /**
     * Percentage of amount (when applicable)
     */
    public Double percent;

    /**
     * Amount type (BASE, DISCOUNT, TAX, GUESS_PAYMENT, PAYOUT, ...)
     */
    public String type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Summary(Amount3 amount, String description, Double percent, String type) {
      this.amount = amount;
      this.description = description;
      this.percent = percent;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Summary) {
        Summary that = (Summary) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.description == null) ? (that.description == null) : this.description.equals(that.description))
         &&((this.percent == null) ? (that.percent == null) : this.percent.equals(that.percent))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (description == null) ? 0 : description.hashCode();
        __h *= 1000003;
        __h ^= (percent == null) ? 0 : percent.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Summary{"
          + "amount=" + amount + ", "
          + "description=" + description + ", "
          + "percent=" + percent + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }

  public static class Amount3 {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public Object amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Amount3(Object amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Amount3) {
        Amount3 that = (Amount3) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Amount3{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }

  public static class Audit {
    /**
     * A timestamp for when the reservation was created in UTC. (format: YYYY-MM-DDThh:mm:ssZ, with a time zone designator in the form +/-hh:mm)
     */
    public String creationDateTimeUtc;

    /**
     * A timestamp for when there was a last update on this reservation in UTC. (format: YYYY-MM-DDThh:mm:ssZ, with a time zone designator in the form +/-hh:mm)
     */
    public String lastUpdateDateTimeUtc;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Audit(String creationDateTimeUtc, String lastUpdateDateTimeUtc) {
      this.creationDateTimeUtc = creationDateTimeUtc;
      this.lastUpdateDateTimeUtc = lastUpdateDateTimeUtc;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Audit) {
        Audit that = (Audit) o;
        return ((this.creationDateTimeUtc == null) ? (that.creationDateTimeUtc == null) : this.creationDateTimeUtc.equals(that.creationDateTimeUtc))
         &&((this.lastUpdateDateTimeUtc == null) ? (that.lastUpdateDateTimeUtc == null) : this.lastUpdateDateTimeUtc.equals(that.lastUpdateDateTimeUtc));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (creationDateTimeUtc == null) ? 0 : creationDateTimeUtc.hashCode();
        __h *= 1000003;
        __h ^= (lastUpdateDateTimeUtc == null) ? 0 : lastUpdateDateTimeUtc.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Audit{"
          + "creationDateTimeUtc=" + creationDateTimeUtc + ", "
          + "lastUpdateDateTimeUtc=" + lastUpdateDateTimeUtc
          + "}";
      }
      return $toString;
    }
  }

  public static class Cancellation {
    /**
     * Helps partners identify if a reservation is in a pending cancel request state
     */
    public Boolean pendingCancellation;

    /**
     * Indicates the point of sale of the booking
     */
    public VrboCancellationReason vrboPrimaryReason;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Cancellation(Boolean pendingCancellation, VrboCancellationReason vrboPrimaryReason) {
      this.pendingCancellation = pendingCancellation;
      this.vrboPrimaryReason = vrboPrimaryReason;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Cancellation) {
        Cancellation that = (Cancellation) o;
        return ((this.pendingCancellation == null) ? (that.pendingCancellation == null) : this.pendingCancellation.equals(that.pendingCancellation))
         &&((this.vrboPrimaryReason == null) ? (that.vrboPrimaryReason == null) : this.vrboPrimaryReason.equals(that.vrboPrimaryReason));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (pendingCancellation == null) ? 0 : pendingCancellation.hashCode();
        __h *= 1000003;
        __h ^= (vrboPrimaryReason == null) ? 0 : vrboPrimaryReason.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Cancellation{"
          + "pendingCancellation=" + pendingCancellation + ", "
          + "vrboPrimaryReason=" + vrboPrimaryReason
          + "}";
      }
      return $toString;
    }
  }

  public static class CancellationPolicy {
    /**
     * The effective policy for the reservation
     */
    public EffectivePolicy effectivePolicy;

    public List<Tier> tiers;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public CancellationPolicy(EffectivePolicy effectivePolicy, List<Tier> tiers) {
      this.effectivePolicy = effectivePolicy;
      this.tiers = tiers;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof CancellationPolicy) {
        CancellationPolicy that = (CancellationPolicy) o;
        return ((this.effectivePolicy == null) ? (that.effectivePolicy == null) : this.effectivePolicy.equals(that.effectivePolicy))
         &&((this.tiers == null) ? (that.tiers == null) : this.tiers.equals(that.tiers));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (effectivePolicy == null) ? 0 : effectivePolicy.hashCode();
        __h *= 1000003;
        __h ^= (tiers == null) ? 0 : tiers.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "CancellationPolicy{"
          + "effectivePolicy=" + effectivePolicy + ", "
          + "tiers=" + tiers
          + "}";
      }
      return $toString;
    }
  }

  public static class EffectivePolicy {
    /**
     * The end date and time of the policy in UTC
     */
    public Object endDateTimeUtc;

    /**
     * The type of policy being applied. One of: REGULATORY_WAIVER
     */
    public String policyType;

    /**
     * The start date and time of the policy in UTC
     */
    public Object startDateTimeUtc;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public EffectivePolicy(Object endDateTimeUtc, String policyType, Object startDateTimeUtc) {
      this.endDateTimeUtc = endDateTimeUtc;
      this.policyType = policyType;
      this.startDateTimeUtc = startDateTimeUtc;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof EffectivePolicy) {
        EffectivePolicy that = (EffectivePolicy) o;
        return ((this.endDateTimeUtc == null) ? (that.endDateTimeUtc == null) : this.endDateTimeUtc.equals(that.endDateTimeUtc))
         &&((this.policyType == null) ? (that.policyType == null) : this.policyType.equals(that.policyType))
         &&((this.startDateTimeUtc == null) ? (that.startDateTimeUtc == null) : this.startDateTimeUtc.equals(that.startDateTimeUtc));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (endDateTimeUtc == null) ? 0 : endDateTimeUtc.hashCode();
        __h *= 1000003;
        __h ^= (policyType == null) ? 0 : policyType.hashCode();
        __h *= 1000003;
        __h ^= (startDateTimeUtc == null) ? 0 : startDateTimeUtc.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "EffectivePolicy{"
          + "endDateTimeUtc=" + endDateTimeUtc + ", "
          + "policyType=" + policyType + ", "
          + "startDateTimeUtc=" + startDateTimeUtc
          + "}";
      }
      return $toString;
    }
  }

  public static class Tier {
    public CancellationWindow cancellationWindow;

    public PenaltyRule penaltyRule;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Tier(CancellationWindow cancellationWindow, PenaltyRule penaltyRule) {
      this.cancellationWindow = cancellationWindow;
      this.penaltyRule = penaltyRule;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Tier) {
        Tier that = (Tier) o;
        return ((this.cancellationWindow == null) ? (that.cancellationWindow == null) : this.cancellationWindow.equals(that.cancellationWindow))
         &&((this.penaltyRule == null) ? (that.penaltyRule == null) : this.penaltyRule.equals(that.penaltyRule));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (cancellationWindow == null) ? 0 : cancellationWindow.hashCode();
        __h *= 1000003;
        __h ^= (penaltyRule == null) ? 0 : penaltyRule.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Tier{"
          + "cancellationWindow=" + cancellationWindow + ", "
          + "penaltyRule=" + penaltyRule
          + "}";
      }
      return $toString;
    }
  }

  public static class CancellationWindow {
    public Integer cutoff;

    public CancellationWindowTemporalUnit temporalUnit;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public CancellationWindow(Integer cutoff, CancellationWindowTemporalUnit temporalUnit) {
      this.cutoff = cutoff;
      this.temporalUnit = temporalUnit;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof CancellationWindow) {
        CancellationWindow that = (CancellationWindow) o;
        return ((this.cutoff == null) ? (that.cutoff == null) : this.cutoff.equals(that.cutoff))
         &&((this.temporalUnit == null) ? (that.temporalUnit == null) : this.temporalUnit.equals(that.temporalUnit));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (cutoff == null) ? 0 : cutoff.hashCode();
        __h *= 1000003;
        __h ^= (temporalUnit == null) ? 0 : temporalUnit.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "CancellationWindow{"
          + "cutoff=" + cutoff + ", "
          + "temporalUnit=" + temporalUnit
          + "}";
      }
      return $toString;
    }
  }

  public static class PenaltyRule {
    /**
     *  cancellation penalty amount for the reservation paid by the customer, minus the Expedia commission
     */
    public CostFlatAmount costFlatAmount;

    public Integer numberOfNights;

    /**
     *  Represented as a fraction of 1. Example: 15% should be represented as 0.15
     */
    public Double percentage;

    /**
     *  total cancellation penalty amount for the reservation paid by the customer, including the Expedia commission
     */
    public PriceAmount priceAmount;

    public CancellationPenaltyRuleType type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public PenaltyRule(CostFlatAmount costFlatAmount, Integer numberOfNights, Double percentage,
        PriceAmount priceAmount, CancellationPenaltyRuleType type) {
      this.costFlatAmount = costFlatAmount;
      this.numberOfNights = numberOfNights;
      this.percentage = percentage;
      this.priceAmount = priceAmount;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof PenaltyRule) {
        PenaltyRule that = (PenaltyRule) o;
        return ((this.costFlatAmount == null) ? (that.costFlatAmount == null) : this.costFlatAmount.equals(that.costFlatAmount))
         &&((this.numberOfNights == null) ? (that.numberOfNights == null) : this.numberOfNights.equals(that.numberOfNights))
         &&((this.percentage == null) ? (that.percentage == null) : this.percentage.equals(that.percentage))
         &&((this.priceAmount == null) ? (that.priceAmount == null) : this.priceAmount.equals(that.priceAmount))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (costFlatAmount == null) ? 0 : costFlatAmount.hashCode();
        __h *= 1000003;
        __h ^= (numberOfNights == null) ? 0 : numberOfNights.hashCode();
        __h *= 1000003;
        __h ^= (percentage == null) ? 0 : percentage.hashCode();
        __h *= 1000003;
        __h ^= (priceAmount == null) ? 0 : priceAmount.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "PenaltyRule{"
          + "costFlatAmount=" + costFlatAmount + ", "
          + "numberOfNights=" + numberOfNights + ", "
          + "percentage=" + percentage + ", "
          + "priceAmount=" + priceAmount + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }

  public static class CostFlatAmount {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public Object amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public CostFlatAmount(Object amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof CostFlatAmount) {
        CostFlatAmount that = (CostFlatAmount) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "CostFlatAmount{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }

  public static class PriceAmount {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public Object amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public PriceAmount(Object amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof PriceAmount) {
        PriceAmount that = (PriceAmount) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "PriceAmount{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }

  public static class Distribution {
    /**
     * Helps partners distinguish between a booking made on a vrbo platform vs all the other Expedia brands
     */
    public DistributionChannel distributionChannel;

    /**
     * Indicates the point of sale of the booking
     */
    public String reservationSource;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Distribution(DistributionChannel distributionChannel, String reservationSource) {
      this.distributionChannel = distributionChannel;
      this.reservationSource = reservationSource;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Distribution) {
        Distribution that = (Distribution) o;
        return ((this.distributionChannel == null) ? (that.distributionChannel == null) : this.distributionChannel.equals(that.distributionChannel))
         &&((this.reservationSource == null) ? (that.reservationSource == null) : this.reservationSource.equals(that.reservationSource));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (distributionChannel == null) ? 0 : distributionChannel.hashCode();
        __h *= 1000003;
        __h ^= (reservationSource == null) ? 0 : reservationSource.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Distribution{"
          + "distributionChannel=" + distributionChannel + ", "
          + "reservationSource=" + reservationSource
          + "}";
      }
      return $toString;
    }
  }

  public static class Guests {
    /**
     * Count for all adult guests associated with the reservation.
     */
    public Integer adultCount;

    /**
     * Count for all children associated with the reservation.
     */
    public Integer childCount;

    /**
     * Details of pets associated with the reservation.
     */
    public Pets pets;

    /**
     * Details of the Primary Guest
     */
    public PrimaryGuest primaryGuest;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Guests(Integer adultCount, Integer childCount, Pets pets, PrimaryGuest primaryGuest) {
      this.adultCount = adultCount;
      this.childCount = childCount;
      this.pets = pets;
      this.primaryGuest = primaryGuest;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Guests) {
        Guests that = (Guests) o;
        return ((this.adultCount == null) ? (that.adultCount == null) : this.adultCount.equals(that.adultCount))
         &&((this.childCount == null) ? (that.childCount == null) : this.childCount.equals(that.childCount))
         &&((this.pets == null) ? (that.pets == null) : this.pets.equals(that.pets))
         &&((this.primaryGuest == null) ? (that.primaryGuest == null) : this.primaryGuest.equals(that.primaryGuest));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (adultCount == null) ? 0 : adultCount.hashCode();
        __h *= 1000003;
        __h ^= (childCount == null) ? 0 : childCount.hashCode();
        __h *= 1000003;
        __h ^= (pets == null) ? 0 : pets.hashCode();
        __h *= 1000003;
        __h ^= (primaryGuest == null) ? 0 : primaryGuest.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Guests{"
          + "adultCount=" + adultCount + ", "
          + "childCount=" + childCount + ", "
          + "pets=" + pets + ", "
          + "primaryGuest=" + primaryGuest
          + "}";
      }
      return $toString;
    }
  }

  public static class Pets {
    /**
     * Boolean indicating if pets are included in the reservation
     */
    public Boolean travelingWithPets;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Pets(Boolean travelingWithPets) {
      this.travelingWithPets = travelingWithPets;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Pets) {
        Pets that = (Pets) o;
        return ((this.travelingWithPets == null) ? (that.travelingWithPets == null) : this.travelingWithPets.equals(that.travelingWithPets));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (travelingWithPets == null) ? 0 : travelingWithPets.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Pets{"
          + "travelingWithPets=" + travelingWithPets
          + "}";
      }
      return $toString;
    }
  }

  public static class PrimaryGuest {
    /**
     * First Name of the Primary Guest
     */
    public String firstName;

    /**
     * Last Name of the Primary Guest
     */
    public String lastName;

    /**
     * email address of the Primary Guest
     */
    public String emailAddress;

    /**
     * Full phone number of the Primary Guest as entered on the point of sale
     */
    public String fullPhoneNumber;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public PrimaryGuest(String firstName, String lastName, String emailAddress,
        String fullPhoneNumber) {
      this.firstName = firstName;
      this.lastName = lastName;
      this.emailAddress = emailAddress;
      this.fullPhoneNumber = fullPhoneNumber;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof PrimaryGuest) {
        PrimaryGuest that = (PrimaryGuest) o;
        return ((this.firstName == null) ? (that.firstName == null) : this.firstName.equals(that.firstName))
         &&((this.lastName == null) ? (that.lastName == null) : this.lastName.equals(that.lastName))
         &&((this.emailAddress == null) ? (that.emailAddress == null) : this.emailAddress.equals(that.emailAddress))
         &&((this.fullPhoneNumber == null) ? (that.fullPhoneNumber == null) : this.fullPhoneNumber.equals(that.fullPhoneNumber));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (firstName == null) ? 0 : firstName.hashCode();
        __h *= 1000003;
        __h ^= (lastName == null) ? 0 : lastName.hashCode();
        __h *= 1000003;
        __h ^= (emailAddress == null) ? 0 : emailAddress.hashCode();
        __h *= 1000003;
        __h ^= (fullPhoneNumber == null) ? 0 : fullPhoneNumber.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "PrimaryGuest{"
          + "firstName=" + firstName + ", "
          + "lastName=" + lastName + ", "
          + "emailAddress=" + emailAddress + ", "
          + "fullPhoneNumber=" + fullPhoneNumber
          + "}";
      }
      return $toString;
    }
  }

  public static class Payment {
    /**
     * Schedule and details of the Payment
     */
    public List<Installment> installments;

    /**
     * Text that is displayed to travelers if a payment type is associated with the reservation.
     */
    public String instructions;

    public Instrument instrument;

    /**
     * Reservation payment status associated with the reservation.
     */
    public ReservationPaymentStatus status;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Payment(List<Installment> installments, String instructions, Instrument instrument,
        ReservationPaymentStatus status) {
      this.installments = installments;
      this.instructions = instructions;
      this.instrument = instrument;
      this.status = status;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Payment) {
        Payment that = (Payment) o;
        return ((this.installments == null) ? (that.installments == null) : this.installments.equals(that.installments))
         &&((this.instructions == null) ? (that.instructions == null) : this.instructions.equals(that.instructions))
         &&((this.instrument == null) ? (that.instrument == null) : this.instrument.equals(that.instrument))
         &&((this.status == null) ? (that.status == null) : this.status.equals(that.status));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (installments == null) ? 0 : installments.hashCode();
        __h *= 1000003;
        __h ^= (instructions == null) ? 0 : instructions.hashCode();
        __h *= 1000003;
        __h ^= (instrument == null) ? 0 : instrument.hashCode();
        __h *= 1000003;
        __h ^= (status == null) ? 0 : status.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Payment{"
          + "installments=" + installments + ", "
          + "instructions=" + instructions + ", "
          + "instrument=" + instrument + ", "
          + "status=" + status
          + "}";
      }
      return $toString;
    }
  }

  public static class Installment {
    public Amount4 amount;

    /**
     * VRBO reservation specific installment distribution details
     */
    public List<Distribution1> distributions;

    public LocalDate dueDate;

    public String installmentId;

    public InstallmentPaymentStatus paymentStatus;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Installment(Amount4 amount, List<Distribution1> distributions, LocalDate dueDate,
        String installmentId, InstallmentPaymentStatus paymentStatus) {
      this.amount = amount;
      this.distributions = distributions;
      this.dueDate = dueDate;
      this.installmentId = installmentId;
      this.paymentStatus = paymentStatus;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Installment) {
        Installment that = (Installment) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.distributions == null) ? (that.distributions == null) : this.distributions.equals(that.distributions))
         &&((this.dueDate == null) ? (that.dueDate == null) : this.dueDate.equals(that.dueDate))
         &&((this.installmentId == null) ? (that.installmentId == null) : this.installmentId.equals(that.installmentId))
         &&((this.paymentStatus == null) ? (that.paymentStatus == null) : this.paymentStatus.equals(that.paymentStatus));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (distributions == null) ? 0 : distributions.hashCode();
        __h *= 1000003;
        __h ^= (dueDate == null) ? 0 : dueDate.hashCode();
        __h *= 1000003;
        __h ^= (installmentId == null) ? 0 : installmentId.hashCode();
        __h *= 1000003;
        __h ^= (paymentStatus == null) ? 0 : paymentStatus.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Installment{"
          + "amount=" + amount + ", "
          + "distributions=" + distributions + ", "
          + "dueDate=" + dueDate + ", "
          + "installmentId=" + installmentId + ", "
          + "paymentStatus=" + paymentStatus
          + "}";
      }
      return $toString;
    }
  }

  public static class Amount4 {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public Object amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Amount4(Object amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Amount4) {
        Amount4 that = (Amount4) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Amount4{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }

  public static class Distribution1 {
    /**
     * amount value for installment distribution item
     */
    public Amount5 amount;

    /**
     * type of installment distribution item (PARTNER_PAYMENT, COMMISSION, TRAVELER_SERVICE_FEE, etc)
     */
    public String type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Distribution1(Amount5 amount, String type) {
      this.amount = amount;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Distribution1) {
        Distribution1 that = (Distribution1) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Distribution1{"
          + "amount=" + amount + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }

  public static class Amount5 {
    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public Object amount;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Amount5(String currencyCode, Object amount) {
      this.currencyCode = currencyCode;
      this.amount = amount;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Amount5) {
        Amount5 that = (Amount5) o;
        return ((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode))
         &&((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Amount5{"
          + "currencyCode=" + currencyCode + ", "
          + "amount=" + amount
          + "}";
      }
      return $toString;
    }
  }

  public static class Instrument {
    /**
     * Payment Token and its expiration date time
     */
    public Token token;

    /**
     * Type for Payment Instrument
     */
    public PaymentInstrumentType type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Instrument(Token token, PaymentInstrumentType type) {
      this.token = token;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Instrument) {
        Instrument that = (Instrument) o;
        return ((this.token == null) ? (that.token == null) : this.token.equals(that.token))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (token == null) ? 0 : token.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Instrument{"
          + "token=" + token + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }

  public static class Token {
    /**
     * Expiration of the token
     */
    public String expirationDateTime;

    /**
     * Value of the token
     */
    public String value;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Token(String expirationDateTime, String value) {
      this.expirationDateTime = expirationDateTime;
      this.value = value;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Token) {
        Token that = (Token) o;
        return ((this.expirationDateTime == null) ? (that.expirationDateTime == null) : this.expirationDateTime.equals(that.expirationDateTime))
         &&((this.value == null) ? (that.value == null) : this.value.equals(that.value));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (expirationDateTime == null) ? 0 : expirationDateTime.hashCode();
        __h *= 1000003;
        __h ^= (value == null) ? 0 : value.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Token{"
          + "expirationDateTime=" + expirationDateTime + ", "
          + "value=" + value
          + "}";
      }
      return $toString;
    }
  }

  public static class Policies {
    /**
     * Penalty for cancelling the reservation
     */
    public CancellationPolicy1 cancellationPolicy;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Policies(CancellationPolicy1 cancellationPolicy) {
      this.cancellationPolicy = cancellationPolicy;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Policies) {
        Policies that = (Policies) o;
        return ((this.cancellationPolicy == null) ? (that.cancellationPolicy == null) : this.cancellationPolicy.equals(that.cancellationPolicy));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (cancellationPolicy == null) ? 0 : cancellationPolicy.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Policies{"
          + "cancellationPolicy=" + cancellationPolicy
          + "}";
      }
      return $toString;
    }
  }

  public static class CancellationPolicy1 {
    /**
     * The effective policy for the reservation
     */
    public EffectivePolicy1 effectivePolicy;

    public List<Tier1> tiers;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public CancellationPolicy1(EffectivePolicy1 effectivePolicy, List<Tier1> tiers) {
      this.effectivePolicy = effectivePolicy;
      this.tiers = tiers;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof CancellationPolicy1) {
        CancellationPolicy1 that = (CancellationPolicy1) o;
        return ((this.effectivePolicy == null) ? (that.effectivePolicy == null) : this.effectivePolicy.equals(that.effectivePolicy))
         &&((this.tiers == null) ? (that.tiers == null) : this.tiers.equals(that.tiers));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (effectivePolicy == null) ? 0 : effectivePolicy.hashCode();
        __h *= 1000003;
        __h ^= (tiers == null) ? 0 : tiers.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "CancellationPolicy1{"
          + "effectivePolicy=" + effectivePolicy + ", "
          + "tiers=" + tiers
          + "}";
      }
      return $toString;
    }
  }

  public static class EffectivePolicy1 {
    /**
     * The end date and time of the policy in UTC
     */
    public Object endDateTimeUtc;

    /**
     * The type of policy being applied. One of: REGULATORY_WAIVER
     */
    public String policyType;

    /**
     * The start date and time of the policy in UTC
     */
    public Object startDateTimeUtc;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public EffectivePolicy1(Object endDateTimeUtc, String policyType, Object startDateTimeUtc) {
      this.endDateTimeUtc = endDateTimeUtc;
      this.policyType = policyType;
      this.startDateTimeUtc = startDateTimeUtc;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof EffectivePolicy1) {
        EffectivePolicy1 that = (EffectivePolicy1) o;
        return ((this.endDateTimeUtc == null) ? (that.endDateTimeUtc == null) : this.endDateTimeUtc.equals(that.endDateTimeUtc))
         &&((this.policyType == null) ? (that.policyType == null) : this.policyType.equals(that.policyType))
         &&((this.startDateTimeUtc == null) ? (that.startDateTimeUtc == null) : this.startDateTimeUtc.equals(that.startDateTimeUtc));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (endDateTimeUtc == null) ? 0 : endDateTimeUtc.hashCode();
        __h *= 1000003;
        __h ^= (policyType == null) ? 0 : policyType.hashCode();
        __h *= 1000003;
        __h ^= (startDateTimeUtc == null) ? 0 : startDateTimeUtc.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "EffectivePolicy1{"
          + "endDateTimeUtc=" + endDateTimeUtc + ", "
          + "policyType=" + policyType + ", "
          + "startDateTimeUtc=" + startDateTimeUtc
          + "}";
      }
      return $toString;
    }
  }

  public static class Tier1 {
    public CancellationWindow1 cancellationWindow;

    public PenaltyRule1 penaltyRule;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Tier1(CancellationWindow1 cancellationWindow, PenaltyRule1 penaltyRule) {
      this.cancellationWindow = cancellationWindow;
      this.penaltyRule = penaltyRule;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Tier1) {
        Tier1 that = (Tier1) o;
        return ((this.cancellationWindow == null) ? (that.cancellationWindow == null) : this.cancellationWindow.equals(that.cancellationWindow))
         &&((this.penaltyRule == null) ? (that.penaltyRule == null) : this.penaltyRule.equals(that.penaltyRule));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (cancellationWindow == null) ? 0 : cancellationWindow.hashCode();
        __h *= 1000003;
        __h ^= (penaltyRule == null) ? 0 : penaltyRule.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Tier1{"
          + "cancellationWindow=" + cancellationWindow + ", "
          + "penaltyRule=" + penaltyRule
          + "}";
      }
      return $toString;
    }
  }

  public static class CancellationWindow1 {
    public Integer cutoff;

    public CancellationWindowTemporalUnit temporalUnit;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public CancellationWindow1(Integer cutoff, CancellationWindowTemporalUnit temporalUnit) {
      this.cutoff = cutoff;
      this.temporalUnit = temporalUnit;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof CancellationWindow1) {
        CancellationWindow1 that = (CancellationWindow1) o;
        return ((this.cutoff == null) ? (that.cutoff == null) : this.cutoff.equals(that.cutoff))
         &&((this.temporalUnit == null) ? (that.temporalUnit == null) : this.temporalUnit.equals(that.temporalUnit));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (cutoff == null) ? 0 : cutoff.hashCode();
        __h *= 1000003;
        __h ^= (temporalUnit == null) ? 0 : temporalUnit.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "CancellationWindow1{"
          + "cutoff=" + cutoff + ", "
          + "temporalUnit=" + temporalUnit
          + "}";
      }
      return $toString;
    }
  }

  public static class PenaltyRule1 {
    /**
     *  cancellation penalty amount for the reservation paid by the customer, minus the Expedia commission
     */
    public CostFlatAmount1 costFlatAmount;

    public Integer numberOfNights;

    /**
     *  Represented as a fraction of 1. Example: 15% should be represented as 0.15
     */
    public Double percentage;

    /**
     *  total cancellation penalty amount for the reservation paid by the customer, including the Expedia commission
     */
    public PriceAmount1 priceAmount;

    public CancellationPenaltyRuleType type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public PenaltyRule1(CostFlatAmount1 costFlatAmount, Integer numberOfNights, Double percentage,
        PriceAmount1 priceAmount, CancellationPenaltyRuleType type) {
      this.costFlatAmount = costFlatAmount;
      this.numberOfNights = numberOfNights;
      this.percentage = percentage;
      this.priceAmount = priceAmount;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof PenaltyRule1) {
        PenaltyRule1 that = (PenaltyRule1) o;
        return ((this.costFlatAmount == null) ? (that.costFlatAmount == null) : this.costFlatAmount.equals(that.costFlatAmount))
         &&((this.numberOfNights == null) ? (that.numberOfNights == null) : this.numberOfNights.equals(that.numberOfNights))
         &&((this.percentage == null) ? (that.percentage == null) : this.percentage.equals(that.percentage))
         &&((this.priceAmount == null) ? (that.priceAmount == null) : this.priceAmount.equals(that.priceAmount))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (costFlatAmount == null) ? 0 : costFlatAmount.hashCode();
        __h *= 1000003;
        __h ^= (numberOfNights == null) ? 0 : numberOfNights.hashCode();
        __h *= 1000003;
        __h ^= (percentage == null) ? 0 : percentage.hashCode();
        __h *= 1000003;
        __h ^= (priceAmount == null) ? 0 : priceAmount.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "PenaltyRule1{"
          + "costFlatAmount=" + costFlatAmount + ", "
          + "numberOfNights=" + numberOfNights + ", "
          + "percentage=" + percentage + ", "
          + "priceAmount=" + priceAmount + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }

  public static class CostFlatAmount1 {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public Object amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public CostFlatAmount1(Object amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof CostFlatAmount1) {
        CostFlatAmount1 that = (CostFlatAmount1) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "CostFlatAmount1{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }

  public static class PriceAmount1 {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public Object amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public PriceAmount1(Object amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof PriceAmount1) {
        PriceAmount1 that = (PriceAmount1) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "PriceAmount1{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }

  public static class PrimaryGuest1 {
    /**
     * Email address
     */
    public String emailAddress;

    public String firstName;

    public String lastName;

    /**
     * Guest loyalty tier. Values include MEMBER, VIP, PREMIUMVIP and null.
     */
    public String loyaltyTier;

    /**
     * The phone numbers of the guest
     */
    public List<PhoneNumber> phoneNumbers;

    /**
     * identifies the frequent customer reward program and (optionally) indicates points awarded for stay activity
     */
    public SupplierLoyaltyPlanInfo supplierLoyaltyPlanInfo;

    /**
     * Purpose of the reservation
     */
    public TravelPurpose travelPurpose;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public PrimaryGuest1(String emailAddress, String firstName, String lastName, String loyaltyTier,
        List<PhoneNumber> phoneNumbers, SupplierLoyaltyPlanInfo supplierLoyaltyPlanInfo,
        TravelPurpose travelPurpose) {
      this.emailAddress = emailAddress;
      this.firstName = firstName;
      this.lastName = lastName;
      this.loyaltyTier = loyaltyTier;
      this.phoneNumbers = phoneNumbers;
      this.supplierLoyaltyPlanInfo = supplierLoyaltyPlanInfo;
      this.travelPurpose = travelPurpose;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof PrimaryGuest1) {
        PrimaryGuest1 that = (PrimaryGuest1) o;
        return ((this.emailAddress == null) ? (that.emailAddress == null) : this.emailAddress.equals(that.emailAddress))
         &&((this.firstName == null) ? (that.firstName == null) : this.firstName.equals(that.firstName))
         &&((this.lastName == null) ? (that.lastName == null) : this.lastName.equals(that.lastName))
         &&((this.loyaltyTier == null) ? (that.loyaltyTier == null) : this.loyaltyTier.equals(that.loyaltyTier))
         &&((this.phoneNumbers == null) ? (that.phoneNumbers == null) : this.phoneNumbers.equals(that.phoneNumbers))
         &&((this.supplierLoyaltyPlanInfo == null) ? (that.supplierLoyaltyPlanInfo == null) : this.supplierLoyaltyPlanInfo.equals(that.supplierLoyaltyPlanInfo))
         &&((this.travelPurpose == null) ? (that.travelPurpose == null) : this.travelPurpose.equals(that.travelPurpose));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (emailAddress == null) ? 0 : emailAddress.hashCode();
        __h *= 1000003;
        __h ^= (firstName == null) ? 0 : firstName.hashCode();
        __h *= 1000003;
        __h ^= (lastName == null) ? 0 : lastName.hashCode();
        __h *= 1000003;
        __h ^= (loyaltyTier == null) ? 0 : loyaltyTier.hashCode();
        __h *= 1000003;
        __h ^= (phoneNumbers == null) ? 0 : phoneNumbers.hashCode();
        __h *= 1000003;
        __h ^= (supplierLoyaltyPlanInfo == null) ? 0 : supplierLoyaltyPlanInfo.hashCode();
        __h *= 1000003;
        __h ^= (travelPurpose == null) ? 0 : travelPurpose.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "PrimaryGuest1{"
          + "emailAddress=" + emailAddress + ", "
          + "firstName=" + firstName + ", "
          + "lastName=" + lastName + ", "
          + "loyaltyTier=" + loyaltyTier + ", "
          + "phoneNumbers=" + phoneNumbers + ", "
          + "supplierLoyaltyPlanInfo=" + supplierLoyaltyPlanInfo + ", "
          + "travelPurpose=" + travelPurpose
          + "}";
      }
      return $toString;
    }
  }

  public static class PhoneNumber {
    /**
     * Area Code (format: 074)
     */
    public String areaCode;

    /**
     * Country code (format: 44)
     */
    public String countryCode;

    /**
     * Phone number (format: 3737059)
     */
    public String number;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public PhoneNumber(String areaCode, String countryCode, String number) {
      this.areaCode = areaCode;
      this.countryCode = countryCode;
      this.number = number;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof PhoneNumber) {
        PhoneNumber that = (PhoneNumber) o;
        return ((this.areaCode == null) ? (that.areaCode == null) : this.areaCode.equals(that.areaCode))
         &&((this.countryCode == null) ? (that.countryCode == null) : this.countryCode.equals(that.countryCode))
         &&((this.number == null) ? (that.number == null) : this.number.equals(that.number));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (areaCode == null) ? 0 : areaCode.hashCode();
        __h *= 1000003;
        __h ^= (countryCode == null) ? 0 : countryCode.hashCode();
        __h *= 1000003;
        __h ^= (number == null) ? 0 : number.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "PhoneNumber{"
          + "areaCode=" + areaCode + ", "
          + "countryCode=" + countryCode + ", "
          + "number=" + number
          + "}";
      }
      return $toString;
    }
  }

  public static class SupplierLoyaltyPlanInfo {
    /**
     * membership number of the customer
     */
    public Integer membershipNumber;

    /**
     * identifies the customer reward program
     */
    public String planCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public SupplierLoyaltyPlanInfo(Integer membershipNumber, String planCode) {
      this.membershipNumber = membershipNumber;
      this.planCode = planCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof SupplierLoyaltyPlanInfo) {
        SupplierLoyaltyPlanInfo that = (SupplierLoyaltyPlanInfo) o;
        return ((this.membershipNumber == null) ? (that.membershipNumber == null) : this.membershipNumber.equals(that.membershipNumber))
         &&((this.planCode == null) ? (that.planCode == null) : this.planCode.equals(that.planCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (membershipNumber == null) ? 0 : membershipNumber.hashCode();
        __h *= 1000003;
        __h ^= (planCode == null) ? 0 : planCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "SupplierLoyaltyPlanInfo{"
          + "membershipNumber=" + membershipNumber + ", "
          + "planCode=" + planCode
          + "}";
      }
      return $toString;
    }
  }

  public static class RateId {
    public String id;

    public IdSource idSource;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public RateId(String id, IdSource idSource) {
      this.id = id;
      this.idSource = idSource;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof RateId) {
        RateId that = (RateId) o;
        return ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.idSource == null) ? (that.idSource == null) : this.idSource.equals(that.idSource));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (idSource == null) ? 0 : idSource.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "RateId{"
          + "id=" + id + ", "
          + "idSource=" + idSource
          + "}";
      }
      return $toString;
    }
  }

  public static class ReconciliationEligibility {
    /**
     * irreconcilable scenarios collection
     */
    public List<InvalidScenario> invalidScenarios;

    /**
     * Reconcilable scenarios
     */
    public List<String> validScenarios;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public ReconciliationEligibility(List<InvalidScenario> invalidScenarios,
        List<String> validScenarios) {
      this.invalidScenarios = invalidScenarios;
      this.validScenarios = validScenarios;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof ReconciliationEligibility) {
        ReconciliationEligibility that = (ReconciliationEligibility) o;
        return ((this.invalidScenarios == null) ? (that.invalidScenarios == null) : this.invalidScenarios.equals(that.invalidScenarios))
         &&((this.validScenarios == null) ? (that.validScenarios == null) : this.validScenarios.equals(that.validScenarios));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (invalidScenarios == null) ? 0 : invalidScenarios.hashCode();
        __h *= 1000003;
        __h ^= (validScenarios == null) ? 0 : validScenarios.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "ReconciliationEligibility{"
          + "invalidScenarios=" + invalidScenarios + ", "
          + "validScenarios=" + validScenarios
          + "}";
      }
      return $toString;
    }
  }

  public static class InvalidScenario {
    /**
     * Scenario reason in detail
     */
    public String reason;

    /**
     * Scenario name string
     */
    public String scenario;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public InvalidScenario(String reason, String scenario) {
      this.reason = reason;
      this.scenario = scenario;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof InvalidScenario) {
        InvalidScenario that = (InvalidScenario) o;
        return ((this.reason == null) ? (that.reason == null) : this.reason.equals(that.reason))
         &&((this.scenario == null) ? (that.scenario == null) : this.scenario.equals(that.scenario));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (reason == null) ? 0 : reason.hashCode();
        __h *= 1000003;
        __h ^= (scenario == null) ? 0 : scenario.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "InvalidScenario{"
          + "reason=" + reason + ", "
          + "scenario=" + scenario
          + "}";
      }
      return $toString;
    }
  }

  public static class ReservationId {
    public String id;

    public IdSource idSource;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public ReservationId(String id, IdSource idSource) {
      this.id = id;
      this.idSource = idSource;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof ReservationId) {
        ReservationId that = (ReservationId) o;
        return ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.idSource == null) ? (that.idSource == null) : this.idSource.equals(that.idSource));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (idSource == null) ? 0 : idSource.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "ReservationId{"
          + "id=" + id + ", "
          + "idSource=" + idSource
          + "}";
      }
      return $toString;
    }
  }

  public static class Statuses {
    /**
     * Status of the Reservation
     */
    public ReservationStatus status;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Statuses(ReservationStatus status) {
      this.status = status;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Statuses) {
        Statuses that = (Statuses) o;
        return ((this.status == null) ? (that.status == null) : this.status.equals(that.status));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (status == null) ? 0 : status.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Statuses{"
          + "status=" + status
          + "}";
      }
      return $toString;
    }
  }

  public static class StayDates {
    /**
     * the reservation's arrival date (format: YYYY-MM-DD)
     */
    public LocalDate checkInDate;

    /**
     * the reservation's departure date (format: YYYY-MM-DD)
     */
    public LocalDate checkOutDate;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public StayDates(LocalDate checkInDate, LocalDate checkOutDate) {
      this.checkInDate = checkInDate;
      this.checkOutDate = checkOutDate;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof StayDates) {
        StayDates that = (StayDates) o;
        return ((this.checkInDate == null) ? (that.checkInDate == null) : this.checkInDate.equals(that.checkInDate))
         &&((this.checkOutDate == null) ? (that.checkOutDate == null) : this.checkOutDate.equals(that.checkOutDate));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (checkInDate == null) ? 0 : checkInDate.hashCode();
        __h *= 1000003;
        __h ^= (checkOutDate == null) ? 0 : checkOutDate.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "StayDates{"
          + "checkInDate=" + checkInDate + ", "
          + "checkOutDate=" + checkOutDate
          + "}";
      }
      return $toString;
    }
  }

  public static class SupplierAmount {
    public String __typename;

    /**
     * the currency in which the amount is shown
     */
    public String currencyCode;

    /**
     * the rate type: NET for Expedia Collect and SELL for Hotel Collect
     */
    public RateType rateType;

    /**
     * Synthetic field for inline fragment on ExpediaSupplierAmount
     */
    public OnExpediaSupplierAmount onExpediaSupplierAmount;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public SupplierAmount(String __typename, String currencyCode, RateType rateType,
        OnExpediaSupplierAmount onExpediaSupplierAmount) {
      this.__typename = __typename;
      this.currencyCode = currencyCode;
      this.rateType = rateType;
      this.onExpediaSupplierAmount = onExpediaSupplierAmount;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof SupplierAmount) {
        SupplierAmount that = (SupplierAmount) o;
        return ((this.__typename == null) ? (that.__typename == null) : this.__typename.equals(that.__typename))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode))
         &&((this.rateType == null) ? (that.rateType == null) : this.rateType.equals(that.rateType))
         &&((this.onExpediaSupplierAmount == null) ? (that.onExpediaSupplierAmount == null) : this.onExpediaSupplierAmount.equals(that.onExpediaSupplierAmount));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (__typename == null) ? 0 : __typename.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        __h *= 1000003;
        __h ^= (rateType == null) ? 0 : rateType.hashCode();
        __h *= 1000003;
        __h ^= (onExpediaSupplierAmount == null) ? 0 : onExpediaSupplierAmount.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "SupplierAmount{"
          + "__typename=" + __typename + ", "
          + "currencyCode=" + currencyCode + ", "
          + "rateType=" + rateType + ", "
          + "onExpediaSupplierAmount=" + onExpediaSupplierAmount
          + "}";
      }
      return $toString;
    }
  }

  public static class OnExpediaSupplierAmount {
    /**
     * Currency in which the amount is shown.
     */
    public String currencyCode;

    /**
     * Rate type: NET for Expedia Collect or SELL for Hotel Collect.
     */
    public RateType rateType;

    /**
     * Daily rates for the reservation.
     */
    public List<Rate> rates;

    /**
     * Total rates for the reservation.
     */
    public Total total;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public OnExpediaSupplierAmount(String currencyCode, RateType rateType, List<Rate> rates,
        Total total) {
      this.currencyCode = currencyCode;
      this.rateType = rateType;
      this.rates = rates;
      this.total = total;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof OnExpediaSupplierAmount) {
        OnExpediaSupplierAmount that = (OnExpediaSupplierAmount) o;
        return ((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode))
         &&((this.rateType == null) ? (that.rateType == null) : this.rateType.equals(that.rateType))
         &&((this.rates == null) ? (that.rates == null) : this.rates.equals(that.rates))
         &&((this.total == null) ? (that.total == null) : this.total.equals(that.total));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        __h *= 1000003;
        __h ^= (rateType == null) ? 0 : rateType.hashCode();
        __h *= 1000003;
        __h ^= (rates == null) ? 0 : rates.hashCode();
        __h *= 1000003;
        __h ^= (total == null) ? 0 : total.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "OnExpediaSupplierAmount{"
          + "currencyCode=" + currencyCode + ", "
          + "rateType=" + rateType + ", "
          + "rates=" + rates + ", "
          + "total=" + total
          + "}";
      }
      return $toString;
    }
  }

  public static class Rate {
    /**
     * Compensation information associated to the reservation for this date range
     */
    public Compensation compensation;

    /**
     * Date when the rate becomes effective (format: YYYY-MM-DD).
     */
    public LocalDate fromDate;

    /**
     * Itemized list of fees.
     */
    public List<RateItem> rateItems;

    /**
     * Time unit of the rate.
     */
    public RateTimeUnit rateTimeUnit;

    /**
     * Date when the rate expires (format: YYYY-MM-DD).
     */
    public LocalDate toDate;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Rate(Compensation compensation, LocalDate fromDate, List<RateItem> rateItems,
        RateTimeUnit rateTimeUnit, LocalDate toDate) {
      this.compensation = compensation;
      this.fromDate = fromDate;
      this.rateItems = rateItems;
      this.rateTimeUnit = rateTimeUnit;
      this.toDate = toDate;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Rate) {
        Rate that = (Rate) o;
        return ((this.compensation == null) ? (that.compensation == null) : this.compensation.equals(that.compensation))
         &&((this.fromDate == null) ? (that.fromDate == null) : this.fromDate.equals(that.fromDate))
         &&((this.rateItems == null) ? (that.rateItems == null) : this.rateItems.equals(that.rateItems))
         &&((this.rateTimeUnit == null) ? (that.rateTimeUnit == null) : this.rateTimeUnit.equals(that.rateTimeUnit))
         &&((this.toDate == null) ? (that.toDate == null) : this.toDate.equals(that.toDate));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (compensation == null) ? 0 : compensation.hashCode();
        __h *= 1000003;
        __h ^= (fromDate == null) ? 0 : fromDate.hashCode();
        __h *= 1000003;
        __h ^= (rateItems == null) ? 0 : rateItems.hashCode();
        __h *= 1000003;
        __h ^= (rateTimeUnit == null) ? 0 : rateTimeUnit.hashCode();
        __h *= 1000003;
        __h ^= (toDate == null) ? 0 : toDate.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Rate{"
          + "compensation=" + compensation + ", "
          + "fromDate=" + fromDate + ", "
          + "rateItems=" + rateItems + ", "
          + "rateTimeUnit=" + rateTimeUnit + ", "
          + "toDate=" + toDate
          + "}";
      }
      return $toString;
    }
  }

  public static class Compensation {
    /**
     * Accelerator percentage, expressed as a fraction of 1 (so, for example, 0.25)
     */
    public Double acceleratorPercent;

    /**
     * Compensation base percentage, expressed as a fraction of 1 (so, for example, 0.25)
     */
    public Double basePercent;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Compensation(Double acceleratorPercent, Double basePercent) {
      this.acceleratorPercent = acceleratorPercent;
      this.basePercent = basePercent;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Compensation) {
        Compensation that = (Compensation) o;
        return ((this.acceleratorPercent == null) ? (that.acceleratorPercent == null) : this.acceleratorPercent.equals(that.acceleratorPercent))
         &&((this.basePercent == null) ? (that.basePercent == null) : this.basePercent.equals(that.basePercent));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (acceleratorPercent == null) ? 0 : acceleratorPercent.hashCode();
        __h *= 1000003;
        __h ^= (basePercent == null) ? 0 : basePercent.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Compensation{"
          + "acceleratorPercent=" + acceleratorPercent + ", "
          + "basePercent=" + basePercent
          + "}";
      }
      return $toString;
    }
  }

  public static class RateItem {
    /**
     * Amount of the fee.
     */
    public Double amount;

    /**
     * Type of fee for this itemized rate.
     */
    public SupplierFeeType feeType;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public RateItem(Double amount, SupplierFeeType feeType) {
      this.amount = amount;
      this.feeType = feeType;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof RateItem) {
        RateItem that = (RateItem) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.feeType == null) ? (that.feeType == null) : this.feeType.equals(that.feeType));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (feeType == null) ? 0 : feeType.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "RateItem{"
          + "amount=" + amount + ", "
          + "feeType=" + feeType
          + "}";
      }
      return $toString;
    }
  }

  public static class Total {
    /**
     * Total amount of the fee after tax is applied.
     */
    public Double amountAfterTax;

    /**
     * Total amount of the fee before tax is applied.
     */
    public Double amountBeforeTax;

    /**
     * Compensation information associated to the reservation
     */
    public Compensation1 compensation;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Total(Double amountAfterTax, Double amountBeforeTax, Compensation1 compensation) {
      this.amountAfterTax = amountAfterTax;
      this.amountBeforeTax = amountBeforeTax;
      this.compensation = compensation;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Total) {
        Total that = (Total) o;
        return ((this.amountAfterTax == null) ? (that.amountAfterTax == null) : this.amountAfterTax.equals(that.amountAfterTax))
         &&((this.amountBeforeTax == null) ? (that.amountBeforeTax == null) : this.amountBeforeTax.equals(that.amountBeforeTax))
         &&((this.compensation == null) ? (that.compensation == null) : this.compensation.equals(that.compensation));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amountAfterTax == null) ? 0 : amountAfterTax.hashCode();
        __h *= 1000003;
        __h ^= (amountBeforeTax == null) ? 0 : amountBeforeTax.hashCode();
        __h *= 1000003;
        __h ^= (compensation == null) ? 0 : compensation.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Total{"
          + "amountAfterTax=" + amountAfterTax + ", "
          + "amountBeforeTax=" + amountBeforeTax + ", "
          + "compensation=" + compensation
          + "}";
      }
      return $toString;
    }
  }

  public static class Compensation1 {
    /**
     * Accelerator percentage, expressed as a fraction of 1 (so, for example, 0.25)
     */
    public Double acceleratorPercent;

    /**
     * Compensation base percentage, expressed as a fraction of 1 (so, for example, 0.25)
     */
    public Double basePercent;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Compensation1(Double acceleratorPercent, Double basePercent) {
      this.acceleratorPercent = acceleratorPercent;
      this.basePercent = basePercent;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Compensation1) {
        Compensation1 that = (Compensation1) o;
        return ((this.acceleratorPercent == null) ? (that.acceleratorPercent == null) : this.acceleratorPercent.equals(that.acceleratorPercent))
         &&((this.basePercent == null) ? (that.basePercent == null) : this.basePercent.equals(that.basePercent));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (acceleratorPercent == null) ? 0 : acceleratorPercent.hashCode();
        __h *= 1000003;
        __h ^= (basePercent == null) ? 0 : basePercent.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Compensation1{"
          + "acceleratorPercent=" + acceleratorPercent + ", "
          + "basePercent=" + basePercent
          + "}";
      }
      return $toString;
    }
  }

  public static class UnitId {
    public String id;

    public IdSource idSource;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public UnitId(String id, IdSource idSource) {
      this.id = id;
      this.idSource = idSource;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof UnitId) {
        UnitId that = (UnitId) o;
        return ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.idSource == null) ? (that.idSource == null) : this.idSource.equals(that.idSource));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (idSource == null) ? 0 : idSource.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "UnitId{"
          + "id=" + id + ", "
          + "idSource=" + idSource
          + "}";
      }
      return $toString;
    }
  }

  public static class ValueAddedPromotion {
    /**
     * describes the promotion
     */
    public String description;

    /**
     * id of the promotion
     */
    public String id;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public ValueAddedPromotion(String description, String id) {
      this.description = description;
      this.id = id;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof ValueAddedPromotion) {
        ValueAddedPromotion that = (ValueAddedPromotion) o;
        return ((this.description == null) ? (that.description == null) : this.description.equals(that.description))
         &&((this.id == null) ? (that.id == null) : this.id.equals(that.id));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (description == null) ? 0 : description.hashCode();
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "ValueAddedPromotion{"
          + "description=" + description + ", "
          + "id=" + id
          + "}";
      }
      return $toString;
    }
  }

  public static class VrboAmounts {
    /**
     * Summary list of the reservation amounts
     */
    public List<Summary1> summary;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public VrboAmounts(List<Summary1> summary) {
      this.summary = summary;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof VrboAmounts) {
        VrboAmounts that = (VrboAmounts) o;
        return ((this.summary == null) ? (that.summary == null) : this.summary.equals(that.summary));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (summary == null) ? 0 : summary.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "VrboAmounts{"
          + "summary=" + summary
          + "}";
      }
      return $toString;
    }
  }

  public static class Summary1 {
    /**
     * amount value for reservation
     */
    public Amount6 amount;

    /**
     * product code for reservation amount
     */
    public String productCode;

    /**
     * Amount type (RENT, PARTNER_FEE, TRAVELER_SERVICE_FEE, PROPERTY_DAMAGE_PROTECTION, VRBO_REMITTED_LODGING_TAX, ...)
     */
    public String type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Summary1(Amount6 amount, String productCode, String type) {
      this.amount = amount;
      this.productCode = productCode;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Summary1) {
        Summary1 that = (Summary1) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.productCode == null) ? (that.productCode == null) : this.productCode.equals(that.productCode))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (productCode == null) ? 0 : productCode.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Summary1{"
          + "amount=" + amount + ", "
          + "productCode=" + productCode + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }

  public static class Amount6 {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public Object amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Amount6(Object amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Amount6) {
        Amount6 that = (Amount6) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Amount6{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }
}
