//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

public class UndeliveredNotificationsFiltersInput {
  public final Optional<Optional<String>> eventType;

  public final Optional<Optional<DateTimeRangeFilterInput>> creationDateTime;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public UndeliveredNotificationsFiltersInput(Optional<Optional<String>> eventType,
      Optional<Optional<DateTimeRangeFilterInput>> creationDateTime) {
    this.eventType = eventType;
    this.creationDateTime = creationDateTime;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof UndeliveredNotificationsFiltersInput) {
      UndeliveredNotificationsFiltersInput that = (UndeliveredNotificationsFiltersInput) o;
      return ((this.eventType == null) ? (that.eventType == null) : this.eventType.equals(that.eventType))
       &&((this.creationDateTime == null) ? (that.creationDateTime == null) : this.creationDateTime.equals(that.creationDateTime));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (eventType == null) ? 0 : eventType.hashCode();
      __h *= 1000003;
      __h ^= (creationDateTime == null) ? 0 : creationDateTime.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "UndeliveredNotificationsFiltersInput{"
        + "eventType=" + eventType + ", "
        + "creationDateTime=" + creationDateTime
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Optional<String>> eventType = Optional.empty();

    private Optional<Optional<DateTimeRangeFilterInput>> creationDateTime = Optional.empty();

    Builder() {
    }

    /**
     *  The event type 
     */
    public Builder eventType(@NotNull Optional<String> eventType) {
      this.eventType = Optional.of(eventType);
      return this;
    }

    public Builder creationDateTime(@NotNull Optional<DateTimeRangeFilterInput> creationDateTime) {
      this.creationDateTime = Optional.of(creationDateTime);
      return this;
    }

    public UndeliveredNotificationsFiltersInput build() {
      return new UndeliveredNotificationsFiltersInput(eventType, creationDateTime);
    }
  }
}
