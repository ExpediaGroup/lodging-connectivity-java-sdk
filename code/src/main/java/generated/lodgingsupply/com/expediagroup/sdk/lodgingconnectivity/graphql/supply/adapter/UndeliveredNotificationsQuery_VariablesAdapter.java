//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloOptionalAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.UndeliveredNotificationsQuery;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.UndeliveredNotificationsFiltersInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter.UndeliveredNotificationsFiltersInput_InputAdapter;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum UndeliveredNotificationsQuery_VariablesAdapter implements Adapter<UndeliveredNotificationsQuery> {
  INSTANCE;

  @Override
  public UndeliveredNotificationsQuery fromJson(JsonReader reader,
      CustomScalarAdapters customScalarAdapters) throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      UndeliveredNotificationsQuery value) throws IOException {
    writer.name("filters");
    new ObjectAdapter<UndeliveredNotificationsFiltersInput>(UndeliveredNotificationsFiltersInput_InputAdapter.INSTANCE, false).toJson(writer, customScalarAdapters, value.filters);
    if (value.cursor instanceof Optional.Present) {
      writer.name("cursor");
      new ApolloOptionalAdapter<>(Adapters.NullableStringAdapter).toJson(writer, customScalarAdapters, value.cursor);
    }
    if (value.limit instanceof Optional.Present) {
      writer.name("limit");
      new ApolloOptionalAdapter<>(Adapters.NullableIntAdapter).toJson(writer, customScalarAdapters, value.limit);
    }
  }
}
