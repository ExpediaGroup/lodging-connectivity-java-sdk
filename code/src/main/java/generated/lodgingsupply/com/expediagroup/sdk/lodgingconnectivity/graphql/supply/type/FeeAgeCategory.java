//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import com.apollographql.apollo.api.EnumType;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.Objects;

public class FeeAgeCategory {
  public static EnumType type = new EnumType("FeeAgeCategory", Arrays.asList("ADULT", "CHILD_A", "CHILD_B", "CHILD_C", "CHILD_D", "INFANT"));

  public static FeeAgeCategory ADULT = new FeeAgeCategory("ADULT");

  public static FeeAgeCategory CHILD_A = new FeeAgeCategory("CHILD_A");

  public static FeeAgeCategory CHILD_B = new FeeAgeCategory("CHILD_B");

  public static FeeAgeCategory CHILD_C = new FeeAgeCategory("CHILD_C");

  public static FeeAgeCategory CHILD_D = new FeeAgeCategory("CHILD_D");

  public static FeeAgeCategory INFANT = new FeeAgeCategory("INFANT");

  public String rawValue;

  private FeeAgeCategory(String rawValue) {
    this.rawValue = rawValue;
  }

  /**
   * Returns the FeeAgeCategory that represents the specified rawValue.
   * Note: unknown values of rawValue will return UNKNOWN__. You may want to update your schema instead of calling this method directly.
   */
  public static FeeAgeCategory safeValueOf(String rawValue) {
    switch (Objects.requireNonNull(rawValue)) {
      case "ADULT": return FeeAgeCategory.ADULT;
      case "CHILD_A": return FeeAgeCategory.CHILD_A;
      case "CHILD_B": return FeeAgeCategory.CHILD_B;
      case "CHILD_C": return FeeAgeCategory.CHILD_C;
      case "CHILD_D": return FeeAgeCategory.CHILD_D;
      case "INFANT": return FeeAgeCategory.INFANT;
      default: return new FeeAgeCategory.UNKNOWN__(rawValue);
    }
  }

  /**
   * An enum value that wasn't known at compile time.
   */
  public static class UNKNOWN__ extends FeeAgeCategory {
    private UNKNOWN__(String rawValue) {
      super(rawValue);
    }

    @Override
    public boolean equals(Object other) {
      if (this == other) return true;
      if (!(other instanceof UNKNOWN__)) return false;
      return rawValue.equals(((UNKNOWN__) other).rawValue);
    }

    @Override
    public int hashCode() {
      return rawValue.hashCode();
    }

    @Override
    public String toString() {
      return "UNKNOWN__(" + rawValue + ")";
    }
  }
}
