//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

public class UpdateEventsPolicyInput {
  public final Optional<Optional<Boolean>> allowed;

  public final Optional<Optional<AllowedEventsInput>> allowedEvents;

  public final Optional<Optional<List<LocalizedStringInput>>> note;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public UpdateEventsPolicyInput(Optional<Optional<Boolean>> allowed,
      Optional<Optional<AllowedEventsInput>> allowedEvents,
      Optional<Optional<List<LocalizedStringInput>>> note) {
    this.allowed = allowed;
    this.allowedEvents = allowedEvents;
    this.note = note;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof UpdateEventsPolicyInput) {
      UpdateEventsPolicyInput that = (UpdateEventsPolicyInput) o;
      return ((this.allowed == null) ? (that.allowed == null) : this.allowed.equals(that.allowed))
       &&((this.allowedEvents == null) ? (that.allowedEvents == null) : this.allowedEvents.equals(that.allowedEvents))
       &&((this.note == null) ? (that.note == null) : this.note.equals(that.note));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (allowed == null) ? 0 : allowed.hashCode();
      __h *= 1000003;
      __h ^= (allowedEvents == null) ? 0 : allowedEvents.hashCode();
      __h *= 1000003;
      __h ^= (note == null) ? 0 : note.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "UpdateEventsPolicyInput{"
        + "allowed=" + allowed + ", "
        + "allowedEvents=" + allowedEvents + ", "
        + "note=" + note
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Optional<Boolean>> allowed = Optional.empty();

    private Optional<Optional<AllowedEventsInput>> allowedEvents = Optional.empty();

    private Optional<Optional<List<LocalizedStringInput>>> note = Optional.empty();

    Builder() {
    }

    public Builder allowed(@NotNull Optional<Boolean> allowed) {
      this.allowed = Optional.of(allowed);
      return this;
    }

    public Builder allowedEvents(@NotNull Optional<AllowedEventsInput> allowedEvents) {
      this.allowedEvents = Optional.of(allowedEvents);
      return this;
    }

    public Builder note(@NotNull Optional<List<LocalizedStringInput>> note) {
      this.note = Optional.of(note);
      return this;
    }

    public UpdateEventsPolicyInput build() {
      return new UpdateEventsPolicyInput(allowed, allowedEvents, note);
    }
  }
}
