//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

public class ConfirmReservationNotificationInput {
  public final Optional<Optional<String>> clientMutationId;

  public final String propertyId;

  public final String reservationId;

  public final String confirmationToken;

  public final String actionType;

  public final String confirmationCode;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public ConfirmReservationNotificationInput(Optional<Optional<String>> clientMutationId,
      String propertyId, String reservationId, String confirmationToken, String actionType,
      String confirmationCode) {
    this.clientMutationId = clientMutationId;
    this.propertyId = propertyId;
    this.reservationId = reservationId;
    this.confirmationToken = confirmationToken;
    this.actionType = actionType;
    this.confirmationCode = confirmationCode;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof ConfirmReservationNotificationInput) {
      ConfirmReservationNotificationInput that = (ConfirmReservationNotificationInput) o;
      return ((this.clientMutationId == null) ? (that.clientMutationId == null) : this.clientMutationId.equals(that.clientMutationId))
       &&((this.propertyId == null) ? (that.propertyId == null) : this.propertyId.equals(that.propertyId))
       &&((this.reservationId == null) ? (that.reservationId == null) : this.reservationId.equals(that.reservationId))
       &&((this.confirmationToken == null) ? (that.confirmationToken == null) : this.confirmationToken.equals(that.confirmationToken))
       &&((this.actionType == null) ? (that.actionType == null) : this.actionType.equals(that.actionType))
       &&((this.confirmationCode == null) ? (that.confirmationCode == null) : this.confirmationCode.equals(that.confirmationCode));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (clientMutationId == null) ? 0 : clientMutationId.hashCode();
      __h *= 1000003;
      __h ^= (propertyId == null) ? 0 : propertyId.hashCode();
      __h *= 1000003;
      __h ^= (reservationId == null) ? 0 : reservationId.hashCode();
      __h *= 1000003;
      __h ^= (confirmationToken == null) ? 0 : confirmationToken.hashCode();
      __h *= 1000003;
      __h ^= (actionType == null) ? 0 : actionType.hashCode();
      __h *= 1000003;
      __h ^= (confirmationCode == null) ? 0 : confirmationCode.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "ConfirmReservationNotificationInput{"
        + "clientMutationId=" + clientMutationId + ", "
        + "propertyId=" + propertyId + ", "
        + "reservationId=" + reservationId + ", "
        + "confirmationToken=" + confirmationToken + ", "
        + "actionType=" + actionType + ", "
        + "confirmationCode=" + confirmationCode
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Optional<String>> clientMutationId = Optional.empty();

    private String propertyId;

    private String reservationId;

    private String confirmationToken;

    private String actionType;

    private String confirmationCode;

    Builder() {
    }

    /**
     * Partner supplied Unique mutation identifier
     */
    public Builder clientMutationId(@NotNull Optional<String> clientMutationId) {
      this.clientMutationId = Optional.of(clientMutationId);
      return this;
    }

    /**
     * Property ID with which this reservation is associated
     */
    public Builder propertyId(String propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    /**
     * Reservation identifier
     */
    public Builder reservationId(String reservationId) {
      this.reservationId = reservationId;
      return this;
    }

    /**
     * Webhook supplied reservation confirmation token
     */
    public Builder confirmationToken(String confirmationToken) {
      this.confirmationToken = confirmationToken;
      return this;
    }

    /**
     * Reservation action type (BOOKED, CANCELLED, MODIFIED)
     */
    public Builder actionType(String actionType) {
      this.actionType = actionType;
      return this;
    }

    /**
     * Partner supplied reservation confirmation code
     */
    public Builder confirmationCode(String confirmationCode) {
      this.confirmationCode = confirmationCode;
      return this;
    }

    public ConfirmReservationNotificationInput build() {
      return new ConfirmReservationNotificationInput(clientMutationId, propertyId, reservationId, confirmationToken, actionType, confirmationCode);
    }
  }
}
