//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.CompiledField;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter.PropertyListingsQuery_ResponseAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter.PropertyListingsQuery_VariablesAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.selections.PropertyListingsQuerySelections;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;

public class PropertyListingsQuery implements Query<PropertyListingsQuery.Data> {
  public static final String OPERATION_ID = "09edb3ce3fbd3abd1913132ccec9d1ad8c58265ff571b446a2bf857f15bf1bad";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query PropertyListings($propertyId: String!, $domains: [String!]!) {
   *   property(id: $propertyId) {
   *     listings(domains: $domains) {
   *       locale
   *       url
   *     }
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query PropertyListings($propertyId: String!, $domains: [String!]!) { property(id: $propertyId) { listings(domains: $domains) { locale url } } }";

  public static final String OPERATION_NAME = "PropertyListings";

  public final String propertyId;

  public final List<String> domains;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public PropertyListingsQuery(String propertyId, List<String> domains) {
    this.propertyId = propertyId;
    this.domains = domains;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof PropertyListingsQuery) {
      PropertyListingsQuery that = (PropertyListingsQuery) o;
      return ((this.propertyId == null) ? (that.propertyId == null) : this.propertyId.equals(that.propertyId))
       &&((this.domains == null) ? (that.domains == null) : this.domains.equals(that.domains));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (propertyId == null) ? 0 : propertyId.hashCode();
      __h *= 1000003;
      __h ^= (domains == null) ? 0 : domains.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "PropertyListingsQuery{"
        + "propertyId=" + propertyId + ", "
        + "domains=" + domains
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withDefaultValues) throws IOException {
    PropertyListingsQuery_VariablesAdapter.INSTANCE.serializeVariables(writer, this, customScalarAdapters, withDefaultValues);
  }

  @Override
  public Adapter<Data> adapter() {
    return new ObjectAdapter<Data>(PropertyListingsQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Query.type
    )
    .selections(PropertyListingsQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    private String propertyId;

    private List<String> domains;

    Builder() {
    }

    public Builder propertyId(String propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    public Builder domains(List<String> domains) {
      this.domains = domains;
      return this;
    }

    public PropertyListingsQuery build() {
      return new PropertyListingsQuery(propertyId, domains);
    }
  }

  public static class Data implements Query.Data {
    public Optional<Property> property;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Data(Optional<Property> property) {
      this.property = property;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.property == null) ? (that.property == null) : this.property.equals(that.property));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (property == null) ? 0 : property.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "property=" + property
          + "}";
      }
      return $toString;
    }
  }

  public static class Property {
    /**
     * Listings of the property on the requested domains, supported domains: [expedia.com, vrbo.com]
     */
    public Optional<List<Optional<Listing>>> listings;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Property(Optional<List<Optional<Listing>>> listings) {
      this.listings = listings;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Property) {
        Property that = (Property) o;
        return ((this.listings == null) ? (that.listings == null) : this.listings.equals(that.listings));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (listings == null) ? 0 : listings.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Property{"
          + "listings=" + listings
          + "}";
      }
      return $toString;
    }
  }

  public static class Listing {
    /**
     * Locale for the property listing on the requested domain
     */
    public Optional<String> locale;

    /**
     * URL listing the property when the property is enabled and distributed on the requested domain
     */
    public Optional<String> url;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Listing(Optional<String> locale, Optional<String> url) {
      this.locale = locale;
      this.url = url;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Listing) {
        Listing that = (Listing) o;
        return ((this.locale == null) ? (that.locale == null) : this.locale.equals(that.locale))
         &&((this.url == null) ? (that.url == null) : this.url.equals(that.url));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (locale == null) ? 0 : locale.hashCode();
        __h *= 1000003;
        __h ^= (url == null) ? 0 : url.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Listing{"
          + "locale=" + locale + ", "
          + "url=" + url
          + "}";
      }
      return $toString;
    }
  }
}
