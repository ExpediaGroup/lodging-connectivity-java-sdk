//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.Adapters;
import com.apollographql.apollo.api.Assertions;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.NullableAdapter;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.UpdateNotificationCallbackConfigMutation;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.EmailAddress;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.net.URL;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

public class UpdateNotificationCallbackConfigMutation_ResponseAdapter {
  public enum Data implements Adapter<UpdateNotificationCallbackConfigMutation.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("updateNotificationCallbackConfig");

    @Override
    public UpdateNotificationCallbackConfigMutation.Data fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      UpdateNotificationCallbackConfigMutation.UpdateNotificationCallbackConfig _updateNotificationCallbackConfig = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _updateNotificationCallbackConfig = new NullableAdapter<>(new ObjectAdapter<UpdateNotificationCallbackConfigMutation.UpdateNotificationCallbackConfig>(UpdateNotificationCallbackConfig.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new UpdateNotificationCallbackConfigMutation.Data(
        _updateNotificationCallbackConfig
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        UpdateNotificationCallbackConfigMutation.Data value) throws IOException {
      writer.name("updateNotificationCallbackConfig");
      new NullableAdapter<>(new ObjectAdapter<UpdateNotificationCallbackConfigMutation.UpdateNotificationCallbackConfig>(UpdateNotificationCallbackConfig.INSTANCE, false)).toJson(writer, customScalarAdapters, value.updateNotificationCallbackConfig);
    }
  }

  public enum UpdateNotificationCallbackConfig implements Adapter<UpdateNotificationCallbackConfigMutation.UpdateNotificationCallbackConfig> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("callbackConfig");

    @Override
    public UpdateNotificationCallbackConfigMutation.UpdateNotificationCallbackConfig fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      UpdateNotificationCallbackConfigMutation.CallbackConfig _callbackConfig = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _callbackConfig = new ObjectAdapter<UpdateNotificationCallbackConfigMutation.CallbackConfig>(CallbackConfig.INSTANCE, false).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_callbackConfig, "callbackConfig");

      return new UpdateNotificationCallbackConfigMutation.UpdateNotificationCallbackConfig(
        _callbackConfig
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        UpdateNotificationCallbackConfigMutation.UpdateNotificationCallbackConfig value) throws
        IOException {
      writer.name("callbackConfig");
      new ObjectAdapter<UpdateNotificationCallbackConfigMutation.CallbackConfig>(CallbackConfig.INSTANCE, false).toJson(writer, customScalarAdapters, value.callbackConfig);
    }
  }

  public enum CallbackConfig implements Adapter<UpdateNotificationCallbackConfigMutation.CallbackConfig> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("id", "contactEmail", "callbackUrl", "requestTimeoutSeconds", "secretExpirationDateTime");

    @Override
    public UpdateNotificationCallbackConfigMutation.CallbackConfig fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String _id = null;
      String _contactEmail = null;
      URL _callbackUrl = null;
      Integer _requestTimeoutSeconds = null;
      LocalDateTime _secretExpirationDateTime = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _id = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _contactEmail = new NullableAdapter<>((customScalarAdapters.<String>responseAdapterFor(EmailAddress.type))).fromJson(reader, customScalarAdapters); break;
          case 2: _callbackUrl = com.expediagroup.sdk.lodgingconnectivity.graphql.adapter.URLAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          case 3: _requestTimeoutSeconds = Adapters.IntAdapter.fromJson(reader, customScalarAdapters); break;
          case 4: _secretExpirationDateTime = com.apollographql.adapter.core.JavaLocalDateTimeAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_id, "id");
      Assertions.checkFieldNotMissing(_callbackUrl, "callbackUrl");
      Assertions.checkFieldNotMissing(_requestTimeoutSeconds, "requestTimeoutSeconds");
      Assertions.checkFieldNotMissing(_secretExpirationDateTime, "secretExpirationDateTime");

      return new UpdateNotificationCallbackConfigMutation.CallbackConfig(
        _id,
        _contactEmail,
        _callbackUrl,
        _requestTimeoutSeconds,
        _secretExpirationDateTime
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        UpdateNotificationCallbackConfigMutation.CallbackConfig value) throws IOException {
      writer.name("id");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.id);

      writer.name("contactEmail");
      new NullableAdapter<>((customScalarAdapters.<String>responseAdapterFor(EmailAddress.type))).toJson(writer, customScalarAdapters, value.contactEmail);

      writer.name("callbackUrl");
      com.expediagroup.sdk.lodgingconnectivity.graphql.adapter.URLAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.callbackUrl);

      writer.name("requestTimeoutSeconds");
      Adapters.IntAdapter.toJson(writer, customScalarAdapters, value.requestTimeoutSeconds);

      writer.name("secretExpirationDateTime");
      com.apollographql.adapter.core.JavaLocalDateTimeAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.secretExpirationDateTime);
    }
  }
}
