//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.Adapters;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ListAdapter;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CancellationPolicyInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CancellationPolicyOverrideInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CreateCancellationPolicyConfigInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.MoneyInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum CreateCancellationPolicyConfigInput_InputAdapter implements Adapter<CreateCancellationPolicyConfigInput> {
  INSTANCE;

  @Override
  public CreateCancellationPolicyConfigInput fromJson(JsonReader reader,
      CustomScalarAdapters customScalarAdapters) throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      CreateCancellationPolicyConfigInput value) throws IOException {
    if (value.additionalCancellationFee.isPresent()) {
      writer.name("additionalCancellationFee");
      new OptionalAdapter<>(new OptionalAdapter<>(new ObjectAdapter<MoneyInput>(MoneyInput_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, value.additionalCancellationFee);
    }
    if (value.clientMutationId.isPresent()) {
      writer.name("clientMutationId");
      new OptionalAdapter<>(OptionalAdapters.OptionalStringAdapter).toJson(writer, customScalarAdapters, value.clientMutationId);
    }
    writer.name("defaultPolicies");
    new ListAdapter<>(new ObjectAdapter<CancellationPolicyInput>(CancellationPolicyInput_InputAdapter.INSTANCE, false)).toJson(writer, customScalarAdapters, value.defaultPolicies);
    writer.name("name");
    Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.name);
    if (value.overridePolicies.isPresent()) {
      writer.name("overridePolicies");
      new OptionalAdapter<>(new OptionalAdapter<>(new ListAdapter<>(new ObjectAdapter<CancellationPolicyOverrideInput>(CancellationPolicyOverrideInput_InputAdapter.INSTANCE, false)))).toJson(writer, customScalarAdapters, value.overridePolicies);
    }
    writer.name("propertyId");
    Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.propertyId);
  }
}
