//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.Adapters;
import com.apollographql.apollo.api.Assertions;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ListAdapter;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.ArchivePropertyIdsMutation;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter.OptionalAdapter;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;

public class ArchivePropertyIdsMutation_ResponseAdapter {
  public enum Data implements Adapter<ArchivePropertyIdsMutation.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("archivePropertyIds");

    @Override
    public ArchivePropertyIdsMutation.Data fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      Optional<ArchivePropertyIdsMutation.ArchivePropertyIds> _archivePropertyIds = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _archivePropertyIds = new OptionalAdapter<>(new ObjectAdapter<ArchivePropertyIdsMutation.ArchivePropertyIds>(ArchivePropertyIds.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new ArchivePropertyIdsMutation.Data(
        _archivePropertyIds
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        ArchivePropertyIdsMutation.Data value) throws IOException {
      writer.name("archivePropertyIds");
      new OptionalAdapter<>(new ObjectAdapter<ArchivePropertyIdsMutation.ArchivePropertyIds>(ArchivePropertyIds.INSTANCE, false)).toJson(writer, customScalarAdapters, value.archivePropertyIds);
    }
  }

  public enum ArchivePropertyIds implements Adapter<ArchivePropertyIdsMutation.ArchivePropertyIds> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("advertiserId", "propertyIdsToArchive");

    @Override
    public ArchivePropertyIdsMutation.ArchivePropertyIds fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String _advertiserId = null;
      List<String> _propertyIdsToArchive = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _advertiserId = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _propertyIdsToArchive = new ListAdapter<>(Adapters.StringAdapter).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_advertiserId, "advertiserId");
      Assertions.checkFieldNotMissing(_propertyIdsToArchive, "propertyIdsToArchive");

      return new ArchivePropertyIdsMutation.ArchivePropertyIds(
        _advertiserId,
        _propertyIdsToArchive
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        ArchivePropertyIdsMutation.ArchivePropertyIds value) throws IOException {
      writer.name("advertiserId");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.advertiserId);

      writer.name("propertyIdsToArchive");
      new ListAdapter<>(Adapters.StringAdapter).toJson(writer, customScalarAdapters, value.propertyIdsToArchive);
    }
  }
}
