//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.PropertyMessageThreadsOrderByInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum PropertyMessageThreadsOrderByInput_InputAdapter implements Adapter<PropertyMessageThreadsOrderByInput> {
  INSTANCE;

  @Override
  public PropertyMessageThreadsOrderByInput fromJson(JsonReader reader,
      CustomScalarAdapters customScalarAdapters) throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      PropertyMessageThreadsOrderByInput value) throws IOException {
    if (value.field.isPresent()) {
      writer.name("field");
      new OptionalAdapter<>(new OptionalAdapter<>(PropertyMessageThreadsSortField_ResponseAdapter.INSTANCE)).toJson(writer, customScalarAdapters, value.field);
    }
    if (value.order.isPresent()) {
      writer.name("order");
      new OptionalAdapter<>(new OptionalAdapter<>(SortOrder_ResponseAdapter.INSTANCE)).toJson(writer, customScalarAdapters, value.order);
    }
  }
}
