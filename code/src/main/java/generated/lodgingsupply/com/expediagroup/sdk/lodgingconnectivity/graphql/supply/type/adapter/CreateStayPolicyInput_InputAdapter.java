//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ListAdapter;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CreateCheckInPolicyInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CreateCheckOutPolicyInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CreateChildrenPolicyInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CreateCustomStayPolicyInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CreateEventsPolicyInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CreateMaxOccupancyPolicyInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CreatePetsPolicyInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CreateSmokingPolicyInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CreateStayPolicyInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum CreateStayPolicyInput_InputAdapter implements Adapter<CreateStayPolicyInput> {
  INSTANCE;

  @Override
  public CreateStayPolicyInput fromJson(JsonReader reader,
      CustomScalarAdapters customScalarAdapters) throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      CreateStayPolicyInput value) throws IOException {
    writer.name("checkInPolicy");
    new ObjectAdapter<CreateCheckInPolicyInput>(CreateCheckInPolicyInput_InputAdapter.INSTANCE, false).toJson(writer, customScalarAdapters, value.checkInPolicy);
    writer.name("checkOutPolicy");
    new ObjectAdapter<CreateCheckOutPolicyInput>(CreateCheckOutPolicyInput_InputAdapter.INSTANCE, false).toJson(writer, customScalarAdapters, value.checkOutPolicy);
    if (value.childrenPolicy.isPresent()) {
      writer.name("childrenPolicy");
      new OptionalAdapter<>(new OptionalAdapter<>(new ObjectAdapter<CreateChildrenPolicyInput>(CreateChildrenPolicyInput_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, value.childrenPolicy);
    }
    if (value.customPolicies.isPresent()) {
      writer.name("customPolicies");
      new OptionalAdapter<>(new OptionalAdapter<>(new ListAdapter<>(new ObjectAdapter<CreateCustomStayPolicyInput>(CreateCustomStayPolicyInput_InputAdapter.INSTANCE, false)))).toJson(writer, customScalarAdapters, value.customPolicies);
    }
    if (value.eventsPolicy.isPresent()) {
      writer.name("eventsPolicy");
      new OptionalAdapter<>(new OptionalAdapter<>(new ObjectAdapter<CreateEventsPolicyInput>(CreateEventsPolicyInput_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, value.eventsPolicy);
    }
    writer.name("maxOccupancyPolicy");
    new ObjectAdapter<CreateMaxOccupancyPolicyInput>(CreateMaxOccupancyPolicyInput_InputAdapter.INSTANCE, false).toJson(writer, customScalarAdapters, value.maxOccupancyPolicy);
    if (value.petsPolicy.isPresent()) {
      writer.name("petsPolicy");
      new OptionalAdapter<>(new OptionalAdapter<>(new ObjectAdapter<CreatePetsPolicyInput>(CreatePetsPolicyInput_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, value.petsPolicy);
    }
    if (value.rentalAgreementUrl.isPresent()) {
      writer.name("rentalAgreementUrl");
      new OptionalAdapter<>(new OptionalAdapter<>(com.expediagroup.sdk.lodgingconnectivity.graphql.adapter.URLAdapter.INSTANCE)).toJson(writer, customScalarAdapters, value.rentalAgreementUrl);
    }
    if (value.smokingPolicy.isPresent()) {
      writer.name("smokingPolicy");
      new OptionalAdapter<>(new OptionalAdapter<>(new ObjectAdapter<CreateSmokingPolicyInput>(CreateSmokingPolicyInput_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, value.smokingPolicy);
    }
  }
}
