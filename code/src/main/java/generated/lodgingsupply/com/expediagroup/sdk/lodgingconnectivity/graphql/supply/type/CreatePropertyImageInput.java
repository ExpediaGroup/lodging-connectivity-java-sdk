//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import com.apollographql.apollo3.api.Optional;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;

public class CreatePropertyImageInput {
  public final Optional<Boolean> active;

  public final Optional<List<LocalizedStringInput>> captions;

  public final Optional<String> clientMutationId;

  public final Optional<Boolean> featured;

  public final Optional<String> fileName;

  public final String fileUrl;

  public final Optional<Integer> order;

  public final String propertyId;

  public final Optional<Integer> rotation;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public CreatePropertyImageInput(Optional<Boolean> active,
      Optional<List<LocalizedStringInput>> captions, Optional<String> clientMutationId,
      Optional<Boolean> featured, Optional<String> fileName, String fileUrl,
      Optional<Integer> order, String propertyId, Optional<Integer> rotation) {
    this.active = active;
    this.captions = captions;
    this.clientMutationId = clientMutationId;
    this.featured = featured;
    this.fileName = fileName;
    this.fileUrl = fileUrl;
    this.order = order;
    this.propertyId = propertyId;
    this.rotation = rotation;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof CreatePropertyImageInput) {
      CreatePropertyImageInput that = (CreatePropertyImageInput) o;
      return ((this.active == null) ? (that.active == null) : this.active.equals(that.active))
       &&((this.captions == null) ? (that.captions == null) : this.captions.equals(that.captions))
       &&((this.clientMutationId == null) ? (that.clientMutationId == null) : this.clientMutationId.equals(that.clientMutationId))
       &&((this.featured == null) ? (that.featured == null) : this.featured.equals(that.featured))
       &&((this.fileName == null) ? (that.fileName == null) : this.fileName.equals(that.fileName))
       &&((this.fileUrl == null) ? (that.fileUrl == null) : this.fileUrl.equals(that.fileUrl))
       &&((this.order == null) ? (that.order == null) : this.order.equals(that.order))
       &&((this.propertyId == null) ? (that.propertyId == null) : this.propertyId.equals(that.propertyId))
       &&((this.rotation == null) ? (that.rotation == null) : this.rotation.equals(that.rotation));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (active == null) ? 0 : active.hashCode();
      __h *= 1000003;
      __h ^= (captions == null) ? 0 : captions.hashCode();
      __h *= 1000003;
      __h ^= (clientMutationId == null) ? 0 : clientMutationId.hashCode();
      __h *= 1000003;
      __h ^= (featured == null) ? 0 : featured.hashCode();
      __h *= 1000003;
      __h ^= (fileName == null) ? 0 : fileName.hashCode();
      __h *= 1000003;
      __h ^= (fileUrl == null) ? 0 : fileUrl.hashCode();
      __h *= 1000003;
      __h ^= (order == null) ? 0 : order.hashCode();
      __h *= 1000003;
      __h ^= (propertyId == null) ? 0 : propertyId.hashCode();
      __h *= 1000003;
      __h ^= (rotation == null) ? 0 : rotation.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "CreatePropertyImageInput{"
        + "active=" + active + ", "
        + "captions=" + captions + ", "
        + "clientMutationId=" + clientMutationId + ", "
        + "featured=" + featured + ", "
        + "fileName=" + fileName + ", "
        + "fileUrl=" + fileUrl + ", "
        + "order=" + order + ", "
        + "propertyId=" + propertyId + ", "
        + "rotation=" + rotation
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Boolean> active = Optional.absent();

    private Optional<List<LocalizedStringInput>> captions = Optional.absent();

    private Optional<String> clientMutationId = Optional.absent();

    private Optional<Boolean> featured = Optional.absent();

    private Optional<String> fileName = Optional.absent();

    private String fileUrl;

    private Optional<Integer> order = Optional.absent();

    private String propertyId;

    private Optional<Integer> rotation = Optional.absent();

    Builder() {
    }

    public Builder active(Boolean active) {
      this.active = Optional.present(active);
      return this;
    }

    public Builder captions(List<LocalizedStringInput> captions) {
      this.captions = Optional.present(captions);
      return this;
    }

    public Builder clientMutationId(String clientMutationId) {
      this.clientMutationId = Optional.present(clientMutationId);
      return this;
    }

    public Builder featured(Boolean featured) {
      this.featured = Optional.present(featured);
      return this;
    }

    /**
     * Original file name of the image. If the file name is not provided, one will be automatically generated.
     */
    public Builder fileName(String fileName) {
      this.fileName = Optional.present(fileName);
      return this;
    }

    public Builder fileUrl(String fileUrl) {
      this.fileUrl = fileUrl;
      return this;
    }

    public Builder order(Integer order) {
      this.order = Optional.present(order);
      return this;
    }

    public Builder propertyId(String propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    public Builder rotation(Integer rotation) {
      this.rotation = Optional.present(rotation);
      return this;
    }

    public CreatePropertyImageInput build() {
      return new CreatePropertyImageInput(active, captions, clientMutationId, featured, fileName, fileUrl, order, propertyId, rotation);
    }
  }
}
