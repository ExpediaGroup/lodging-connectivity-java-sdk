//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.CompiledField;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter.PropertyPromotionsQuery_ResponseAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter.PropertyPromotionsQuery_VariablesAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.selections.PropertyPromotionsQuerySelections;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.DiscountType;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.DiscountUnit;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FiltersInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.PromotionCategory;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.PromotionName;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.PromotionSellStatus;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.PromotionStatus;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.List;
import java.util.Optional;

public class PropertyPromotionsQuery implements Query<PropertyPromotionsQuery.Data> {
  public static final String OPERATION_ID = "ba5f195a6dd5737628e933ff0b3976fe81fbce58c0260a7cb4d5549dc39265fa";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query PropertyPromotions($propertyId: String!, $filter: FiltersInput, $pageSize: Int!, $after: String) {
   *   property(id: $propertyId) {
   *     promotions(pageSize: $pageSize, after: $after, filter: $filter) {
   *       totalCount
   *       pageInfo {
   *         endCursor
   *         hasNextPage
   *       }
   *       edges {
   *         cursor
   *         node {
   *           __typename
   *           category
   *           id
   *           isContractedPromotion
   *           name
   *           sellStatus
   *           status
   *           ... on DiscountPromotion {
   *             blackoutDates {
   *               travelDateFrom
   *               travelDateTo
   *             }
   *             category
   *             code
   *             discount {
   *               __typename
   *               type
   *               unit
   *               ... on DayOfWeekDiscount {
   *                 type
   *                 unit
   *                 monday
   *                 tuesday
   *                 wednesday
   *                 thursday
   *                 friday
   *                 saturday
   *                 sunday
   *               }
   *               ... on MultiNightDiscount {
   *                 type
   *                 unit
   *                 value
   *                 memberOnlyAdditionalValue
   *                 applicableNight
   *                 isRecurring
   *               }
   *               ... on SingleDiscount {
   *                 type
   *                 unit
   *                 value
   *                 memberOnlyAdditionalValue
   *               }
   *             }
   *             eligibleRatePlans {
   *               id
   *             }
   *             id
   *             isContractedPromotion
   *             name
   *             restrictions {
   *               bookingLocalDateTimeFrom
   *               bookingLocalDateTimeTo
   *               sameDayBookingStartTime
   *               travelDateFrom
   *               isMemberOnly
   *               isMobileUserOnly
   *               maxAdvanceBookingDays
   *               maxLengthOfStay
   *               minAdvanceBookingDays
   *               minLengthOfStay
   *               travelDateTo
   *             }
   *             sellStatus
   *             status
   *           }
   *         }
   *       }
   *     }
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query PropertyPromotions($propertyId: String!, $filter: FiltersInput, $pageSize: Int!, $after: String) { property(id: $propertyId) { promotions(pageSize: $pageSize, after: $after, filter: $filter) { totalCount pageInfo { endCursor hasNextPage } edges { cursor node { __typename category id isContractedPromotion name sellStatus status ... on DiscountPromotion { blackoutDates { travelDateFrom travelDateTo } category code discount { __typename type unit ... on DayOfWeekDiscount { type unit monday tuesday wednesday thursday friday saturday sunday } ... on MultiNightDiscount { type unit value memberOnlyAdditionalValue applicableNight isRecurring } ... on SingleDiscount { type unit value memberOnlyAdditionalValue } } eligibleRatePlans { id } id isContractedPromotion name restrictions { bookingLocalDateTimeFrom bookingLocalDateTimeTo sameDayBookingStartTime travelDateFrom isMemberOnly isMobileUserOnly maxAdvanceBookingDays maxLengthOfStay minAdvanceBookingDays minLengthOfStay travelDateTo } sellStatus status } } } } } }";

  public static final String OPERATION_NAME = "PropertyPromotions";

  public final String propertyId;

  public final Optional<FiltersInput> filter;

  public final Integer pageSize;

  public final Optional<String> after;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public PropertyPromotionsQuery(String propertyId, Optional<FiltersInput> filter, Integer pageSize,
      Optional<String> after) {
    this.propertyId = propertyId;
    this.filter = filter;
    this.pageSize = pageSize;
    this.after = after;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof PropertyPromotionsQuery) {
      PropertyPromotionsQuery that = (PropertyPromotionsQuery) o;
      return ((this.propertyId == null) ? (that.propertyId == null) : this.propertyId.equals(that.propertyId))
       &&((this.filter == null) ? (that.filter == null) : this.filter.equals(that.filter))
       &&((this.pageSize == null) ? (that.pageSize == null) : this.pageSize.equals(that.pageSize))
       &&((this.after == null) ? (that.after == null) : this.after.equals(that.after));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (propertyId == null) ? 0 : propertyId.hashCode();
      __h *= 1000003;
      __h ^= (filter == null) ? 0 : filter.hashCode();
      __h *= 1000003;
      __h ^= (pageSize == null) ? 0 : pageSize.hashCode();
      __h *= 1000003;
      __h ^= (after == null) ? 0 : after.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "PropertyPromotionsQuery{"
        + "propertyId=" + propertyId + ", "
        + "filter=" + filter + ", "
        + "pageSize=" + pageSize + ", "
        + "after=" + after
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withDefaultValues) throws IOException {
    PropertyPromotionsQuery_VariablesAdapter.INSTANCE.serializeVariables(writer, this, customScalarAdapters, withDefaultValues);
  }

  @Override
  public Adapter<Data> adapter() {
    return new ObjectAdapter<Data>(PropertyPromotionsQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Query.type
    )
    .selections(PropertyPromotionsQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    private String propertyId;

    private Optional<FiltersInput> filter = Optional.empty();

    private Integer pageSize;

    private Optional<String> after = Optional.empty();

    Builder() {
    }

    public Builder propertyId(String propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    public Builder filter(FiltersInput filter) {
      this.filter = Optional.of(filter);
      return this;
    }

    public Builder pageSize(Integer pageSize) {
      this.pageSize = pageSize;
      return this;
    }

    public Builder after(String after) {
      this.after = Optional.of(after);
      return this;
    }

    public PropertyPromotionsQuery build() {
      return new PropertyPromotionsQuery(propertyId, filter, pageSize, after);
    }
  }

  public static class Data implements Query.Data {
    public Optional<Property> property;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Data(Optional<Property> property) {
      this.property = property;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.property == null) ? (that.property == null) : this.property.equals(that.property));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (property == null) ? 0 : property.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "property=" + property
          + "}";
      }
      return $toString;
    }
  }

  public static class Property {
    public Promotions promotions;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Property(Promotions promotions) {
      this.promotions = promotions;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Property) {
        Property that = (Property) o;
        return ((this.promotions == null) ? (that.promotions == null) : this.promotions.equals(that.promotions));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (promotions == null) ? 0 : promotions.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Property{"
          + "promotions=" + promotions
          + "}";
      }
      return $toString;
    }
  }

  public static class Promotions {
    /**
     * Total number of promotions returned that meet the search criteria.
     */
    public Integer totalCount;

    /**
     * Information about the current page of results.
     */
    public PageInfo pageInfo;

    /**
     * Edges in the connection to traverse, each contain a cursor and node.
     */
    public List<Edge> edges;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Promotions(Integer totalCount, PageInfo pageInfo, List<Edge> edges) {
      this.totalCount = totalCount;
      this.pageInfo = pageInfo;
      this.edges = edges;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Promotions) {
        Promotions that = (Promotions) o;
        return ((this.totalCount == null) ? (that.totalCount == null) : this.totalCount.equals(that.totalCount))
         &&((this.pageInfo == null) ? (that.pageInfo == null) : this.pageInfo.equals(that.pageInfo))
         &&((this.edges == null) ? (that.edges == null) : this.edges.equals(that.edges));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (totalCount == null) ? 0 : totalCount.hashCode();
        __h *= 1000003;
        __h ^= (pageInfo == null) ? 0 : pageInfo.hashCode();
        __h *= 1000003;
        __h ^= (edges == null) ? 0 : edges.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Promotions{"
          + "totalCount=" + totalCount + ", "
          + "pageInfo=" + pageInfo + ", "
          + "edges=" + edges
          + "}";
      }
      return $toString;
    }
  }

  public static class PageInfo {
    /**
     * Value of the cursor of the last promotion in the current page.
     */
    public Optional<String> endCursor;

    /**
     * It indicates if there are additional pages to retrieve.
     */
    public Boolean hasNextPage;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public PageInfo(Optional<String> endCursor, Boolean hasNextPage) {
      this.endCursor = endCursor;
      this.hasNextPage = hasNextPage;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof PageInfo) {
        PageInfo that = (PageInfo) o;
        return ((this.endCursor == null) ? (that.endCursor == null) : this.endCursor.equals(that.endCursor))
         &&((this.hasNextPage == null) ? (that.hasNextPage == null) : this.hasNextPage.equals(that.hasNextPage));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (endCursor == null) ? 0 : endCursor.hashCode();
        __h *= 1000003;
        __h ^= (hasNextPage == null) ? 0 : hasNextPage.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "PageInfo{"
          + "endCursor=" + endCursor + ", "
          + "hasNextPage=" + hasNextPage
          + "}";
      }
      return $toString;
    }
  }

  public static class Edge {
    /**
     * Cursor value for this edge.
     */
    public String cursor;

    /**
     * node points to the actual promotion data.
     */
    public Node node;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Edge(String cursor, Node node) {
      this.cursor = cursor;
      this.node = node;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Edge) {
        Edge that = (Edge) o;
        return ((this.cursor == null) ? (that.cursor == null) : this.cursor.equals(that.cursor))
         &&((this.node == null) ? (that.node == null) : this.node.equals(that.node));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (cursor == null) ? 0 : cursor.hashCode();
        __h *= 1000003;
        __h ^= (node == null) ? 0 : node.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Edge{"
          + "cursor=" + cursor + ", "
          + "node=" + node
          + "}";
      }
      return $toString;
    }
  }

  public static class Node {
    public String __typename;

    /**
     * Category of the promotion. Currently only DISCOUNT_PROMOTION is supported (i.e Priced Promotions).
     */
    public PromotionCategory category;

    /**
     * Id of the Promotion as stored in the Expedia platform.
     */
    public String id;

    /**
     * It indicates if the promotion is negotiated.
     */
    public Optional<Boolean> isContractedPromotion;

    /**
     * Name of the promotion. Values: BASIC, EARLY_BOOKING_PROMOTION or SAME_DAY_PROMOTION.
     */
    public PromotionName name;

    /**
     * Sell status of the promotion. Values: EXPIRED, CURRENT or FUTURE. For retrieval only.
     */
    public Optional<PromotionSellStatus> sellStatus;

    /**
     * Status of the promotion. Values: ACTIVE or INACTIVE.
     */
    public PromotionStatus status;

    /**
     * Synthetic field for inline fragment on DiscountPromotion
     */
    public Optional<OnDiscountPromotion> onDiscountPromotion;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Node(String __typename, PromotionCategory category, String id,
        Optional<Boolean> isContractedPromotion, PromotionName name,
        Optional<PromotionSellStatus> sellStatus, PromotionStatus status,
        Optional<OnDiscountPromotion> onDiscountPromotion) {
      this.__typename = __typename;
      this.category = category;
      this.id = id;
      this.isContractedPromotion = isContractedPromotion;
      this.name = name;
      this.sellStatus = sellStatus;
      this.status = status;
      this.onDiscountPromotion = onDiscountPromotion;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Node) {
        Node that = (Node) o;
        return ((this.__typename == null) ? (that.__typename == null) : this.__typename.equals(that.__typename))
         &&((this.category == null) ? (that.category == null) : this.category.equals(that.category))
         &&((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.isContractedPromotion == null) ? (that.isContractedPromotion == null) : this.isContractedPromotion.equals(that.isContractedPromotion))
         &&((this.name == null) ? (that.name == null) : this.name.equals(that.name))
         &&((this.sellStatus == null) ? (that.sellStatus == null) : this.sellStatus.equals(that.sellStatus))
         &&((this.status == null) ? (that.status == null) : this.status.equals(that.status))
         &&((this.onDiscountPromotion == null) ? (that.onDiscountPromotion == null) : this.onDiscountPromotion.equals(that.onDiscountPromotion));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (__typename == null) ? 0 : __typename.hashCode();
        __h *= 1000003;
        __h ^= (category == null) ? 0 : category.hashCode();
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (isContractedPromotion == null) ? 0 : isContractedPromotion.hashCode();
        __h *= 1000003;
        __h ^= (name == null) ? 0 : name.hashCode();
        __h *= 1000003;
        __h ^= (sellStatus == null) ? 0 : sellStatus.hashCode();
        __h *= 1000003;
        __h ^= (status == null) ? 0 : status.hashCode();
        __h *= 1000003;
        __h ^= (onDiscountPromotion == null) ? 0 : onDiscountPromotion.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Node{"
          + "__typename=" + __typename + ", "
          + "category=" + category + ", "
          + "id=" + id + ", "
          + "isContractedPromotion=" + isContractedPromotion + ", "
          + "name=" + name + ", "
          + "sellStatus=" + sellStatus + ", "
          + "status=" + status + ", "
          + "onDiscountPromotion=" + onDiscountPromotion
          + "}";
      }
      return $toString;
    }
  }

  public static class OnDiscountPromotion {
    /**
     * The 'exception' dates for which the promotion should NOT apply.
     * This field will not be returned in the Query All promotions functionality and will ONLY be returned when querying for a Single Promotion (by specifying the promotion Id).
     */
    public Optional<List<BlackoutDate>> blackoutDates;

    /**
     * Category of the promotion. Currently only DISCOUNT_PROMOTION is supported (i.e Priced Promotions).
     */
    public PromotionCategory category;

    /**
     * Name of the promotion as the partner wants to call it.
     */
    public String code;

    /**
     * Detail of the actual discount being applied on the promotion.
     */
    public Optional<Discount> discount;

    /**
     * The rate plans for which this promotion is applicable for.
     */
    public List<EligibleRatePlan> eligibleRatePlans;

    /**
     * Id of the Promotion as stored in the Expedia platform.
     */
    public String id;

    /**
     * It indicates if the promotion is negotiated.
     */
    public Optional<Boolean> isContractedPromotion;

    /**
     * Name of the promotion. Values: BASIC, EARLY_BOOKING_PROMOTION or SAME_DAY_PROMOTION.
     */
    public PromotionName name;

    /**
     * List of restrictions that can be applied to these promotions.
     */
    public Optional<Restrictions> restrictions;

    /**
     * Sell status of the promotion. Values: EXPIRED, CURRENT or FUTURE. For retrieval only.
     */
    public Optional<PromotionSellStatus> sellStatus;

    /**
     * Status of the promotion. Values: ACTIVE or INACTIVE.
     */
    public PromotionStatus status;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public OnDiscountPromotion(Optional<List<BlackoutDate>> blackoutDates,
        PromotionCategory category, String code, Optional<Discount> discount,
        List<EligibleRatePlan> eligibleRatePlans, String id,
        Optional<Boolean> isContractedPromotion, PromotionName name,
        Optional<Restrictions> restrictions, Optional<PromotionSellStatus> sellStatus,
        PromotionStatus status) {
      this.blackoutDates = blackoutDates;
      this.category = category;
      this.code = code;
      this.discount = discount;
      this.eligibleRatePlans = eligibleRatePlans;
      this.id = id;
      this.isContractedPromotion = isContractedPromotion;
      this.name = name;
      this.restrictions = restrictions;
      this.sellStatus = sellStatus;
      this.status = status;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof OnDiscountPromotion) {
        OnDiscountPromotion that = (OnDiscountPromotion) o;
        return ((this.blackoutDates == null) ? (that.blackoutDates == null) : this.blackoutDates.equals(that.blackoutDates))
         &&((this.category == null) ? (that.category == null) : this.category.equals(that.category))
         &&((this.code == null) ? (that.code == null) : this.code.equals(that.code))
         &&((this.discount == null) ? (that.discount == null) : this.discount.equals(that.discount))
         &&((this.eligibleRatePlans == null) ? (that.eligibleRatePlans == null) : this.eligibleRatePlans.equals(that.eligibleRatePlans))
         &&((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.isContractedPromotion == null) ? (that.isContractedPromotion == null) : this.isContractedPromotion.equals(that.isContractedPromotion))
         &&((this.name == null) ? (that.name == null) : this.name.equals(that.name))
         &&((this.restrictions == null) ? (that.restrictions == null) : this.restrictions.equals(that.restrictions))
         &&((this.sellStatus == null) ? (that.sellStatus == null) : this.sellStatus.equals(that.sellStatus))
         &&((this.status == null) ? (that.status == null) : this.status.equals(that.status));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (blackoutDates == null) ? 0 : blackoutDates.hashCode();
        __h *= 1000003;
        __h ^= (category == null) ? 0 : category.hashCode();
        __h *= 1000003;
        __h ^= (code == null) ? 0 : code.hashCode();
        __h *= 1000003;
        __h ^= (discount == null) ? 0 : discount.hashCode();
        __h *= 1000003;
        __h ^= (eligibleRatePlans == null) ? 0 : eligibleRatePlans.hashCode();
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (isContractedPromotion == null) ? 0 : isContractedPromotion.hashCode();
        __h *= 1000003;
        __h ^= (name == null) ? 0 : name.hashCode();
        __h *= 1000003;
        __h ^= (restrictions == null) ? 0 : restrictions.hashCode();
        __h *= 1000003;
        __h ^= (sellStatus == null) ? 0 : sellStatus.hashCode();
        __h *= 1000003;
        __h ^= (status == null) ? 0 : status.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "OnDiscountPromotion{"
          + "blackoutDates=" + blackoutDates + ", "
          + "category=" + category + ", "
          + "code=" + code + ", "
          + "discount=" + discount + ", "
          + "eligibleRatePlans=" + eligibleRatePlans + ", "
          + "id=" + id + ", "
          + "isContractedPromotion=" + isContractedPromotion + ", "
          + "name=" + name + ", "
          + "restrictions=" + restrictions + ", "
          + "sellStatus=" + sellStatus + ", "
          + "status=" + status
          + "}";
      }
      return $toString;
    }
  }

  public static class BlackoutDate {
    /**
     * The travel start date for the exception window.
     */
    public LocalDate travelDateFrom;

    /**
     * The travel end date for the exception window.
     */
    public LocalDate travelDateTo;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public BlackoutDate(LocalDate travelDateFrom, LocalDate travelDateTo) {
      this.travelDateFrom = travelDateFrom;
      this.travelDateTo = travelDateTo;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof BlackoutDate) {
        BlackoutDate that = (BlackoutDate) o;
        return ((this.travelDateFrom == null) ? (that.travelDateFrom == null) : this.travelDateFrom.equals(that.travelDateFrom))
         &&((this.travelDateTo == null) ? (that.travelDateTo == null) : this.travelDateTo.equals(that.travelDateTo));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (travelDateFrom == null) ? 0 : travelDateFrom.hashCode();
        __h *= 1000003;
        __h ^= (travelDateTo == null) ? 0 : travelDateTo.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "BlackoutDate{"
          + "travelDateFrom=" + travelDateFrom + ", "
          + "travelDateTo=" + travelDateTo
          + "}";
      }
      return $toString;
    }
  }

  public static class Discount {
    public String __typename;

    /**
     * Type of the discount.
     */
    public DiscountType type;

    /**
     * Unit of the discount. Currently only PERCENT is supported for MVP for Create and Update. AMOUNT promotions are supported only for Read.
     */
    public DiscountUnit unit;

    /**
     * Synthetic field for inline fragment on DayOfWeekDiscount
     */
    public Optional<OnDayOfWeekDiscount> onDayOfWeekDiscount;

    /**
     * Synthetic field for inline fragment on MultiNightDiscount
     */
    public Optional<OnMultiNightDiscount> onMultiNightDiscount;

    /**
     * Synthetic field for inline fragment on SingleDiscount
     */
    public Optional<OnSingleDiscount> onSingleDiscount;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Discount(String __typename, DiscountType type, DiscountUnit unit,
        Optional<OnDayOfWeekDiscount> onDayOfWeekDiscount,
        Optional<OnMultiNightDiscount> onMultiNightDiscount,
        Optional<OnSingleDiscount> onSingleDiscount) {
      this.__typename = __typename;
      this.type = type;
      this.unit = unit;
      this.onDayOfWeekDiscount = onDayOfWeekDiscount;
      this.onMultiNightDiscount = onMultiNightDiscount;
      this.onSingleDiscount = onSingleDiscount;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Discount) {
        Discount that = (Discount) o;
        return ((this.__typename == null) ? (that.__typename == null) : this.__typename.equals(that.__typename))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type))
         &&((this.unit == null) ? (that.unit == null) : this.unit.equals(that.unit))
         &&((this.onDayOfWeekDiscount == null) ? (that.onDayOfWeekDiscount == null) : this.onDayOfWeekDiscount.equals(that.onDayOfWeekDiscount))
         &&((this.onMultiNightDiscount == null) ? (that.onMultiNightDiscount == null) : this.onMultiNightDiscount.equals(that.onMultiNightDiscount))
         &&((this.onSingleDiscount == null) ? (that.onSingleDiscount == null) : this.onSingleDiscount.equals(that.onSingleDiscount));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (__typename == null) ? 0 : __typename.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        __h *= 1000003;
        __h ^= (unit == null) ? 0 : unit.hashCode();
        __h *= 1000003;
        __h ^= (onDayOfWeekDiscount == null) ? 0 : onDayOfWeekDiscount.hashCode();
        __h *= 1000003;
        __h ^= (onMultiNightDiscount == null) ? 0 : onMultiNightDiscount.hashCode();
        __h *= 1000003;
        __h ^= (onSingleDiscount == null) ? 0 : onSingleDiscount.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Discount{"
          + "__typename=" + __typename + ", "
          + "type=" + type + ", "
          + "unit=" + unit + ", "
          + "onDayOfWeekDiscount=" + onDayOfWeekDiscount + ", "
          + "onMultiNightDiscount=" + onMultiNightDiscount + ", "
          + "onSingleDiscount=" + onSingleDiscount
          + "}";
      }
      return $toString;
    }
  }

  public static class OnDayOfWeekDiscount {
    /**
     * Type of the discount.
     */
    public DiscountType type;

    /**
     * Unit of the discount. Currently only PERCENT is supported for MVP for Create and Update. AMOUNT promotions are supported only for Read.
     */
    public DiscountUnit unit;

    public Double monday;

    public Double tuesday;

    public Double wednesday;

    public Double thursday;

    public Double friday;

    public Double saturday;

    public Double sunday;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public OnDayOfWeekDiscount(DiscountType type, DiscountUnit unit, Double monday, Double tuesday,
        Double wednesday, Double thursday, Double friday, Double saturday, Double sunday) {
      this.type = type;
      this.unit = unit;
      this.monday = monday;
      this.tuesday = tuesday;
      this.wednesday = wednesday;
      this.thursday = thursday;
      this.friday = friday;
      this.saturday = saturday;
      this.sunday = sunday;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof OnDayOfWeekDiscount) {
        OnDayOfWeekDiscount that = (OnDayOfWeekDiscount) o;
        return ((this.type == null) ? (that.type == null) : this.type.equals(that.type))
         &&((this.unit == null) ? (that.unit == null) : this.unit.equals(that.unit))
         &&((this.monday == null) ? (that.monday == null) : this.monday.equals(that.monday))
         &&((this.tuesday == null) ? (that.tuesday == null) : this.tuesday.equals(that.tuesday))
         &&((this.wednesday == null) ? (that.wednesday == null) : this.wednesday.equals(that.wednesday))
         &&((this.thursday == null) ? (that.thursday == null) : this.thursday.equals(that.thursday))
         &&((this.friday == null) ? (that.friday == null) : this.friday.equals(that.friday))
         &&((this.saturday == null) ? (that.saturday == null) : this.saturday.equals(that.saturday))
         &&((this.sunday == null) ? (that.sunday == null) : this.sunday.equals(that.sunday));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        __h *= 1000003;
        __h ^= (unit == null) ? 0 : unit.hashCode();
        __h *= 1000003;
        __h ^= (monday == null) ? 0 : monday.hashCode();
        __h *= 1000003;
        __h ^= (tuesday == null) ? 0 : tuesday.hashCode();
        __h *= 1000003;
        __h ^= (wednesday == null) ? 0 : wednesday.hashCode();
        __h *= 1000003;
        __h ^= (thursday == null) ? 0 : thursday.hashCode();
        __h *= 1000003;
        __h ^= (friday == null) ? 0 : friday.hashCode();
        __h *= 1000003;
        __h ^= (saturday == null) ? 0 : saturday.hashCode();
        __h *= 1000003;
        __h ^= (sunday == null) ? 0 : sunday.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "OnDayOfWeekDiscount{"
          + "type=" + type + ", "
          + "unit=" + unit + ", "
          + "monday=" + monday + ", "
          + "tuesday=" + tuesday + ", "
          + "wednesday=" + wednesday + ", "
          + "thursday=" + thursday + ", "
          + "friday=" + friday + ", "
          + "saturday=" + saturday + ", "
          + "sunday=" + sunday
          + "}";
      }
      return $toString;
    }
  }

  public static class OnMultiNightDiscount {
    /**
     * Type of the discount.
     */
    public DiscountType type;

    /**
     * Unit of the discount. Currently only PERCENT is supported for MVP for Create and Update. AMOUNT promotions are supported only for Read.
     */
    public DiscountUnit unit;

    /**
     * Value of the discount applied.
     */
    public Double value;

    /**
     * Member only discount value applied
     */
    public Optional<Double> memberOnlyAdditionalValue;

    /**
     * Value of the applicable night on which the discount will be applied. Values permitted: 2 to 28
     */
    public Integer applicableNight;

    /**
     * Whether the discount applied on the applicable night is recurring
     */
    public Optional<Boolean> isRecurring;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public OnMultiNightDiscount(DiscountType type, DiscountUnit unit, Double value,
        Optional<Double> memberOnlyAdditionalValue, Integer applicableNight,
        Optional<Boolean> isRecurring) {
      this.type = type;
      this.unit = unit;
      this.value = value;
      this.memberOnlyAdditionalValue = memberOnlyAdditionalValue;
      this.applicableNight = applicableNight;
      this.isRecurring = isRecurring;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof OnMultiNightDiscount) {
        OnMultiNightDiscount that = (OnMultiNightDiscount) o;
        return ((this.type == null) ? (that.type == null) : this.type.equals(that.type))
         &&((this.unit == null) ? (that.unit == null) : this.unit.equals(that.unit))
         &&((this.value == null) ? (that.value == null) : this.value.equals(that.value))
         &&((this.memberOnlyAdditionalValue == null) ? (that.memberOnlyAdditionalValue == null) : this.memberOnlyAdditionalValue.equals(that.memberOnlyAdditionalValue))
         &&((this.applicableNight == null) ? (that.applicableNight == null) : this.applicableNight.equals(that.applicableNight))
         &&((this.isRecurring == null) ? (that.isRecurring == null) : this.isRecurring.equals(that.isRecurring));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        __h *= 1000003;
        __h ^= (unit == null) ? 0 : unit.hashCode();
        __h *= 1000003;
        __h ^= (value == null) ? 0 : value.hashCode();
        __h *= 1000003;
        __h ^= (memberOnlyAdditionalValue == null) ? 0 : memberOnlyAdditionalValue.hashCode();
        __h *= 1000003;
        __h ^= (applicableNight == null) ? 0 : applicableNight.hashCode();
        __h *= 1000003;
        __h ^= (isRecurring == null) ? 0 : isRecurring.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "OnMultiNightDiscount{"
          + "type=" + type + ", "
          + "unit=" + unit + ", "
          + "value=" + value + ", "
          + "memberOnlyAdditionalValue=" + memberOnlyAdditionalValue + ", "
          + "applicableNight=" + applicableNight + ", "
          + "isRecurring=" + isRecurring
          + "}";
      }
      return $toString;
    }
  }

  public static class OnSingleDiscount {
    /**
     * Type of the discount.
     */
    public DiscountType type;

    /**
     * Unit of the discount. Currently only PERCENT is supported for MVP for Create and Update. AMOUNT promotions are supported only for Read.
     */
    public DiscountUnit unit;

    /**
     * Value of the discount applied.
     */
    public Double value;

    /**
     * Member only discount value applied
     */
    public Optional<Double> memberOnlyAdditionalValue;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public OnSingleDiscount(DiscountType type, DiscountUnit unit, Double value,
        Optional<Double> memberOnlyAdditionalValue) {
      this.type = type;
      this.unit = unit;
      this.value = value;
      this.memberOnlyAdditionalValue = memberOnlyAdditionalValue;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof OnSingleDiscount) {
        OnSingleDiscount that = (OnSingleDiscount) o;
        return ((this.type == null) ? (that.type == null) : this.type.equals(that.type))
         &&((this.unit == null) ? (that.unit == null) : this.unit.equals(that.unit))
         &&((this.value == null) ? (that.value == null) : this.value.equals(that.value))
         &&((this.memberOnlyAdditionalValue == null) ? (that.memberOnlyAdditionalValue == null) : this.memberOnlyAdditionalValue.equals(that.memberOnlyAdditionalValue));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        __h *= 1000003;
        __h ^= (unit == null) ? 0 : unit.hashCode();
        __h *= 1000003;
        __h ^= (value == null) ? 0 : value.hashCode();
        __h *= 1000003;
        __h ^= (memberOnlyAdditionalValue == null) ? 0 : memberOnlyAdditionalValue.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "OnSingleDiscount{"
          + "type=" + type + ", "
          + "unit=" + unit + ", "
          + "value=" + value + ", "
          + "memberOnlyAdditionalValue=" + memberOnlyAdditionalValue
          + "}";
      }
      return $toString;
    }
  }

  public static class EligibleRatePlan {
    /**
     * Id of the rate plan as stored in the Expedia platform.
     */
    public String id;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public EligibleRatePlan(String id) {
      this.id = id;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof EligibleRatePlan) {
        EligibleRatePlan that = (EligibleRatePlan) o;
        return ((this.id == null) ? (that.id == null) : this.id.equals(that.id));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "EligibleRatePlan{"
          + "id=" + id
          + "}";
      }
      return $toString;
    }
  }

  public static class Restrictions {
    /**
     * The Booking Date Time from which this promotion is applicable.
     * YYYY-MM-DDThh:mm:ss . Timezone is the time with respect to the property location.
     */
    public Optional<LocalDateTime> bookingLocalDateTimeFrom;

    /**
     * The Booking Date Time until which this promotion is applicable.
     * YYYY-MM-DDThh:mm:ss . Timezone is the time with respect to the property location.
     */
    public Optional<LocalDateTime> bookingLocalDateTimeTo;

    /**
     * Applicable only for SAME_DAY_PROMOTION. The start time for the same day from which the promotion is applicable.
     * The timezone in consideration will be the local time for the property the promotion is applied for.
     */
    public Optional<LocalTime> sameDayBookingStartTime;

    /**
     * The Travel date from which this promotion is applicable in YYYY-MM-DD format.
     */
    public Optional<LocalDate> travelDateFrom;

    /**
     * Setting this to true indicates that the promotion is targeted exclusively towards Expedia Group members whose loyalty drives bookings.
     */
    public Optional<Boolean> isMemberOnly;

    /**
     * It indicates if this promotion is applicable only for travelers booking on the mobile device.
     * This field will be null in the Query All promotions functionality and will ONLY be returned when querying for a Single Promotion (by specifying the promotion Id).
     */
    public Optional<Boolean> isMobileUserOnly;

    /**
     * The maximum number of days in advance the reservation must be made for the promotion to be applicable.
     */
    public Optional<Integer> maxAdvanceBookingDays;

    /**
     * The maximum duration of stay for which the promotion can be applicable. The maximum value possible here is 28.
     */
    public Optional<Integer> maxLengthOfStay;

    /**
     * The minimum number of days in advance the reservation must be made for the promotion to be applicable.
     */
    public Optional<Integer> minAdvanceBookingDays;

    /**
     * The minimum duration of stay for which the promotion can be applicable.
     */
    public Optional<Integer> minLengthOfStay;

    /**
     * The Travel date until which this promotion is applicable in YYYY-MM-DD format.
     */
    public Optional<LocalDate> travelDateTo;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Restrictions(Optional<LocalDateTime> bookingLocalDateTimeFrom,
        Optional<LocalDateTime> bookingLocalDateTimeTo, Optional<LocalTime> sameDayBookingStartTime,
        Optional<LocalDate> travelDateFrom, Optional<Boolean> isMemberOnly,
        Optional<Boolean> isMobileUserOnly, Optional<Integer> maxAdvanceBookingDays,
        Optional<Integer> maxLengthOfStay, Optional<Integer> minAdvanceBookingDays,
        Optional<Integer> minLengthOfStay, Optional<LocalDate> travelDateTo) {
      this.bookingLocalDateTimeFrom = bookingLocalDateTimeFrom;
      this.bookingLocalDateTimeTo = bookingLocalDateTimeTo;
      this.sameDayBookingStartTime = sameDayBookingStartTime;
      this.travelDateFrom = travelDateFrom;
      this.isMemberOnly = isMemberOnly;
      this.isMobileUserOnly = isMobileUserOnly;
      this.maxAdvanceBookingDays = maxAdvanceBookingDays;
      this.maxLengthOfStay = maxLengthOfStay;
      this.minAdvanceBookingDays = minAdvanceBookingDays;
      this.minLengthOfStay = minLengthOfStay;
      this.travelDateTo = travelDateTo;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Restrictions) {
        Restrictions that = (Restrictions) o;
        return ((this.bookingLocalDateTimeFrom == null) ? (that.bookingLocalDateTimeFrom == null) : this.bookingLocalDateTimeFrom.equals(that.bookingLocalDateTimeFrom))
         &&((this.bookingLocalDateTimeTo == null) ? (that.bookingLocalDateTimeTo == null) : this.bookingLocalDateTimeTo.equals(that.bookingLocalDateTimeTo))
         &&((this.sameDayBookingStartTime == null) ? (that.sameDayBookingStartTime == null) : this.sameDayBookingStartTime.equals(that.sameDayBookingStartTime))
         &&((this.travelDateFrom == null) ? (that.travelDateFrom == null) : this.travelDateFrom.equals(that.travelDateFrom))
         &&((this.isMemberOnly == null) ? (that.isMemberOnly == null) : this.isMemberOnly.equals(that.isMemberOnly))
         &&((this.isMobileUserOnly == null) ? (that.isMobileUserOnly == null) : this.isMobileUserOnly.equals(that.isMobileUserOnly))
         &&((this.maxAdvanceBookingDays == null) ? (that.maxAdvanceBookingDays == null) : this.maxAdvanceBookingDays.equals(that.maxAdvanceBookingDays))
         &&((this.maxLengthOfStay == null) ? (that.maxLengthOfStay == null) : this.maxLengthOfStay.equals(that.maxLengthOfStay))
         &&((this.minAdvanceBookingDays == null) ? (that.minAdvanceBookingDays == null) : this.minAdvanceBookingDays.equals(that.minAdvanceBookingDays))
         &&((this.minLengthOfStay == null) ? (that.minLengthOfStay == null) : this.minLengthOfStay.equals(that.minLengthOfStay))
         &&((this.travelDateTo == null) ? (that.travelDateTo == null) : this.travelDateTo.equals(that.travelDateTo));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (bookingLocalDateTimeFrom == null) ? 0 : bookingLocalDateTimeFrom.hashCode();
        __h *= 1000003;
        __h ^= (bookingLocalDateTimeTo == null) ? 0 : bookingLocalDateTimeTo.hashCode();
        __h *= 1000003;
        __h ^= (sameDayBookingStartTime == null) ? 0 : sameDayBookingStartTime.hashCode();
        __h *= 1000003;
        __h ^= (travelDateFrom == null) ? 0 : travelDateFrom.hashCode();
        __h *= 1000003;
        __h ^= (isMemberOnly == null) ? 0 : isMemberOnly.hashCode();
        __h *= 1000003;
        __h ^= (isMobileUserOnly == null) ? 0 : isMobileUserOnly.hashCode();
        __h *= 1000003;
        __h ^= (maxAdvanceBookingDays == null) ? 0 : maxAdvanceBookingDays.hashCode();
        __h *= 1000003;
        __h ^= (maxLengthOfStay == null) ? 0 : maxLengthOfStay.hashCode();
        __h *= 1000003;
        __h ^= (minAdvanceBookingDays == null) ? 0 : minAdvanceBookingDays.hashCode();
        __h *= 1000003;
        __h ^= (minLengthOfStay == null) ? 0 : minLengthOfStay.hashCode();
        __h *= 1000003;
        __h ^= (travelDateTo == null) ? 0 : travelDateTo.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Restrictions{"
          + "bookingLocalDateTimeFrom=" + bookingLocalDateTimeFrom + ", "
          + "bookingLocalDateTimeTo=" + bookingLocalDateTimeTo + ", "
          + "sameDayBookingStartTime=" + sameDayBookingStartTime + ", "
          + "travelDateFrom=" + travelDateFrom + ", "
          + "isMemberOnly=" + isMemberOnly + ", "
          + "isMobileUserOnly=" + isMobileUserOnly + ", "
          + "maxAdvanceBookingDays=" + maxAdvanceBookingDays + ", "
          + "maxLengthOfStay=" + maxLengthOfStay + ", "
          + "minAdvanceBookingDays=" + minAdvanceBookingDays + ", "
          + "minLengthOfStay=" + minLengthOfStay + ", "
          + "travelDateTo=" + travelDateTo
          + "}";
      }
      return $toString;
    }
  }
}
