//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.Query;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter.PropertyMediaQuery_ResponseAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter.PropertyMediaQuery_VariablesAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.selections.PropertyMediaQuerySelections;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.ImageSource;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.ImagesFiltersInput;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;

public class PropertyMediaQuery implements Query<PropertyMediaQuery.Data> {
  public static final String OPERATION_ID = "b8f892b9487c9166744df2b77923cbfa4a258aa62601052a3de527084b3e6869";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query PropertyMedia($propertyId: String!, $filters: ImagesFiltersInput) {
   *   property(id: $propertyId) {
   *     media {
   *       images(filters: $filters) {
   *         elements {
   *           active
   *           captions {
   *             locale
   *             value
   *           }
   *           featured
   *           fileName
   *           id
   *           order
   *           originalUrl
   *           publishedUrl
   *           rotation
   *           source
   *           status {
   *             reason
   *             type
   *           }
   *           updatedDate
   *         }
   *         totalCount
   *       }
   *     }
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query PropertyMedia($propertyId: String!, $filters: ImagesFiltersInput) { property(id: $propertyId) { media { images(filters: $filters) { elements { active captions { locale value } featured fileName id order originalUrl publishedUrl rotation source status { reason type } updatedDate } totalCount } } } }";

  public static final String OPERATION_NAME = "PropertyMedia";

  public final String propertyId;

  public final Optional<ImagesFiltersInput> filters;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public PropertyMediaQuery(String propertyId, Optional<ImagesFiltersInput> filters) {
    this.propertyId = propertyId;
    this.filters = filters;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof PropertyMediaQuery) {
      PropertyMediaQuery that = (PropertyMediaQuery) o;
      return ((this.propertyId == null) ? (that.propertyId == null) : this.propertyId.equals(that.propertyId))
       &&((this.filters == null) ? (that.filters == null) : this.filters.equals(that.filters));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (propertyId == null) ? 0 : propertyId.hashCode();
      __h *= 1000003;
      __h ^= (filters == null) ? 0 : filters.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "PropertyMediaQuery{"
        + "propertyId=" + propertyId + ", "
        + "filters=" + filters
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters)
      throws IOException {
    PropertyMediaQuery_VariablesAdapter.INSTANCE.toJson(writer, customScalarAdapters, this);
  }

  @Override
  public Adapter<Data> adapter() {
    return new ObjectAdapter<Data>(PropertyMediaQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Query.type
    )
    .selections(PropertyMediaQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    private String propertyId;

    private Optional<ImagesFiltersInput> filters = Optional.absent();

    Builder() {
    }

    public Builder propertyId(String propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    public Builder filters(ImagesFiltersInput filters) {
      this.filters = Optional.present(filters);
      return this;
    }

    public PropertyMediaQuery build() {
      return new PropertyMediaQuery(propertyId, filters);
    }
  }

  public static class Data implements Query.Data {
    public Property property;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Data(Property property) {
      this.property = property;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.property == null) ? (that.property == null) : this.property.equals(that.property));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (property == null) ? 0 : property.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "property=" + property
          + "}";
      }
      return $toString;
    }
  }

  public static class Property {
    public Media media;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Property(Media media) {
      this.media = media;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Property) {
        Property that = (Property) o;
        return ((this.media == null) ? (that.media == null) : this.media.equals(that.media));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (media == null) ? 0 : media.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Property{"
          + "media=" + media
          + "}";
      }
      return $toString;
    }
  }

  public static class Media {
    public Images images;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Media(Images images) {
      this.images = images;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Media) {
        Media that = (Media) o;
        return ((this.images == null) ? (that.images == null) : this.images.equals(that.images));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (images == null) ? 0 : images.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Media{"
          + "images=" + images
          + "}";
      }
      return $toString;
    }
  }

  public static class Images {
    public List<Element> elements;

    public Integer totalCount;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Images(List<Element> elements, Integer totalCount) {
      this.elements = elements;
      this.totalCount = totalCount;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Images) {
        Images that = (Images) o;
        return ((this.elements == null) ? (that.elements == null) : this.elements.equals(that.elements))
         &&((this.totalCount == null) ? (that.totalCount == null) : this.totalCount.equals(that.totalCount));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (elements == null) ? 0 : elements.hashCode();
        __h *= 1000003;
        __h ^= (totalCount == null) ? 0 : totalCount.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Images{"
          + "elements=" + elements + ", "
          + "totalCount=" + totalCount
          + "}";
      }
      return $toString;
    }
  }

  public static class Element {
    public Boolean active;

    public List<Caption> captions;

    public Boolean featured;

    public String fileName;

    public String id;

    public Integer order;

    public String originalUrl;

    public String publishedUrl;

    /**
     * Clockwise rotation to be applied to the image. Accepted values are 0, 90, 180 and 270. Defaults to 0 when not provided.
     */
    public Integer rotation;

    public ImageSource source;

    public Status status;

    public Object updatedDate;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Element(Boolean active, List<Caption> captions, Boolean featured, String fileName,
        String id, Integer order, String originalUrl, String publishedUrl, Integer rotation,
        ImageSource source, Status status, Object updatedDate) {
      this.active = active;
      this.captions = captions;
      this.featured = featured;
      this.fileName = fileName;
      this.id = id;
      this.order = order;
      this.originalUrl = originalUrl;
      this.publishedUrl = publishedUrl;
      this.rotation = rotation;
      this.source = source;
      this.status = status;
      this.updatedDate = updatedDate;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Element) {
        Element that = (Element) o;
        return ((this.active == null) ? (that.active == null) : this.active.equals(that.active))
         &&((this.captions == null) ? (that.captions == null) : this.captions.equals(that.captions))
         &&((this.featured == null) ? (that.featured == null) : this.featured.equals(that.featured))
         &&((this.fileName == null) ? (that.fileName == null) : this.fileName.equals(that.fileName))
         &&((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.order == null) ? (that.order == null) : this.order.equals(that.order))
         &&((this.originalUrl == null) ? (that.originalUrl == null) : this.originalUrl.equals(that.originalUrl))
         &&((this.publishedUrl == null) ? (that.publishedUrl == null) : this.publishedUrl.equals(that.publishedUrl))
         &&((this.rotation == null) ? (that.rotation == null) : this.rotation.equals(that.rotation))
         &&((this.source == null) ? (that.source == null) : this.source.equals(that.source))
         &&((this.status == null) ? (that.status == null) : this.status.equals(that.status))
         &&((this.updatedDate == null) ? (that.updatedDate == null) : this.updatedDate.equals(that.updatedDate));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (active == null) ? 0 : active.hashCode();
        __h *= 1000003;
        __h ^= (captions == null) ? 0 : captions.hashCode();
        __h *= 1000003;
        __h ^= (featured == null) ? 0 : featured.hashCode();
        __h *= 1000003;
        __h ^= (fileName == null) ? 0 : fileName.hashCode();
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (order == null) ? 0 : order.hashCode();
        __h *= 1000003;
        __h ^= (originalUrl == null) ? 0 : originalUrl.hashCode();
        __h *= 1000003;
        __h ^= (publishedUrl == null) ? 0 : publishedUrl.hashCode();
        __h *= 1000003;
        __h ^= (rotation == null) ? 0 : rotation.hashCode();
        __h *= 1000003;
        __h ^= (source == null) ? 0 : source.hashCode();
        __h *= 1000003;
        __h ^= (status == null) ? 0 : status.hashCode();
        __h *= 1000003;
        __h ^= (updatedDate == null) ? 0 : updatedDate.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Element{"
          + "active=" + active + ", "
          + "captions=" + captions + ", "
          + "featured=" + featured + ", "
          + "fileName=" + fileName + ", "
          + "id=" + id + ", "
          + "order=" + order + ", "
          + "originalUrl=" + originalUrl + ", "
          + "publishedUrl=" + publishedUrl + ", "
          + "rotation=" + rotation + ", "
          + "source=" + source + ", "
          + "status=" + status + ", "
          + "updatedDate=" + updatedDate
          + "}";
      }
      return $toString;
    }
  }

  public static class Caption {
    public Object locale;

    public String value;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Caption(Object locale, String value) {
      this.locale = locale;
      this.value = value;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Caption) {
        Caption that = (Caption) o;
        return ((this.locale == null) ? (that.locale == null) : this.locale.equals(that.locale))
         &&((this.value == null) ? (that.value == null) : this.value.equals(that.value));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (locale == null) ? 0 : locale.hashCode();
        __h *= 1000003;
        __h ^= (value == null) ? 0 : value.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Caption{"
          + "locale=" + locale + ", "
          + "value=" + value
          + "}";
      }
      return $toString;
    }
  }

  public static class Status {
    public String reason;

    public String type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Status(String reason, String type) {
      this.reason = reason;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Status) {
        Status that = (Status) o;
        return ((this.reason == null) ? (that.reason == null) : this.reason.equals(that.reason))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (reason == null) ? 0 : reason.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Status{"
          + "reason=" + reason + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }
}
