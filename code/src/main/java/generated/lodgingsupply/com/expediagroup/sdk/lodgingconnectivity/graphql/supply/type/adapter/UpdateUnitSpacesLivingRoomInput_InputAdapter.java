//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.Adapters;
import com.apollographql.apollo.api.ApolloOptionalAdapter;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ListAdapter;
import com.apollographql.apollo.api.NullableAdapter;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.Optional;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.BedGroupInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.TextInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.UpdateUnitSpacesLivingRoomInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum UpdateUnitSpacesLivingRoomInput_InputAdapter implements Adapter<UpdateUnitSpacesLivingRoomInput> {
  INSTANCE;

  @Override
  public UpdateUnitSpacesLivingRoomInput fromJson(JsonReader reader,
      CustomScalarAdapters customScalarAdapters) throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      UpdateUnitSpacesLivingRoomInput value) throws IOException {
    if (value.bedGroups instanceof Optional.Present) {
      writer.name("bedGroups");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ListAdapter<>(new ObjectAdapter<BedGroupInput>(BedGroupInput_InputAdapter.INSTANCE, false)))).toJson(writer, customScalarAdapters, value.bedGroups);
    }
    writer.name("id");
    Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.id);
    if (value.order instanceof Optional.Present) {
      writer.name("order");
      new ApolloOptionalAdapter<>(Adapters.NullableIntAdapter).toJson(writer, customScalarAdapters, value.order);
    }
    if (value.text instanceof Optional.Present) {
      writer.name("text");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ListAdapter<>(new ObjectAdapter<TextInput>(TextInput_InputAdapter.INSTANCE, false)))).toJson(writer, customScalarAdapters, value.text);
    }
  }
}
