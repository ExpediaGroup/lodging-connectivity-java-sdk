//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

public class PropertyMessageThreadsOrderByInput {
  public final Optional<Optional<PropertyMessageThreadsSortField>> field;

  public final Optional<Optional<SortOrder>> order;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public PropertyMessageThreadsOrderByInput(
      Optional<Optional<PropertyMessageThreadsSortField>> field,
      Optional<Optional<SortOrder>> order) {
    this.field = field;
    this.order = order;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof PropertyMessageThreadsOrderByInput) {
      PropertyMessageThreadsOrderByInput that = (PropertyMessageThreadsOrderByInput) o;
      return ((this.field == null) ? (that.field == null) : this.field.equals(that.field))
       &&((this.order == null) ? (that.order == null) : this.order.equals(that.order));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (field == null) ? 0 : field.hashCode();
      __h *= 1000003;
      __h ^= (order == null) ? 0 : order.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "PropertyMessageThreadsOrderByInput{"
        + "field=" + field + ", "
        + "order=" + order
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Optional<PropertyMessageThreadsSortField>> field = Optional.empty();

    private Optional<Optional<SortOrder>> order = Optional.empty();

    Builder() {
    }

    public Builder field(@NotNull Optional<PropertyMessageThreadsSortField> field) {
      this.field = Optional.of(field);
      return this;
    }

    public Builder order(@NotNull Optional<SortOrder> order) {
      this.order = Optional.of(order);
      return this;
    }

    public PropertyMessageThreadsOrderByInput build() {
      return new PropertyMessageThreadsOrderByInput(field, order);
    }
  }
}
