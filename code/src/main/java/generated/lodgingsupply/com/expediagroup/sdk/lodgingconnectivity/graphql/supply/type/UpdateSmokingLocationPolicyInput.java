//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import com.apollographql.apollo3.api.Optional;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;

public class UpdateSmokingLocationPolicyInput {
  public final Optional<Boolean> allowed;

  public final Optional<List<LocalizedStringInput>> allowedNote;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public UpdateSmokingLocationPolicyInput(Optional<Boolean> allowed,
      Optional<List<LocalizedStringInput>> allowedNote) {
    this.allowed = allowed;
    this.allowedNote = allowedNote;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof UpdateSmokingLocationPolicyInput) {
      UpdateSmokingLocationPolicyInput that = (UpdateSmokingLocationPolicyInput) o;
      return ((this.allowed == null) ? (that.allowed == null) : this.allowed.equals(that.allowed))
       &&((this.allowedNote == null) ? (that.allowedNote == null) : this.allowedNote.equals(that.allowedNote));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (allowed == null) ? 0 : allowed.hashCode();
      __h *= 1000003;
      __h ^= (allowedNote == null) ? 0 : allowedNote.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "UpdateSmokingLocationPolicyInput{"
        + "allowed=" + allowed + ", "
        + "allowedNote=" + allowedNote
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Boolean> allowed = Optional.absent();

    private Optional<List<LocalizedStringInput>> allowedNote = Optional.absent();

    Builder() {
    }

    public Builder allowed(Boolean allowed) {
      this.allowed = Optional.present(allowed);
      return this;
    }

    public Builder allowedNote(List<LocalizedStringInput> allowedNote) {
      this.allowedNote = Optional.present(allowedNote);
      return this;
    }

    public UpdateSmokingLocationPolicyInput build() {
      return new UpdateSmokingLocationPolicyInput(allowed, allowedNote);
    }
  }
}
