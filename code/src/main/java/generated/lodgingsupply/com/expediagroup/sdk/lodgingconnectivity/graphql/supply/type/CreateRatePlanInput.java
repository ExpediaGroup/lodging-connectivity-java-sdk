//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import com.apollographql.apollo.api.Optional;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;

public class CreateRatePlanInput {
  public final Optional<Integer> baseRateGuestCount;

  public final String cancellationPolicyConfigId;

  public final Optional<String> clientMutationId;

  public final List<RatePlanDistributionRuleInput> distributionRules;

  public final Optional<String> feeSetId;

  public final String name;

  public final Optional<Boolean> paymentScheduleApplicable;

  public final PricingModel pricingModel;

  public final String propertyId;

  public final Optional<CreateRatePlanRestrictionsInput> restrictions;

  public final Optional<Boolean> taxInclusive;

  public final RatePlanType type;

  public final String unitId;

  public final List<String> valueAdds;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public CreateRatePlanInput(Optional<Integer> baseRateGuestCount,
      String cancellationPolicyConfigId, Optional<String> clientMutationId,
      List<RatePlanDistributionRuleInput> distributionRules, Optional<String> feeSetId, String name,
      Optional<Boolean> paymentScheduleApplicable, PricingModel pricingModel, String propertyId,
      Optional<CreateRatePlanRestrictionsInput> restrictions, Optional<Boolean> taxInclusive,
      RatePlanType type, String unitId, List<String> valueAdds) {
    this.baseRateGuestCount = baseRateGuestCount;
    this.cancellationPolicyConfigId = cancellationPolicyConfigId;
    this.clientMutationId = clientMutationId;
    this.distributionRules = distributionRules;
    this.feeSetId = feeSetId;
    this.name = name;
    this.paymentScheduleApplicable = paymentScheduleApplicable;
    this.pricingModel = pricingModel;
    this.propertyId = propertyId;
    this.restrictions = restrictions;
    this.taxInclusive = taxInclusive;
    this.type = type;
    this.unitId = unitId;
    this.valueAdds = valueAdds;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof CreateRatePlanInput) {
      CreateRatePlanInput that = (CreateRatePlanInput) o;
      return ((this.baseRateGuestCount == null) ? (that.baseRateGuestCount == null) : this.baseRateGuestCount.equals(that.baseRateGuestCount))
       &&((this.cancellationPolicyConfigId == null) ? (that.cancellationPolicyConfigId == null) : this.cancellationPolicyConfigId.equals(that.cancellationPolicyConfigId))
       &&((this.clientMutationId == null) ? (that.clientMutationId == null) : this.clientMutationId.equals(that.clientMutationId))
       &&((this.distributionRules == null) ? (that.distributionRules == null) : this.distributionRules.equals(that.distributionRules))
       &&((this.feeSetId == null) ? (that.feeSetId == null) : this.feeSetId.equals(that.feeSetId))
       &&((this.name == null) ? (that.name == null) : this.name.equals(that.name))
       &&((this.paymentScheduleApplicable == null) ? (that.paymentScheduleApplicable == null) : this.paymentScheduleApplicable.equals(that.paymentScheduleApplicable))
       &&((this.pricingModel == null) ? (that.pricingModel == null) : this.pricingModel.equals(that.pricingModel))
       &&((this.propertyId == null) ? (that.propertyId == null) : this.propertyId.equals(that.propertyId))
       &&((this.restrictions == null) ? (that.restrictions == null) : this.restrictions.equals(that.restrictions))
       &&((this.taxInclusive == null) ? (that.taxInclusive == null) : this.taxInclusive.equals(that.taxInclusive))
       &&((this.type == null) ? (that.type == null) : this.type.equals(that.type))
       &&((this.unitId == null) ? (that.unitId == null) : this.unitId.equals(that.unitId))
       &&((this.valueAdds == null) ? (that.valueAdds == null) : this.valueAdds.equals(that.valueAdds));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (baseRateGuestCount == null) ? 0 : baseRateGuestCount.hashCode();
      __h *= 1000003;
      __h ^= (cancellationPolicyConfigId == null) ? 0 : cancellationPolicyConfigId.hashCode();
      __h *= 1000003;
      __h ^= (clientMutationId == null) ? 0 : clientMutationId.hashCode();
      __h *= 1000003;
      __h ^= (distributionRules == null) ? 0 : distributionRules.hashCode();
      __h *= 1000003;
      __h ^= (feeSetId == null) ? 0 : feeSetId.hashCode();
      __h *= 1000003;
      __h ^= (name == null) ? 0 : name.hashCode();
      __h *= 1000003;
      __h ^= (paymentScheduleApplicable == null) ? 0 : paymentScheduleApplicable.hashCode();
      __h *= 1000003;
      __h ^= (pricingModel == null) ? 0 : pricingModel.hashCode();
      __h *= 1000003;
      __h ^= (propertyId == null) ? 0 : propertyId.hashCode();
      __h *= 1000003;
      __h ^= (restrictions == null) ? 0 : restrictions.hashCode();
      __h *= 1000003;
      __h ^= (taxInclusive == null) ? 0 : taxInclusive.hashCode();
      __h *= 1000003;
      __h ^= (type == null) ? 0 : type.hashCode();
      __h *= 1000003;
      __h ^= (unitId == null) ? 0 : unitId.hashCode();
      __h *= 1000003;
      __h ^= (valueAdds == null) ? 0 : valueAdds.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "CreateRatePlanInput{"
        + "baseRateGuestCount=" + baseRateGuestCount + ", "
        + "cancellationPolicyConfigId=" + cancellationPolicyConfigId + ", "
        + "clientMutationId=" + clientMutationId + ", "
        + "distributionRules=" + distributionRules + ", "
        + "feeSetId=" + feeSetId + ", "
        + "name=" + name + ", "
        + "paymentScheduleApplicable=" + paymentScheduleApplicable + ", "
        + "pricingModel=" + pricingModel + ", "
        + "propertyId=" + propertyId + ", "
        + "restrictions=" + restrictions + ", "
        + "taxInclusive=" + taxInclusive + ", "
        + "type=" + type + ", "
        + "unitId=" + unitId + ", "
        + "valueAdds=" + valueAdds
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Integer> baseRateGuestCount = Optional.absent();

    private String cancellationPolicyConfigId;

    private Optional<String> clientMutationId = Optional.absent();

    private List<RatePlanDistributionRuleInput> distributionRules;

    private Optional<String> feeSetId = Optional.absent();

    private String name;

    private Optional<Boolean> paymentScheduleApplicable = Optional.absent();

    private PricingModel pricingModel;

    private String propertyId;

    private Optional<CreateRatePlanRestrictionsInput> restrictions = Optional.absent();

    private Optional<Boolean> taxInclusive = Optional.absent();

    private RatePlanType type;

    private String unitId;

    private List<String> valueAdds;

    Builder() {
    }

    public Builder baseRateGuestCount(Integer baseRateGuestCount) {
      this.baseRateGuestCount = Optional.present(baseRateGuestCount);
      return this;
    }

    public Builder cancellationPolicyConfigId(String cancellationPolicyConfigId) {
      this.cancellationPolicyConfigId = cancellationPolicyConfigId;
      return this;
    }

    public Builder clientMutationId(String clientMutationId) {
      this.clientMutationId = Optional.present(clientMutationId);
      return this;
    }

    public Builder distributionRules(List<RatePlanDistributionRuleInput> distributionRules) {
      this.distributionRules = distributionRules;
      return this;
    }

    public Builder feeSetId(String feeSetId) {
      this.feeSetId = Optional.present(feeSetId);
      return this;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder paymentScheduleApplicable(Boolean paymentScheduleApplicable) {
      this.paymentScheduleApplicable = Optional.present(paymentScheduleApplicable);
      return this;
    }

    public Builder pricingModel(PricingModel pricingModel) {
      this.pricingModel = pricingModel;
      return this;
    }

    public Builder propertyId(String propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    public Builder restrictions(CreateRatePlanRestrictionsInput restrictions) {
      this.restrictions = Optional.present(restrictions);
      return this;
    }

    public Builder taxInclusive(Boolean taxInclusive) {
      this.taxInclusive = Optional.present(taxInclusive);
      return this;
    }

    public Builder type(RatePlanType type) {
      this.type = type;
      return this;
    }

    public Builder unitId(String unitId) {
      this.unitId = unitId;
      return this;
    }

    public Builder valueAdds(List<String> valueAdds) {
      this.valueAdds = valueAdds;
      return this;
    }

    public CreateRatePlanInput build() {
      return new CreateRatePlanInput(baseRateGuestCount, cancellationPolicyConfigId, clientMutationId, distributionRules, feeSetId, name, paymentScheduleApplicable, pricingModel, propertyId, restrictions, taxInclusive, type, unitId, valueAdds);
    }
  }
}
