//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ListAdapter;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.CreateRatePlanMutation;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.RatePlanStatus;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.RatePlanType;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter.RatePlanStatus_ResponseAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter.RatePlanType_ResponseAdapter;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class CreateRatePlanMutation_ResponseAdapter {
  public enum Data implements Adapter<CreateRatePlanMutation.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("createRatePlan");

    @Override
    public CreateRatePlanMutation.Data fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      CreateRatePlanMutation.CreateRatePlan _createRatePlan = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _createRatePlan = new NullableAdapter<>(new ObjectAdapter<CreateRatePlanMutation.CreateRatePlan>(CreateRatePlan.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new CreateRatePlanMutation.Data(
        _createRatePlan
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        CreateRatePlanMutation.Data value) throws IOException {
      writer.name("createRatePlan");
      new NullableAdapter<>(new ObjectAdapter<CreateRatePlanMutation.CreateRatePlan>(CreateRatePlan.INSTANCE, false)).toJson(writer, customScalarAdapters, value.createRatePlan);
    }
  }

  public enum CreateRatePlan implements Adapter<CreateRatePlanMutation.CreateRatePlan> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("clientMutationId", "ratePlan");

    @Override
    public CreateRatePlanMutation.CreateRatePlan fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String _clientMutationId = null;
      CreateRatePlanMutation.RatePlan _ratePlan = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _clientMutationId = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _ratePlan = new NullableAdapter<>(new ObjectAdapter<CreateRatePlanMutation.RatePlan>(RatePlan.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new CreateRatePlanMutation.CreateRatePlan(
        _clientMutationId,
        _ratePlan
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        CreateRatePlanMutation.CreateRatePlan value) throws IOException {
      writer.name("clientMutationId");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.clientMutationId);

      writer.name("ratePlan");
      new NullableAdapter<>(new ObjectAdapter<CreateRatePlanMutation.RatePlan>(RatePlan.INSTANCE, false)).toJson(writer, customScalarAdapters, value.ratePlan);
    }
  }

  public enum RatePlan implements Adapter<CreateRatePlanMutation.RatePlan> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("id", "propertyId", "name", "creationDateTime", "type", "unitId", "valueAdds", "taxInclusive", "status", "lastUpdateDateTime", "baseRateGuestCount");

    @Override
    public CreateRatePlanMutation.RatePlan fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String _id = null;
      String _propertyId = null;
      String _name = null;
      Object _creationDateTime = null;
      RatePlanType _type = null;
      String _unitId = null;
      List<String> _valueAdds = null;
      Boolean _taxInclusive = null;
      RatePlanStatus _status = null;
      Object _lastUpdateDateTime = null;
      Integer _baseRateGuestCount = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _id = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _propertyId = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 2: _name = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 3: _creationDateTime = Adapters.AnyAdapter.fromJson(reader, customScalarAdapters); break;
          case 4: _type = RatePlanType_ResponseAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          case 5: _unitId = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 6: _valueAdds = new ListAdapter<>(Adapters.StringAdapter).fromJson(reader, customScalarAdapters); break;
          case 7: _taxInclusive = Adapters.NullableBooleanAdapter.fromJson(reader, customScalarAdapters); break;
          case 8: _status = RatePlanStatus_ResponseAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          case 9: _lastUpdateDateTime = Adapters.AnyAdapter.fromJson(reader, customScalarAdapters); break;
          case 10: _baseRateGuestCount = Adapters.NullableIntAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_id, "id");
      Assertions.checkFieldNotMissing(_propertyId, "propertyId");
      Assertions.checkFieldNotMissing(_name, "name");
      Assertions.checkFieldNotMissing(_creationDateTime, "creationDateTime");
      Assertions.checkFieldNotMissing(_type, "type");
      Assertions.checkFieldNotMissing(_unitId, "unitId");
      Assertions.checkFieldNotMissing(_valueAdds, "valueAdds");
      Assertions.checkFieldNotMissing(_status, "status");
      Assertions.checkFieldNotMissing(_lastUpdateDateTime, "lastUpdateDateTime");

      return new CreateRatePlanMutation.RatePlan(
        _id,
        _propertyId,
        _name,
        _creationDateTime,
        _type,
        _unitId,
        _valueAdds,
        _taxInclusive,
        _status,
        _lastUpdateDateTime,
        _baseRateGuestCount
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        CreateRatePlanMutation.RatePlan value) throws IOException {
      writer.name("id");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.id);

      writer.name("propertyId");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.propertyId);

      writer.name("name");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.name);

      writer.name("creationDateTime");
      Adapters.AnyAdapter.toJson(writer, customScalarAdapters, value.creationDateTime);

      writer.name("type");
      RatePlanType_ResponseAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.type);

      writer.name("unitId");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.unitId);

      writer.name("valueAdds");
      new ListAdapter<>(Adapters.StringAdapter).toJson(writer, customScalarAdapters, value.valueAdds);

      writer.name("taxInclusive");
      Adapters.NullableBooleanAdapter.toJson(writer, customScalarAdapters, value.taxInclusive);

      writer.name("status");
      RatePlanStatus_ResponseAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.status);

      writer.name("lastUpdateDateTime");
      Adapters.AnyAdapter.toJson(writer, customScalarAdapters, value.lastUpdateDateTime);

      writer.name("baseRateGuestCount");
      Adapters.NullableIntAdapter.toJson(writer, customScalarAdapters, value.baseRateGuestCount);
    }
  }
}
