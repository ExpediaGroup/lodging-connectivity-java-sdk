//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Object;
import java.lang.Override;
import java.lang.String;

/**
 * Represents a monetary amount value along with its currency.
 */
public class MoneyInput {
  public final Object amount;

  public final String currencyCode;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public MoneyInput(Object amount, String currencyCode) {
    this.amount = amount;
    this.currencyCode = currencyCode;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof MoneyInput) {
      MoneyInput that = (MoneyInput) o;
      return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
       &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (amount == null) ? 0 : amount.hashCode();
      __h *= 1000003;
      __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "MoneyInput{"
        + "amount=" + amount + ", "
        + "currencyCode=" + currencyCode
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Object amount;

    private String currencyCode;

    Builder() {
    }

    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public Builder amount(Object amount) {
      this.amount = amount;
      return this;
    }

    /**
     * The code of the currency of the amount.
     */
    public Builder currencyCode(String currencyCode) {
      this.currencyCode = currencyCode;
      return this;
    }

    public MoneyInput build() {
      return new MoneyInput(amount, currencyCode);
    }
  }
}
