//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloOptionalAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CancelVrboReservationInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.VrboCancellationPolicyOverride;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum CancelVrboReservationInput_InputAdapter implements Adapter<CancelVrboReservationInput> {
  INSTANCE;

  @Override
  public CancelVrboReservationInput fromJson(JsonReader reader,
      CustomScalarAdapters customScalarAdapters) throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      CancelVrboReservationInput value) throws IOException {
    if (value.clientMutationId instanceof Optional.Present) {
      writer.name("clientMutationId");
      new ApolloOptionalAdapter<>(Adapters.NullableStringAdapter).toJson(writer, customScalarAdapters, value.clientMutationId);
    }
    writer.name("propertyId");
    Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.propertyId);
    writer.name("reservationId");
    Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.reservationId);
    writer.name("primaryReason");
    VrboCancellationReason_ResponseAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.primaryReason);
    if (value.secondaryReason instanceof Optional.Present) {
      writer.name("secondaryReason");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(VrboCancellationSecondaryReason_ResponseAdapter.INSTANCE)).toJson(writer, customScalarAdapters, value.secondaryReason);
    }
    if (value.cancellationPolicyOverride instanceof Optional.Present) {
      writer.name("cancellationPolicyOverride");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ObjectAdapter<VrboCancellationPolicyOverride>(VrboCancellationPolicyOverride_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, value.cancellationPolicyOverride);
    }
  }
}
