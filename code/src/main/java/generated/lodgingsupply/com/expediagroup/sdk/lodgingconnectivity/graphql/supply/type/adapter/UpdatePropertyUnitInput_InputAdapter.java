//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.Adapters;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ListAdapter;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.AmenityInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.UpdateAreaInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.UpdatePropertyUnitInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum UpdatePropertyUnitInput_InputAdapter implements Adapter<UpdatePropertyUnitInput> {
  INSTANCE;

  @Override
  public UpdatePropertyUnitInput fromJson(JsonReader reader,
      CustomScalarAdapters customScalarAdapters) throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      UpdatePropertyUnitInput value) throws IOException {
    if (value.amenities.isPresent()) {
      writer.name("amenities");
      new OptionalAdapter<>(new OptionalAdapter<>(new ListAdapter<>(new ObjectAdapter<AmenityInput>(AmenityInput_InputAdapter.INSTANCE, false)))).toJson(writer, customScalarAdapters, value.amenities);
    }
    if (value.area.isPresent()) {
      writer.name("area");
      new OptionalAdapter<>(new OptionalAdapter<>(new ObjectAdapter<UpdateAreaInput>(UpdateAreaInput_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, value.area);
    }
    if (value.clientMutationId.isPresent()) {
      writer.name("clientMutationId");
      new OptionalAdapter<>(OptionalAdapters.OptionalStringAdapter).toJson(writer, customScalarAdapters, value.clientMutationId);
    }
    writer.name("propertyId");
    Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.propertyId);
    writer.name("unitId");
    Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.unitId);
  }
}
