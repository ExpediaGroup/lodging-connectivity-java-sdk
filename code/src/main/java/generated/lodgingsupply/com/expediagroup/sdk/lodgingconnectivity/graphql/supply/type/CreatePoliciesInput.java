//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

public class CreatePoliciesInput {
  public final Optional<Optional<BookingPolicyInput>> bookingPolicy;

  public final Optional<Optional<CreateStayPolicyInput>> stayPolicy;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public CreatePoliciesInput(Optional<Optional<BookingPolicyInput>> bookingPolicy,
      Optional<Optional<CreateStayPolicyInput>> stayPolicy) {
    this.bookingPolicy = bookingPolicy;
    this.stayPolicy = stayPolicy;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof CreatePoliciesInput) {
      CreatePoliciesInput that = (CreatePoliciesInput) o;
      return ((this.bookingPolicy == null) ? (that.bookingPolicy == null) : this.bookingPolicy.equals(that.bookingPolicy))
       &&((this.stayPolicy == null) ? (that.stayPolicy == null) : this.stayPolicy.equals(that.stayPolicy));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (bookingPolicy == null) ? 0 : bookingPolicy.hashCode();
      __h *= 1000003;
      __h ^= (stayPolicy == null) ? 0 : stayPolicy.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "CreatePoliciesInput{"
        + "bookingPolicy=" + bookingPolicy + ", "
        + "stayPolicy=" + stayPolicy
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Optional<BookingPolicyInput>> bookingPolicy = Optional.empty();

    private Optional<Optional<CreateStayPolicyInput>> stayPolicy = Optional.empty();

    Builder() {
    }

    public Builder bookingPolicy(@NotNull Optional<BookingPolicyInput> bookingPolicy) {
      this.bookingPolicy = Optional.of(bookingPolicy);
      return this;
    }

    public Builder stayPolicy(@NotNull Optional<CreateStayPolicyInput> stayPolicy) {
      this.stayPolicy = Optional.of(stayPolicy);
      return this;
    }

    public CreatePoliciesInput build() {
      return new CreatePoliciesInput(bookingPolicy, stayPolicy);
    }
  }
}
