//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

/**
 * Unit level tax records
 */
public class SetPropertyTaxRecordInput {
  public final Optional<Optional<List<RegulatoryAttributeInput>>> attributes;

  public final String categoryCode;

  public final Optional<Optional<String>> clientMutationId;

  public final String propertyId;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public SetPropertyTaxRecordInput(Optional<Optional<List<RegulatoryAttributeInput>>> attributes,
      String categoryCode, Optional<Optional<String>> clientMutationId, String propertyId) {
    this.attributes = attributes;
    this.categoryCode = categoryCode;
    this.clientMutationId = clientMutationId;
    this.propertyId = propertyId;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof SetPropertyTaxRecordInput) {
      SetPropertyTaxRecordInput that = (SetPropertyTaxRecordInput) o;
      return ((this.attributes == null) ? (that.attributes == null) : this.attributes.equals(that.attributes))
       &&((this.categoryCode == null) ? (that.categoryCode == null) : this.categoryCode.equals(that.categoryCode))
       &&((this.clientMutationId == null) ? (that.clientMutationId == null) : this.clientMutationId.equals(that.clientMutationId))
       &&((this.propertyId == null) ? (that.propertyId == null) : this.propertyId.equals(that.propertyId));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (attributes == null) ? 0 : attributes.hashCode();
      __h *= 1000003;
      __h ^= (categoryCode == null) ? 0 : categoryCode.hashCode();
      __h *= 1000003;
      __h ^= (clientMutationId == null) ? 0 : clientMutationId.hashCode();
      __h *= 1000003;
      __h ^= (propertyId == null) ? 0 : propertyId.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "SetPropertyTaxRecordInput{"
        + "attributes=" + attributes + ", "
        + "categoryCode=" + categoryCode + ", "
        + "clientMutationId=" + clientMutationId + ", "
        + "propertyId=" + propertyId
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Optional<List<RegulatoryAttributeInput>>> attributes = Optional.empty();

    private String categoryCode;

    private Optional<Optional<String>> clientMutationId = Optional.empty();

    private String propertyId;

    Builder() {
    }

    /**
     * List of constituent values for the tax record as key/value pairs
     */
    public Builder attributes(@NotNull Optional<List<RegulatoryAttributeInput>> attributes) {
      this.attributes = Optional.of(attributes);
      return this;
    }

    /**
     * Tax Category for the Property. Currently supported values: FREEMIUM
     */
    public Builder categoryCode(String categoryCode) {
      this.categoryCode = categoryCode;
      return this;
    }

    public Builder clientMutationId(@NotNull Optional<String> clientMutationId) {
      this.clientMutationId = Optional.of(clientMutationId);
      return this;
    }

    /**
     * Expedia Property ID for the Property the tax record applies to
     */
    public Builder propertyId(String propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    public SetPropertyTaxRecordInput build() {
      return new SetPropertyTaxRecordInput(attributes, categoryCode, clientMutationId, propertyId);
    }
  }
}
