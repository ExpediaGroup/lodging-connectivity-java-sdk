//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ListAdapter;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.UpdateUnitRegistrationMutation;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.ApplicableRegulationsKey;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter.ApplicableRegulationsKey_ResponseAdapter;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class UpdateUnitRegistrationMutation_ResponseAdapter {
  public enum Data implements Adapter<UpdateUnitRegistrationMutation.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("updateUnitRegistration");

    @Override
    public UpdateUnitRegistrationMutation.Data fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      UpdateUnitRegistrationMutation.UpdateUnitRegistration _updateUnitRegistration = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _updateUnitRegistration = new ObjectAdapter<UpdateUnitRegistrationMutation.UpdateUnitRegistration>(UpdateUnitRegistration.INSTANCE, false).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_updateUnitRegistration, "updateUnitRegistration");

      return new UpdateUnitRegistrationMutation.Data(
        _updateUnitRegistration
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        UpdateUnitRegistrationMutation.Data value) throws IOException {
      writer.name("updateUnitRegistration");
      new ObjectAdapter<UpdateUnitRegistrationMutation.UpdateUnitRegistration>(UpdateUnitRegistration.INSTANCE, false).toJson(writer, customScalarAdapters, value.updateUnitRegistration);
    }
  }

  public enum UpdateUnitRegistration implements Adapter<UpdateUnitRegistrationMutation.UpdateUnitRegistration> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("district", "complete", "details", "applicableRegulations");

    @Override
    public UpdateUnitRegistrationMutation.UpdateUnitRegistration fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String _district = null;
      Boolean _complete = null;
      List<UpdateUnitRegistrationMutation.Detail> _details = null;
      List<UpdateUnitRegistrationMutation.ApplicableRegulation> _applicableRegulations = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _district = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _complete = Adapters.BooleanAdapter.fromJson(reader, customScalarAdapters); break;
          case 2: _details = new ListAdapter<>(new ObjectAdapter<UpdateUnitRegistrationMutation.Detail>(Detail.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          case 3: _applicableRegulations = new NullableAdapter<>(new ListAdapter<>(new ObjectAdapter<UpdateUnitRegistrationMutation.ApplicableRegulation>(ApplicableRegulation.INSTANCE, false))).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_complete, "complete");
      Assertions.checkFieldNotMissing(_details, "details");

      return new UpdateUnitRegistrationMutation.UpdateUnitRegistration(
        _district,
        _complete,
        _details,
        _applicableRegulations
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        UpdateUnitRegistrationMutation.UpdateUnitRegistration value) throws IOException {
      writer.name("district");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.district);

      writer.name("complete");
      Adapters.BooleanAdapter.toJson(writer, customScalarAdapters, value.complete);

      writer.name("details");
      new ListAdapter<>(new ObjectAdapter<UpdateUnitRegistrationMutation.Detail>(Detail.INSTANCE, false)).toJson(writer, customScalarAdapters, value.details);

      writer.name("applicableRegulations");
      new NullableAdapter<>(new ListAdapter<>(new ObjectAdapter<UpdateUnitRegistrationMutation.ApplicableRegulation>(ApplicableRegulation.INSTANCE, false))).toJson(writer, customScalarAdapters, value.applicableRegulations);
    }
  }

  public enum Detail implements Adapter<UpdateUnitRegistrationMutation.Detail> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("unitId");

    @Override
    public UpdateUnitRegistrationMutation.Detail fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String _unitId = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _unitId = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_unitId, "unitId");

      return new UpdateUnitRegistrationMutation.Detail(
        _unitId
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        UpdateUnitRegistrationMutation.Detail value) throws IOException {
      writer.name("unitId");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.unitId);
    }
  }

  public enum ApplicableRegulation implements Adapter<UpdateUnitRegistrationMutation.ApplicableRegulation> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("key", "value");

    @Override
    public UpdateUnitRegistrationMutation.ApplicableRegulation fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      ApplicableRegulationsKey _key = null;
      String _value = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _key = new NullableAdapter<>(ApplicableRegulationsKey_ResponseAdapter.INSTANCE).fromJson(reader, customScalarAdapters); break;
          case 1: _value = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new UpdateUnitRegistrationMutation.ApplicableRegulation(
        _key,
        _value
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        UpdateUnitRegistrationMutation.ApplicableRegulation value) throws IOException {
      writer.name("key");
      new NullableAdapter<>(ApplicableRegulationsKey_ResponseAdapter.INSTANCE).toJson(writer, customScalarAdapters, value.key);

      writer.name("value");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.value);
    }
  }
}
