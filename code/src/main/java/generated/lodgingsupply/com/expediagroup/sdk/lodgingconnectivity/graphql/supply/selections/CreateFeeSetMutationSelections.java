//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.selections;

import com.apollographql.apollo.api.CompiledArgument;
import com.apollographql.apollo.api.CompiledField;
import com.apollographql.apollo.api.CompiledListType;
import com.apollographql.apollo.api.CompiledNotNullType;
import com.apollographql.apollo.api.CompiledSelection;
import com.apollographql.apollo.api.CompiledVariable;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CreateFeeSetPayload;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CurrencyCode;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Date;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Decimal;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Fee;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeAgeCategory;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeBusinessModel;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeCharge;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeChargeDuration;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeChargeType;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeDateRange;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeRestrictions;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeSet;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.GraphQLBoolean;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.GraphQLID;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.GraphQLInt;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.GraphQLString;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.IntRange;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Money;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Mutation;
import java.util.Arrays;
import java.util.List;

public class CreateFeeSetMutationSelections {
  private static List<CompiledSelection> __flatAmount = Arrays.asList(
    new CompiledField.Builder("amount", new CompiledNotNullType(Decimal.type)).build(),
    new CompiledField.Builder("currencyCode", new CompiledNotNullType(CurrencyCode.type)).build()
  );

  private static List<CompiledSelection> __charges = Arrays.asList(
    new CompiledField.Builder("duration", new CompiledNotNullType(FeeChargeDuration.type)).build(),
    new CompiledField.Builder("flatAmount", Money.type).selections(__flatAmount).build(),
    new CompiledField.Builder("percentage", Decimal.type).build(),
    new CompiledField.Builder("type", new CompiledNotNullType(FeeChargeType.type)).build()
  );

  private static List<CompiledSelection> __dateRange = Arrays.asList(
    new CompiledField.Builder("from", new CompiledNotNullType(Date.type)).build(),
    new CompiledField.Builder("to", Date.type).build()
  );

  private static List<CompiledSelection> __extraGuestRange = Arrays.asList(
    new CompiledField.Builder("max", new CompiledNotNullType(GraphQLInt.type)).build(),
    new CompiledField.Builder("min", new CompiledNotNullType(GraphQLInt.type)).build()
  );

  private static List<CompiledSelection> __rangeOfNight = Arrays.asList(
    new CompiledField.Builder("max", new CompiledNotNullType(GraphQLInt.type)).build(),
    new CompiledField.Builder("min", new CompiledNotNullType(GraphQLInt.type)).build()
  );

  private static List<CompiledSelection> __restrictions = Arrays.asList(
    new CompiledField.Builder("dateRange", FeeDateRange.type).selections(__dateRange).build(),
    new CompiledField.Builder("extraGuestRange", IntRange.type).selections(__extraGuestRange).build(),
    new CompiledField.Builder("rangeOfNight", IntRange.type).selections(__rangeOfNight).build()
  );

  private static List<CompiledSelection> __fees = Arrays.asList(
    new CompiledField.Builder("ageCategory", FeeAgeCategory.type).build(),
    new CompiledField.Builder("charges", new CompiledNotNullType(new CompiledListType(new CompiledNotNullType(FeeCharge.type)))).selections(__charges).build(),
    new CompiledField.Builder("name", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledField.Builder("restrictions", FeeRestrictions.type).selections(__restrictions).build(),
    new CompiledField.Builder("scope", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledField.Builder("taxable", GraphQLBoolean.type).build(),
    new CompiledField.Builder("type", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledField.Builder("variesByLengthOfStay", GraphQLBoolean.type).build()
  );

  private static List<CompiledSelection> __feeSet = Arrays.asList(
    new CompiledField.Builder("id", new CompiledNotNullType(GraphQLID.type)).build(),
    new CompiledField.Builder("fees", new CompiledNotNullType(new CompiledListType(new CompiledNotNullType(Fee.type)))).selections(__fees).build(),
    new CompiledField.Builder("name", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledField.Builder("businessModel", new CompiledNotNullType(FeeBusinessModel.type)).build()
  );

  private static List<CompiledSelection> __createFeeSet = Arrays.asList(
    new CompiledField.Builder("clientMutationId", GraphQLString.type).build(),
    new CompiledField.Builder("feeSet", new CompiledNotNullType(FeeSet.type)).selections(__feeSet).build()
  );

  public static List<CompiledSelection> __root = Arrays.asList(
    new CompiledField.Builder("createFeeSet", CreateFeeSetPayload.type).arguments(Arrays.asList(new CompiledArgument.Builder(Mutation.__createFeeSet_input).value(new CompiledVariable("input")).build())).selections(__createFeeSet).build()
  );
}
