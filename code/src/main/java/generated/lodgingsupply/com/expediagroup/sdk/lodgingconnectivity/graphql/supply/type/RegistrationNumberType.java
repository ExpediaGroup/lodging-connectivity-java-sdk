//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import com.apollographql.apollo.api.EnumType;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.Objects;

/**
 * Types of registration numbers (licenses).
 */
public class RegistrationNumberType {
  public static EnumType type = new EnumType("RegistrationNumberType", Arrays.asList("APPLICATION_NUMBER", "AUSTRALIAN_BUSINESS_NUMBER", "BIRTH_DATE", "BOSTON_REGISTRATION_NUMBER", "BUSINESS_ISSUING_REGISTRY", "BUSINESS_LICENSE_NUMBER", "BUSINESS_REGISTRATION_NUMBER", "BUSINESS_TAX_ID", "BUSINESS_TAX_RECEIPT_NUMBER", "CADASTRAL_REFERENCE", "CERTIFICATE_OF_USE_NUMBER", "CITIZEN_ID", "COUNTY_CODE", "DATE", "ENTITY_TYPE", "FLOOR_SYSTEM_NUMBER", "FOREIGN_ID", "GENERAL_EXCISE_TAX_ID", "HAS_AUSTRALIAN_BUSINESS_NUMBER", "HOME_SHARING_NUMBER", "HOME_SHARING_PERMIT_NUMBER", "HOTEL_LICENSE", "HOUSE_NUMBER", "ISSUANCE_DATE", "ISSUED_TAX_ID", "IS_ADDRESS_IN_EU", "IS_CONDITION", "IS_GOVERNMENT_ENTITY", "IS_IN_ZONING_PLAN", "IS_PROFESSIONAL_HOST", "IS_RESIDENCE_IN_EU", "IS_TRADED", "IS_VAT_REGISTERED", "IS_ZONING_LAW_APPLIED", "JOURNAL_NUMBER", "LAND_REGISTRATION_NUMBER", "LEGAL_ADDRESS", "LICENSE_ID", "LICENSE_NUMBER", "MA_REGISTRATION_CERTIFICATE_NUMBER", "NATIONAL_ADDRESS_NUMBER", "NEIGHBORHOOD_NAME", "OPERATOR_LICENCE_ID", "OPERATOR_LICENSE_ID", "OPERATOR_LICENSE_NUMBER", "OPERATOR_PERMIT", "OWNER_ID", "OWNER_IS_CITIZEN", "OWNER_NAME", "OWNER_PERMIT", "PARCEL_NUMBER_TAX_MAP_KEY", "PARTIAL_TAX_ID", "PERMANENT_ESTABLISHMENT_COUNTRY", "PERMIT_NUMBER", "PLANNING_NUMBER", "PROPERTY_REGISTRY_NUMBER", "PROVINCIAL_TOURIST_IDENTIFICATION_CODE", "REGISTRATION_CERTIFICATE_NUMBER", "REGISTRATION_NUMBER", "RESORT_TAX_ID", "SHORT_TERM_RENTAL_LICENSE", "SPECIAL_OPERATION_SIGN", "TAX_IDENTIFICATION_NUMBER", "TOURIST_DEVELOPMENT_TAX_ACCOUNT_NUMBER", "TRANSIENT_ACCOMMODATIONS_TAX_ID", "TRANSIENT_REGISTRATION_NUMBER", "VAT_ID", "ZIPCODE"));

  public static RegistrationNumberType APPLICATION_NUMBER = new RegistrationNumberType("APPLICATION_NUMBER");

  public static RegistrationNumberType AUSTRALIAN_BUSINESS_NUMBER = new RegistrationNumberType("AUSTRALIAN_BUSINESS_NUMBER");

  public static RegistrationNumberType BIRTH_DATE = new RegistrationNumberType("BIRTH_DATE");

  public static RegistrationNumberType BOSTON_REGISTRATION_NUMBER = new RegistrationNumberType("BOSTON_REGISTRATION_NUMBER");

  public static RegistrationNumberType BUSINESS_ISSUING_REGISTRY = new RegistrationNumberType("BUSINESS_ISSUING_REGISTRY");

  public static RegistrationNumberType BUSINESS_LICENSE_NUMBER = new RegistrationNumberType("BUSINESS_LICENSE_NUMBER");

  public static RegistrationNumberType BUSINESS_REGISTRATION_NUMBER = new RegistrationNumberType("BUSINESS_REGISTRATION_NUMBER");

  public static RegistrationNumberType BUSINESS_TAX_ID = new RegistrationNumberType("BUSINESS_TAX_ID");

  public static RegistrationNumberType BUSINESS_TAX_RECEIPT_NUMBER = new RegistrationNumberType("BUSINESS_TAX_RECEIPT_NUMBER");

  public static RegistrationNumberType CADASTRAL_REFERENCE = new RegistrationNumberType("CADASTRAL_REFERENCE");

  public static RegistrationNumberType CERTIFICATE_OF_USE_NUMBER = new RegistrationNumberType("CERTIFICATE_OF_USE_NUMBER");

  public static RegistrationNumberType CITIZEN_ID = new RegistrationNumberType("CITIZEN_ID");

  public static RegistrationNumberType COUNTY_CODE = new RegistrationNumberType("COUNTY_CODE");

  public static RegistrationNumberType DATE = new RegistrationNumberType("DATE");

  public static RegistrationNumberType ENTITY_TYPE = new RegistrationNumberType("ENTITY_TYPE");

  public static RegistrationNumberType FLOOR_SYSTEM_NUMBER = new RegistrationNumberType("FLOOR_SYSTEM_NUMBER");

  public static RegistrationNumberType FOREIGN_ID = new RegistrationNumberType("FOREIGN_ID");

  public static RegistrationNumberType GENERAL_EXCISE_TAX_ID = new RegistrationNumberType("GENERAL_EXCISE_TAX_ID");

  public static RegistrationNumberType HAS_AUSTRALIAN_BUSINESS_NUMBER = new RegistrationNumberType("HAS_AUSTRALIAN_BUSINESS_NUMBER");

  public static RegistrationNumberType HOME_SHARING_NUMBER = new RegistrationNumberType("HOME_SHARING_NUMBER");

  public static RegistrationNumberType HOME_SHARING_PERMIT_NUMBER = new RegistrationNumberType("HOME_SHARING_PERMIT_NUMBER");

  public static RegistrationNumberType HOTEL_LICENSE = new RegistrationNumberType("HOTEL_LICENSE");

  public static RegistrationNumberType HOUSE_NUMBER = new RegistrationNumberType("HOUSE_NUMBER");

  public static RegistrationNumberType ISSUANCE_DATE = new RegistrationNumberType("ISSUANCE_DATE");

  public static RegistrationNumberType ISSUED_TAX_ID = new RegistrationNumberType("ISSUED_TAX_ID");

  public static RegistrationNumberType IS_ADDRESS_IN_EU = new RegistrationNumberType("IS_ADDRESS_IN_EU");

  public static RegistrationNumberType IS_CONDITION = new RegistrationNumberType("IS_CONDITION");

  public static RegistrationNumberType IS_GOVERNMENT_ENTITY = new RegistrationNumberType("IS_GOVERNMENT_ENTITY");

  public static RegistrationNumberType IS_IN_ZONING_PLAN = new RegistrationNumberType("IS_IN_ZONING_PLAN");

  public static RegistrationNumberType IS_PROFESSIONAL_HOST = new RegistrationNumberType("IS_PROFESSIONAL_HOST");

  public static RegistrationNumberType IS_RESIDENCE_IN_EU = new RegistrationNumberType("IS_RESIDENCE_IN_EU");

  public static RegistrationNumberType IS_TRADED = new RegistrationNumberType("IS_TRADED");

  public static RegistrationNumberType IS_VAT_REGISTERED = new RegistrationNumberType("IS_VAT_REGISTERED");

  public static RegistrationNumberType IS_ZONING_LAW_APPLIED = new RegistrationNumberType("IS_ZONING_LAW_APPLIED");

  public static RegistrationNumberType JOURNAL_NUMBER = new RegistrationNumberType("JOURNAL_NUMBER");

  public static RegistrationNumberType LAND_REGISTRATION_NUMBER = new RegistrationNumberType("LAND_REGISTRATION_NUMBER");

  public static RegistrationNumberType LEGAL_ADDRESS = new RegistrationNumberType("LEGAL_ADDRESS");

  public static RegistrationNumberType LICENSE_ID = new RegistrationNumberType("LICENSE_ID");

  public static RegistrationNumberType LICENSE_NUMBER = new RegistrationNumberType("LICENSE_NUMBER");

  public static RegistrationNumberType MA_REGISTRATION_CERTIFICATE_NUMBER = new RegistrationNumberType("MA_REGISTRATION_CERTIFICATE_NUMBER");

  public static RegistrationNumberType NATIONAL_ADDRESS_NUMBER = new RegistrationNumberType("NATIONAL_ADDRESS_NUMBER");

  public static RegistrationNumberType NEIGHBORHOOD_NAME = new RegistrationNumberType("NEIGHBORHOOD_NAME");

  public static RegistrationNumberType OPERATOR_LICENCE_ID = new RegistrationNumberType("OPERATOR_LICENCE_ID");

  public static RegistrationNumberType OPERATOR_LICENSE_ID = new RegistrationNumberType("OPERATOR_LICENSE_ID");

  public static RegistrationNumberType OPERATOR_LICENSE_NUMBER = new RegistrationNumberType("OPERATOR_LICENSE_NUMBER");

  public static RegistrationNumberType OPERATOR_PERMIT = new RegistrationNumberType("OPERATOR_PERMIT");

  public static RegistrationNumberType OWNER_ID = new RegistrationNumberType("OWNER_ID");

  public static RegistrationNumberType OWNER_IS_CITIZEN = new RegistrationNumberType("OWNER_IS_CITIZEN");

  public static RegistrationNumberType OWNER_NAME = new RegistrationNumberType("OWNER_NAME");

  public static RegistrationNumberType OWNER_PERMIT = new RegistrationNumberType("OWNER_PERMIT");

  public static RegistrationNumberType PARCEL_NUMBER_TAX_MAP_KEY = new RegistrationNumberType("PARCEL_NUMBER_TAX_MAP_KEY");

  public static RegistrationNumberType PARTIAL_TAX_ID = new RegistrationNumberType("PARTIAL_TAX_ID");

  public static RegistrationNumberType PERMANENT_ESTABLISHMENT_COUNTRY = new RegistrationNumberType("PERMANENT_ESTABLISHMENT_COUNTRY");

  public static RegistrationNumberType PERMIT_NUMBER = new RegistrationNumberType("PERMIT_NUMBER");

  public static RegistrationNumberType PLANNING_NUMBER = new RegistrationNumberType("PLANNING_NUMBER");

  public static RegistrationNumberType PROPERTY_REGISTRY_NUMBER = new RegistrationNumberType("PROPERTY_REGISTRY_NUMBER");

  public static RegistrationNumberType PROVINCIAL_TOURIST_IDENTIFICATION_CODE = new RegistrationNumberType("PROVINCIAL_TOURIST_IDENTIFICATION_CODE");

  public static RegistrationNumberType REGISTRATION_CERTIFICATE_NUMBER = new RegistrationNumberType("REGISTRATION_CERTIFICATE_NUMBER");

  public static RegistrationNumberType REGISTRATION_NUMBER = new RegistrationNumberType("REGISTRATION_NUMBER");

  public static RegistrationNumberType RESORT_TAX_ID = new RegistrationNumberType("RESORT_TAX_ID");

  public static RegistrationNumberType SHORT_TERM_RENTAL_LICENSE = new RegistrationNumberType("SHORT_TERM_RENTAL_LICENSE");

  public static RegistrationNumberType SPECIAL_OPERATION_SIGN = new RegistrationNumberType("SPECIAL_OPERATION_SIGN");

  public static RegistrationNumberType TAX_IDENTIFICATION_NUMBER = new RegistrationNumberType("TAX_IDENTIFICATION_NUMBER");

  public static RegistrationNumberType TOURIST_DEVELOPMENT_TAX_ACCOUNT_NUMBER = new RegistrationNumberType("TOURIST_DEVELOPMENT_TAX_ACCOUNT_NUMBER");

  public static RegistrationNumberType TRANSIENT_ACCOMMODATIONS_TAX_ID = new RegistrationNumberType("TRANSIENT_ACCOMMODATIONS_TAX_ID");

  public static RegistrationNumberType TRANSIENT_REGISTRATION_NUMBER = new RegistrationNumberType("TRANSIENT_REGISTRATION_NUMBER");

  public static RegistrationNumberType VAT_ID = new RegistrationNumberType("VAT_ID");

  public static RegistrationNumberType ZIPCODE = new RegistrationNumberType("ZIPCODE");

  public String rawValue;

  private RegistrationNumberType(String rawValue) {
    this.rawValue = rawValue;
  }

  /**
   * Returns the RegistrationNumberType that represents the specified rawValue.
   * Note: unknown values of rawValue will return UNKNOWN__. You may want to update your schema instead of calling this method directly.
   */
  public static RegistrationNumberType safeValueOf(String rawValue) {
    switch (Objects.requireNonNull(rawValue)) {
      case "APPLICATION_NUMBER": return RegistrationNumberType.APPLICATION_NUMBER;
      case "AUSTRALIAN_BUSINESS_NUMBER": return RegistrationNumberType.AUSTRALIAN_BUSINESS_NUMBER;
      case "BIRTH_DATE": return RegistrationNumberType.BIRTH_DATE;
      case "BOSTON_REGISTRATION_NUMBER": return RegistrationNumberType.BOSTON_REGISTRATION_NUMBER;
      case "BUSINESS_ISSUING_REGISTRY": return RegistrationNumberType.BUSINESS_ISSUING_REGISTRY;
      case "BUSINESS_LICENSE_NUMBER": return RegistrationNumberType.BUSINESS_LICENSE_NUMBER;
      case "BUSINESS_REGISTRATION_NUMBER": return RegistrationNumberType.BUSINESS_REGISTRATION_NUMBER;
      case "BUSINESS_TAX_ID": return RegistrationNumberType.BUSINESS_TAX_ID;
      case "BUSINESS_TAX_RECEIPT_NUMBER": return RegistrationNumberType.BUSINESS_TAX_RECEIPT_NUMBER;
      case "CADASTRAL_REFERENCE": return RegistrationNumberType.CADASTRAL_REFERENCE;
      case "CERTIFICATE_OF_USE_NUMBER": return RegistrationNumberType.CERTIFICATE_OF_USE_NUMBER;
      case "CITIZEN_ID": return RegistrationNumberType.CITIZEN_ID;
      case "COUNTY_CODE": return RegistrationNumberType.COUNTY_CODE;
      case "DATE": return RegistrationNumberType.DATE;
      case "ENTITY_TYPE": return RegistrationNumberType.ENTITY_TYPE;
      case "FLOOR_SYSTEM_NUMBER": return RegistrationNumberType.FLOOR_SYSTEM_NUMBER;
      case "FOREIGN_ID": return RegistrationNumberType.FOREIGN_ID;
      case "GENERAL_EXCISE_TAX_ID": return RegistrationNumberType.GENERAL_EXCISE_TAX_ID;
      case "HAS_AUSTRALIAN_BUSINESS_NUMBER": return RegistrationNumberType.HAS_AUSTRALIAN_BUSINESS_NUMBER;
      case "HOME_SHARING_NUMBER": return RegistrationNumberType.HOME_SHARING_NUMBER;
      case "HOME_SHARING_PERMIT_NUMBER": return RegistrationNumberType.HOME_SHARING_PERMIT_NUMBER;
      case "HOTEL_LICENSE": return RegistrationNumberType.HOTEL_LICENSE;
      case "HOUSE_NUMBER": return RegistrationNumberType.HOUSE_NUMBER;
      case "ISSUANCE_DATE": return RegistrationNumberType.ISSUANCE_DATE;
      case "ISSUED_TAX_ID": return RegistrationNumberType.ISSUED_TAX_ID;
      case "IS_ADDRESS_IN_EU": return RegistrationNumberType.IS_ADDRESS_IN_EU;
      case "IS_CONDITION": return RegistrationNumberType.IS_CONDITION;
      case "IS_GOVERNMENT_ENTITY": return RegistrationNumberType.IS_GOVERNMENT_ENTITY;
      case "IS_IN_ZONING_PLAN": return RegistrationNumberType.IS_IN_ZONING_PLAN;
      case "IS_PROFESSIONAL_HOST": return RegistrationNumberType.IS_PROFESSIONAL_HOST;
      case "IS_RESIDENCE_IN_EU": return RegistrationNumberType.IS_RESIDENCE_IN_EU;
      case "IS_TRADED": return RegistrationNumberType.IS_TRADED;
      case "IS_VAT_REGISTERED": return RegistrationNumberType.IS_VAT_REGISTERED;
      case "IS_ZONING_LAW_APPLIED": return RegistrationNumberType.IS_ZONING_LAW_APPLIED;
      case "JOURNAL_NUMBER": return RegistrationNumberType.JOURNAL_NUMBER;
      case "LAND_REGISTRATION_NUMBER": return RegistrationNumberType.LAND_REGISTRATION_NUMBER;
      case "LEGAL_ADDRESS": return RegistrationNumberType.LEGAL_ADDRESS;
      case "LICENSE_ID": return RegistrationNumberType.LICENSE_ID;
      case "LICENSE_NUMBER": return RegistrationNumberType.LICENSE_NUMBER;
      case "MA_REGISTRATION_CERTIFICATE_NUMBER": return RegistrationNumberType.MA_REGISTRATION_CERTIFICATE_NUMBER;
      case "NATIONAL_ADDRESS_NUMBER": return RegistrationNumberType.NATIONAL_ADDRESS_NUMBER;
      case "NEIGHBORHOOD_NAME": return RegistrationNumberType.NEIGHBORHOOD_NAME;
      case "OPERATOR_LICENCE_ID": return RegistrationNumberType.OPERATOR_LICENCE_ID;
      case "OPERATOR_LICENSE_ID": return RegistrationNumberType.OPERATOR_LICENSE_ID;
      case "OPERATOR_LICENSE_NUMBER": return RegistrationNumberType.OPERATOR_LICENSE_NUMBER;
      case "OPERATOR_PERMIT": return RegistrationNumberType.OPERATOR_PERMIT;
      case "OWNER_ID": return RegistrationNumberType.OWNER_ID;
      case "OWNER_IS_CITIZEN": return RegistrationNumberType.OWNER_IS_CITIZEN;
      case "OWNER_NAME": return RegistrationNumberType.OWNER_NAME;
      case "OWNER_PERMIT": return RegistrationNumberType.OWNER_PERMIT;
      case "PARCEL_NUMBER_TAX_MAP_KEY": return RegistrationNumberType.PARCEL_NUMBER_TAX_MAP_KEY;
      case "PARTIAL_TAX_ID": return RegistrationNumberType.PARTIAL_TAX_ID;
      case "PERMANENT_ESTABLISHMENT_COUNTRY": return RegistrationNumberType.PERMANENT_ESTABLISHMENT_COUNTRY;
      case "PERMIT_NUMBER": return RegistrationNumberType.PERMIT_NUMBER;
      case "PLANNING_NUMBER": return RegistrationNumberType.PLANNING_NUMBER;
      case "PROPERTY_REGISTRY_NUMBER": return RegistrationNumberType.PROPERTY_REGISTRY_NUMBER;
      case "PROVINCIAL_TOURIST_IDENTIFICATION_CODE": return RegistrationNumberType.PROVINCIAL_TOURIST_IDENTIFICATION_CODE;
      case "REGISTRATION_CERTIFICATE_NUMBER": return RegistrationNumberType.REGISTRATION_CERTIFICATE_NUMBER;
      case "REGISTRATION_NUMBER": return RegistrationNumberType.REGISTRATION_NUMBER;
      case "RESORT_TAX_ID": return RegistrationNumberType.RESORT_TAX_ID;
      case "SHORT_TERM_RENTAL_LICENSE": return RegistrationNumberType.SHORT_TERM_RENTAL_LICENSE;
      case "SPECIAL_OPERATION_SIGN": return RegistrationNumberType.SPECIAL_OPERATION_SIGN;
      case "TAX_IDENTIFICATION_NUMBER": return RegistrationNumberType.TAX_IDENTIFICATION_NUMBER;
      case "TOURIST_DEVELOPMENT_TAX_ACCOUNT_NUMBER": return RegistrationNumberType.TOURIST_DEVELOPMENT_TAX_ACCOUNT_NUMBER;
      case "TRANSIENT_ACCOMMODATIONS_TAX_ID": return RegistrationNumberType.TRANSIENT_ACCOMMODATIONS_TAX_ID;
      case "TRANSIENT_REGISTRATION_NUMBER": return RegistrationNumberType.TRANSIENT_REGISTRATION_NUMBER;
      case "VAT_ID": return RegistrationNumberType.VAT_ID;
      case "ZIPCODE": return RegistrationNumberType.ZIPCODE;
      default: return new RegistrationNumberType.UNKNOWN__(rawValue);
    }
  }

  /**
   * An enum value that wasn't known at compile time.
   */
  public static class UNKNOWN__ extends RegistrationNumberType {
    private UNKNOWN__(String rawValue) {
      super(rawValue);
    }

    @Override
    public boolean equals(Object other) {
      if (this == other) return true;
      if (!(other instanceof UNKNOWN__)) return false;
      return rawValue.equals(((UNKNOWN__) other).rawValue);
    }

    @Override
    public int hashCode() {
      return rawValue.hashCode();
    }

    @Override
    public String toString() {
      return "UNKNOWN__(" + rawValue + ")";
    }
  }
}
