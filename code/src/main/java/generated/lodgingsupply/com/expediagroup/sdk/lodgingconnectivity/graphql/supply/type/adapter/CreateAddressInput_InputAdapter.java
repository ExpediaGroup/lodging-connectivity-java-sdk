//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.Adapters;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ListAdapter;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CountryCode;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.CreateAddressInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;
import java.lang.String;

public enum CreateAddressInput_InputAdapter implements Adapter<CreateAddressInput> {
  INSTANCE;

  @Override
  public CreateAddressInput fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
      throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      CreateAddressInput value) throws IOException {
    writer.name("addressLines");
    new ListAdapter<>(Adapters.StringAdapter).toJson(writer, customScalarAdapters, value.addressLines);
    if (value.administrativeArea.isPresent()) {
      writer.name("administrativeArea");
      new OptionalAdapter<>(OptionalAdapters.OptionalStringAdapter).toJson(writer, customScalarAdapters, value.administrativeArea);
    }
    writer.name("countryCode");
    (customScalarAdapters.<String>responseAdapterFor(CountryCode.type)).toJson(writer, customScalarAdapters, value.countryCode);
    writer.name("locality");
    Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.locality);
    writer.name("postalCode");
    Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.postalCode);
  }
}
