//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

public class ReviewsOrderBy {
  public final Optional<Optional<SortOrder>> createdDateTime;

  public final Optional<Optional<SortOrder>> lastUpdatedDateTime;

  public final Optional<Optional<SortOrder>> ownerResponseCreatedDateTime;

  public final Optional<Optional<SortOrder>> ownerResponseLastUpdatedDateTime;

  public final Optional<Optional<SortOrder>> reservationCheckInDate;

  public final Optional<Optional<SortOrder>> reservationCheckOutDate;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public ReviewsOrderBy(Optional<Optional<SortOrder>> createdDateTime,
      Optional<Optional<SortOrder>> lastUpdatedDateTime,
      Optional<Optional<SortOrder>> ownerResponseCreatedDateTime,
      Optional<Optional<SortOrder>> ownerResponseLastUpdatedDateTime,
      Optional<Optional<SortOrder>> reservationCheckInDate,
      Optional<Optional<SortOrder>> reservationCheckOutDate) {
    this.createdDateTime = createdDateTime;
    this.lastUpdatedDateTime = lastUpdatedDateTime;
    this.ownerResponseCreatedDateTime = ownerResponseCreatedDateTime;
    this.ownerResponseLastUpdatedDateTime = ownerResponseLastUpdatedDateTime;
    this.reservationCheckInDate = reservationCheckInDate;
    this.reservationCheckOutDate = reservationCheckOutDate;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof ReviewsOrderBy) {
      ReviewsOrderBy that = (ReviewsOrderBy) o;
      return ((this.createdDateTime == null) ? (that.createdDateTime == null) : this.createdDateTime.equals(that.createdDateTime))
       &&((this.lastUpdatedDateTime == null) ? (that.lastUpdatedDateTime == null) : this.lastUpdatedDateTime.equals(that.lastUpdatedDateTime))
       &&((this.ownerResponseCreatedDateTime == null) ? (that.ownerResponseCreatedDateTime == null) : this.ownerResponseCreatedDateTime.equals(that.ownerResponseCreatedDateTime))
       &&((this.ownerResponseLastUpdatedDateTime == null) ? (that.ownerResponseLastUpdatedDateTime == null) : this.ownerResponseLastUpdatedDateTime.equals(that.ownerResponseLastUpdatedDateTime))
       &&((this.reservationCheckInDate == null) ? (that.reservationCheckInDate == null) : this.reservationCheckInDate.equals(that.reservationCheckInDate))
       &&((this.reservationCheckOutDate == null) ? (that.reservationCheckOutDate == null) : this.reservationCheckOutDate.equals(that.reservationCheckOutDate));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (createdDateTime == null) ? 0 : createdDateTime.hashCode();
      __h *= 1000003;
      __h ^= (lastUpdatedDateTime == null) ? 0 : lastUpdatedDateTime.hashCode();
      __h *= 1000003;
      __h ^= (ownerResponseCreatedDateTime == null) ? 0 : ownerResponseCreatedDateTime.hashCode();
      __h *= 1000003;
      __h ^= (ownerResponseLastUpdatedDateTime == null) ? 0 : ownerResponseLastUpdatedDateTime.hashCode();
      __h *= 1000003;
      __h ^= (reservationCheckInDate == null) ? 0 : reservationCheckInDate.hashCode();
      __h *= 1000003;
      __h ^= (reservationCheckOutDate == null) ? 0 : reservationCheckOutDate.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "ReviewsOrderBy{"
        + "createdDateTime=" + createdDateTime + ", "
        + "lastUpdatedDateTime=" + lastUpdatedDateTime + ", "
        + "ownerResponseCreatedDateTime=" + ownerResponseCreatedDateTime + ", "
        + "ownerResponseLastUpdatedDateTime=" + ownerResponseLastUpdatedDateTime + ", "
        + "reservationCheckInDate=" + reservationCheckInDate + ", "
        + "reservationCheckOutDate=" + reservationCheckOutDate
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Optional<SortOrder>> createdDateTime = Optional.empty();

    private Optional<Optional<SortOrder>> lastUpdatedDateTime = Optional.empty();

    private Optional<Optional<SortOrder>> ownerResponseCreatedDateTime = Optional.empty();

    private Optional<Optional<SortOrder>> ownerResponseLastUpdatedDateTime = Optional.empty();

    private Optional<Optional<SortOrder>> reservationCheckInDate = Optional.empty();

    private Optional<Optional<SortOrder>> reservationCheckOutDate = Optional.empty();

    Builder() {
    }

    /**
     * Sort based on review created dateTime
     */
    public Builder createdDateTime(@NotNull Optional<SortOrder> createdDateTime) {
      this.createdDateTime = Optional.of(createdDateTime);
      return this;
    }

    /**
     * Sort based on review updated dateTime
     */
    public Builder lastUpdatedDateTime(@NotNull Optional<SortOrder> lastUpdatedDateTime) {
      this.lastUpdatedDateTime = Optional.of(lastUpdatedDateTime);
      return this;
    }

    /**
     * Sort based on owner response created dateTime
     */
    public Builder ownerResponseCreatedDateTime(
        @NotNull Optional<SortOrder> ownerResponseCreatedDateTime) {
      this.ownerResponseCreatedDateTime = Optional.of(ownerResponseCreatedDateTime);
      return this;
    }

    /**
     * Sort based on owner response updated dateTime
     */
    public Builder ownerResponseLastUpdatedDateTime(
        @NotNull Optional<SortOrder> ownerResponseLastUpdatedDateTime) {
      this.ownerResponseLastUpdatedDateTime = Optional.of(ownerResponseLastUpdatedDateTime);
      return this;
    }

    /**
     * Sort based on reservation checkIn date
     */
    public Builder reservationCheckInDate(@NotNull Optional<SortOrder> reservationCheckInDate) {
      this.reservationCheckInDate = Optional.of(reservationCheckInDate);
      return this;
    }

    /**
     * Sort based on reservation checkOut date
     */
    public Builder reservationCheckOutDate(@NotNull Optional<SortOrder> reservationCheckOutDate) {
      this.reservationCheckOutDate = Optional.of(reservationCheckOutDate);
      return this;
    }

    public ReviewsOrderBy build() {
      return new ReviewsOrderBy(createdDateTime, lastUpdatedDateTime, ownerResponseCreatedDateTime, ownerResponseLastUpdatedDateTime, reservationCheckInDate, reservationCheckOutDate);
    }
  }
}
