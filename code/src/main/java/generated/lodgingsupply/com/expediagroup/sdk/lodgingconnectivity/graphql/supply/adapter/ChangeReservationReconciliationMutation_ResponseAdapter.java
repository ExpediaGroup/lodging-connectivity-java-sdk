//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.ChangeReservationReconciliationMutation;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class ChangeReservationReconciliationMutation_ResponseAdapter {
  public enum Data implements Adapter<ChangeReservationReconciliationMutation.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("changeReservationReconciliation");

    @Override
    public ChangeReservationReconciliationMutation.Data fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      ChangeReservationReconciliationMutation.ChangeReservationReconciliation _changeReservationReconciliation = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _changeReservationReconciliation = new ObjectAdapter<ChangeReservationReconciliationMutation.ChangeReservationReconciliation>(ChangeReservationReconciliation.INSTANCE, false).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_changeReservationReconciliation, "changeReservationReconciliation");

      return new ChangeReservationReconciliationMutation.Data(
        _changeReservationReconciliation
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        ChangeReservationReconciliationMutation.Data value) throws IOException {
      writer.name("changeReservationReconciliation");
      new ObjectAdapter<ChangeReservationReconciliationMutation.ChangeReservationReconciliation>(ChangeReservationReconciliation.INSTANCE, false).toJson(writer, customScalarAdapters, value.changeReservationReconciliation);
    }
  }

  public enum ChangeReservationReconciliation implements Adapter<ChangeReservationReconciliationMutation.ChangeReservationReconciliation> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("reservation");

    @Override
    public ChangeReservationReconciliationMutation.ChangeReservationReconciliation fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      ChangeReservationReconciliationMutation.Reservation _reservation = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _reservation = new NullableAdapter<>(new ObjectAdapter<ChangeReservationReconciliationMutation.Reservation>(Reservation.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new ChangeReservationReconciliationMutation.ChangeReservationReconciliation(
        _reservation
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        ChangeReservationReconciliationMutation.ChangeReservationReconciliation value) throws
        IOException {
      writer.name("reservation");
      new NullableAdapter<>(new ObjectAdapter<ChangeReservationReconciliationMutation.Reservation>(Reservation.INSTANCE, false)).toJson(writer, customScalarAdapters, value.reservation);
    }
  }

  public enum Reservation implements Adapter<ChangeReservationReconciliationMutation.Reservation> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("id");

    @Override
    public ChangeReservationReconciliationMutation.Reservation fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String _id = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _id = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_id, "id");

      return new ChangeReservationReconciliationMutation.Reservation(
        _id
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        ChangeReservationReconciliationMutation.Reservation value) throws IOException {
      writer.name("id");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.id);
    }
  }
}
