//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.CompiledField;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter.PropertyFeeSetsQuery_ResponseAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter.PropertyFeeSetsQuery_VariablesAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.selections.PropertyFeeSetsQuerySelections;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeAgeCategory;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeBusinessModel;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeChargeDuration;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeChargeType;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.PropertyFeeSetsFiltersInput;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

public class PropertyFeeSetsQuery implements Query<PropertyFeeSetsQuery.Data> {
  public static final String OPERATION_ID = "8715ab8939abfb83580f342ec451df416405ea33be6a19207e51aa334c2075f8";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query PropertyFeeSets($propertyId: String!, $filters: PropertyFeeSetsFiltersInput!) {
   *   property(id: $propertyId) {
   *     feeSets(filters: $filters) {
   *       elements {
   *         businessModel
   *         fees {
   *           ageCategory
   *           charges {
   *             duration
   *             flatAmount {
   *               amount
   *               currencyCode
   *             }
   *             percentage
   *             type
   *           }
   *           name
   *           restrictions {
   *             dateRange {
   *               from
   *               to
   *             }
   *             extraGuestRange {
   *               max
   *               min
   *             }
   *             rangeOfNight {
   *               max
   *               min
   *             }
   *           }
   *           scope
   *           taxable
   *           type
   *           variesByLengthOfStay
   *         }
   *         id
   *         name
   *       }
   *       totalCount
   *     }
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query PropertyFeeSets($propertyId: String!, $filters: PropertyFeeSetsFiltersInput!) { property(id: $propertyId) { feeSets(filters: $filters) { elements { businessModel fees { ageCategory charges { duration flatAmount { amount currencyCode } percentage type } name restrictions { dateRange { from to } extraGuestRange { max min } rangeOfNight { max min } } scope taxable type variesByLengthOfStay } id name } totalCount } } }";

  public static final String OPERATION_NAME = "PropertyFeeSets";

  public final String propertyId;

  public final PropertyFeeSetsFiltersInput filters;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public PropertyFeeSetsQuery(String propertyId, PropertyFeeSetsFiltersInput filters) {
    this.propertyId = propertyId;
    this.filters = filters;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof PropertyFeeSetsQuery) {
      PropertyFeeSetsQuery that = (PropertyFeeSetsQuery) o;
      return ((this.propertyId == null) ? (that.propertyId == null) : this.propertyId.equals(that.propertyId))
       &&((this.filters == null) ? (that.filters == null) : this.filters.equals(that.filters));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (propertyId == null) ? 0 : propertyId.hashCode();
      __h *= 1000003;
      __h ^= (filters == null) ? 0 : filters.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "PropertyFeeSetsQuery{"
        + "propertyId=" + propertyId + ", "
        + "filters=" + filters
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withDefaultValues) throws IOException {
    PropertyFeeSetsQuery_VariablesAdapter.INSTANCE.serializeVariables(writer, this, customScalarAdapters, withDefaultValues);
  }

  @Override
  public Adapter<Data> adapter() {
    return new ObjectAdapter<Data>(PropertyFeeSetsQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Query.type
    )
    .selections(PropertyFeeSetsQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    private String propertyId;

    private PropertyFeeSetsFiltersInput filters;

    Builder() {
    }

    public Builder propertyId(String propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    public Builder filters(PropertyFeeSetsFiltersInput filters) {
      this.filters = filters;
      return this;
    }

    public PropertyFeeSetsQuery build() {
      return new PropertyFeeSetsQuery(propertyId, filters);
    }
  }

  public static class Data implements Query.Data {
    public Optional<Property> property;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Data(Optional<Property> property) {
      this.property = property;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.property == null) ? (that.property == null) : this.property.equals(that.property));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (property == null) ? 0 : property.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "property=" + property
          + "}";
      }
      return $toString;
    }
  }

  public static class Property {
    public Optional<FeeSets> feeSets;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Property(Optional<FeeSets> feeSets) {
      this.feeSets = feeSets;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Property) {
        Property that = (Property) o;
        return ((this.feeSets == null) ? (that.feeSets == null) : this.feeSets.equals(that.feeSets));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (feeSets == null) ? 0 : feeSets.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Property{"
          + "feeSets=" + feeSets
          + "}";
      }
      return $toString;
    }
  }

  public static class FeeSets {
    public List<Element> elements;

    public Integer totalCount;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public FeeSets(List<Element> elements, Integer totalCount) {
      this.elements = elements;
      this.totalCount = totalCount;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof FeeSets) {
        FeeSets that = (FeeSets) o;
        return ((this.elements == null) ? (that.elements == null) : this.elements.equals(that.elements))
         &&((this.totalCount == null) ? (that.totalCount == null) : this.totalCount.equals(that.totalCount));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (elements == null) ? 0 : elements.hashCode();
        __h *= 1000003;
        __h ^= (totalCount == null) ? 0 : totalCount.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "FeeSets{"
          + "elements=" + elements + ", "
          + "totalCount=" + totalCount
          + "}";
      }
      return $toString;
    }
  }

  public static class Element {
    public FeeBusinessModel businessModel;

    public List<Fee> fees;

    public String id;

    public String name;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Element(FeeBusinessModel businessModel, List<Fee> fees, String id, String name) {
      this.businessModel = businessModel;
      this.fees = fees;
      this.id = id;
      this.name = name;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Element) {
        Element that = (Element) o;
        return ((this.businessModel == null) ? (that.businessModel == null) : this.businessModel.equals(that.businessModel))
         &&((this.fees == null) ? (that.fees == null) : this.fees.equals(that.fees))
         &&((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.name == null) ? (that.name == null) : this.name.equals(that.name));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (businessModel == null) ? 0 : businessModel.hashCode();
        __h *= 1000003;
        __h ^= (fees == null) ? 0 : fees.hashCode();
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (name == null) ? 0 : name.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Element{"
          + "businessModel=" + businessModel + ", "
          + "fees=" + fees + ", "
          + "id=" + id + ", "
          + "name=" + name
          + "}";
      }
      return $toString;
    }
  }

  public static class Fee {
    public Optional<FeeAgeCategory> ageCategory;

    public List<Charge> charges;

    public String name;

    public Optional<Restrictions> restrictions;

    public String scope;

    public Optional<Boolean> taxable;

    public String type;

    public Optional<Boolean> variesByLengthOfStay;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Fee(Optional<FeeAgeCategory> ageCategory, List<Charge> charges, String name,
        Optional<Restrictions> restrictions, String scope, Optional<Boolean> taxable, String type,
        Optional<Boolean> variesByLengthOfStay) {
      this.ageCategory = ageCategory;
      this.charges = charges;
      this.name = name;
      this.restrictions = restrictions;
      this.scope = scope;
      this.taxable = taxable;
      this.type = type;
      this.variesByLengthOfStay = variesByLengthOfStay;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Fee) {
        Fee that = (Fee) o;
        return ((this.ageCategory == null) ? (that.ageCategory == null) : this.ageCategory.equals(that.ageCategory))
         &&((this.charges == null) ? (that.charges == null) : this.charges.equals(that.charges))
         &&((this.name == null) ? (that.name == null) : this.name.equals(that.name))
         &&((this.restrictions == null) ? (that.restrictions == null) : this.restrictions.equals(that.restrictions))
         &&((this.scope == null) ? (that.scope == null) : this.scope.equals(that.scope))
         &&((this.taxable == null) ? (that.taxable == null) : this.taxable.equals(that.taxable))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type))
         &&((this.variesByLengthOfStay == null) ? (that.variesByLengthOfStay == null) : this.variesByLengthOfStay.equals(that.variesByLengthOfStay));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (ageCategory == null) ? 0 : ageCategory.hashCode();
        __h *= 1000003;
        __h ^= (charges == null) ? 0 : charges.hashCode();
        __h *= 1000003;
        __h ^= (name == null) ? 0 : name.hashCode();
        __h *= 1000003;
        __h ^= (restrictions == null) ? 0 : restrictions.hashCode();
        __h *= 1000003;
        __h ^= (scope == null) ? 0 : scope.hashCode();
        __h *= 1000003;
        __h ^= (taxable == null) ? 0 : taxable.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        __h *= 1000003;
        __h ^= (variesByLengthOfStay == null) ? 0 : variesByLengthOfStay.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Fee{"
          + "ageCategory=" + ageCategory + ", "
          + "charges=" + charges + ", "
          + "name=" + name + ", "
          + "restrictions=" + restrictions + ", "
          + "scope=" + scope + ", "
          + "taxable=" + taxable + ", "
          + "type=" + type + ", "
          + "variesByLengthOfStay=" + variesByLengthOfStay
          + "}";
      }
      return $toString;
    }
  }

  public static class Charge {
    public FeeChargeDuration duration;

    public Optional<FlatAmount> flatAmount;

    public Optional<String> percentage;

    public FeeChargeType type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Charge(FeeChargeDuration duration, Optional<FlatAmount> flatAmount,
        Optional<String> percentage, FeeChargeType type) {
      this.duration = duration;
      this.flatAmount = flatAmount;
      this.percentage = percentage;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Charge) {
        Charge that = (Charge) o;
        return ((this.duration == null) ? (that.duration == null) : this.duration.equals(that.duration))
         &&((this.flatAmount == null) ? (that.flatAmount == null) : this.flatAmount.equals(that.flatAmount))
         &&((this.percentage == null) ? (that.percentage == null) : this.percentage.equals(that.percentage))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (duration == null) ? 0 : duration.hashCode();
        __h *= 1000003;
        __h ^= (flatAmount == null) ? 0 : flatAmount.hashCode();
        __h *= 1000003;
        __h ^= (percentage == null) ? 0 : percentage.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Charge{"
          + "duration=" + duration + ", "
          + "flatAmount=" + flatAmount + ", "
          + "percentage=" + percentage + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }

  public static class FlatAmount {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public String amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public FlatAmount(String amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof FlatAmount) {
        FlatAmount that = (FlatAmount) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "FlatAmount{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }

  public static class Restrictions {
    public Optional<DateRange> dateRange;

    public Optional<ExtraGuestRange> extraGuestRange;

    public Optional<RangeOfNight> rangeOfNight;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Restrictions(Optional<DateRange> dateRange, Optional<ExtraGuestRange> extraGuestRange,
        Optional<RangeOfNight> rangeOfNight) {
      this.dateRange = dateRange;
      this.extraGuestRange = extraGuestRange;
      this.rangeOfNight = rangeOfNight;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Restrictions) {
        Restrictions that = (Restrictions) o;
        return ((this.dateRange == null) ? (that.dateRange == null) : this.dateRange.equals(that.dateRange))
         &&((this.extraGuestRange == null) ? (that.extraGuestRange == null) : this.extraGuestRange.equals(that.extraGuestRange))
         &&((this.rangeOfNight == null) ? (that.rangeOfNight == null) : this.rangeOfNight.equals(that.rangeOfNight));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (dateRange == null) ? 0 : dateRange.hashCode();
        __h *= 1000003;
        __h ^= (extraGuestRange == null) ? 0 : extraGuestRange.hashCode();
        __h *= 1000003;
        __h ^= (rangeOfNight == null) ? 0 : rangeOfNight.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Restrictions{"
          + "dateRange=" + dateRange + ", "
          + "extraGuestRange=" + extraGuestRange + ", "
          + "rangeOfNight=" + rangeOfNight
          + "}";
      }
      return $toString;
    }
  }

  public static class DateRange {
    public LocalDate from;

    public Optional<LocalDate> to;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public DateRange(LocalDate from, Optional<LocalDate> to) {
      this.from = from;
      this.to = to;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof DateRange) {
        DateRange that = (DateRange) o;
        return ((this.from == null) ? (that.from == null) : this.from.equals(that.from))
         &&((this.to == null) ? (that.to == null) : this.to.equals(that.to));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (from == null) ? 0 : from.hashCode();
        __h *= 1000003;
        __h ^= (to == null) ? 0 : to.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "DateRange{"
          + "from=" + from + ", "
          + "to=" + to
          + "}";
      }
      return $toString;
    }
  }

  public static class ExtraGuestRange {
    public Integer max;

    public Integer min;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public ExtraGuestRange(Integer max, Integer min) {
      this.max = max;
      this.min = min;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof ExtraGuestRange) {
        ExtraGuestRange that = (ExtraGuestRange) o;
        return ((this.max == null) ? (that.max == null) : this.max.equals(that.max))
         &&((this.min == null) ? (that.min == null) : this.min.equals(that.min));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (max == null) ? 0 : max.hashCode();
        __h *= 1000003;
        __h ^= (min == null) ? 0 : min.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "ExtraGuestRange{"
          + "max=" + max + ", "
          + "min=" + min
          + "}";
      }
      return $toString;
    }
  }

  public static class RangeOfNight {
    public Integer max;

    public Integer min;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public RangeOfNight(Integer max, Integer min) {
      this.max = max;
      this.min = min;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof RangeOfNight) {
        RangeOfNight that = (RangeOfNight) o;
        return ((this.max == null) ? (that.max == null) : this.max.equals(that.max))
         &&((this.min == null) ? (that.min == null) : this.min.equals(that.min));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (max == null) ? 0 : max.hashCode();
        __h *= 1000003;
        __h ^= (min == null) ? 0 : min.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "RangeOfNight{"
          + "max=" + max + ", "
          + "min=" + min
          + "}";
      }
      return $toString;
    }
  }
}
