//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import com.apollographql.apollo.api.Optional;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;

/**
 * Acknowledgement record information for a bookable unit.
 */
public class AcknowledgementRecordInput {
  public final Optional<AcknowledgementType> acknowledgementType;

  public final String id;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public AcknowledgementRecordInput(Optional<AcknowledgementType> acknowledgementType, String id) {
    this.acknowledgementType = acknowledgementType;
    this.id = id;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof AcknowledgementRecordInput) {
      AcknowledgementRecordInput that = (AcknowledgementRecordInput) o;
      return ((this.acknowledgementType == null) ? (that.acknowledgementType == null) : this.acknowledgementType.equals(that.acknowledgementType))
       &&((this.id == null) ? (that.id == null) : this.id.equals(that.id));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (acknowledgementType == null) ? 0 : acknowledgementType.hashCode();
      __h *= 1000003;
      __h ^= (id == null) ? 0 : id.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "AcknowledgementRecordInput{"
        + "acknowledgementType=" + acknowledgementType + ", "
        + "id=" + id
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<AcknowledgementType> acknowledgementType = Optional.absent();

    private String id;

    Builder() {
    }

    /**
     * Type of acknowledgement record.
     */
    public Builder acknowledgementType(AcknowledgementType acknowledgementType) {
      this.acknowledgementType = Optional.present(acknowledgementType);
      return this;
    }

    /**
     * ID of the acknowledgement record.
     */
    public Builder id(String id) {
      this.id = id;
      return this;
    }

    public AcknowledgementRecordInput build() {
      return new AcknowledgementRecordInput(acknowledgementType, id);
    }
  }
}
