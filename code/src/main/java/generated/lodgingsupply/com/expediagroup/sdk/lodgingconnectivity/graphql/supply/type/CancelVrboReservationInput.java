//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

public class CancelVrboReservationInput {
  public final Optional<Optional<String>> clientMutationId;

  public final String propertyId;

  public final String reservationId;

  public final VrboCancellationReason primaryReason;

  public final Optional<Optional<VrboCancellationSecondaryReason>> secondaryReason;

  public final Optional<Optional<VrboCancellationPolicyOverride>> cancellationPolicyOverride;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public CancelVrboReservationInput(Optional<Optional<String>> clientMutationId, String propertyId,
      String reservationId, VrboCancellationReason primaryReason,
      Optional<Optional<VrboCancellationSecondaryReason>> secondaryReason,
      Optional<Optional<VrboCancellationPolicyOverride>> cancellationPolicyOverride) {
    this.clientMutationId = clientMutationId;
    this.propertyId = propertyId;
    this.reservationId = reservationId;
    this.primaryReason = primaryReason;
    this.secondaryReason = secondaryReason;
    this.cancellationPolicyOverride = cancellationPolicyOverride;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof CancelVrboReservationInput) {
      CancelVrboReservationInput that = (CancelVrboReservationInput) o;
      return ((this.clientMutationId == null) ? (that.clientMutationId == null) : this.clientMutationId.equals(that.clientMutationId))
       &&((this.propertyId == null) ? (that.propertyId == null) : this.propertyId.equals(that.propertyId))
       &&((this.reservationId == null) ? (that.reservationId == null) : this.reservationId.equals(that.reservationId))
       &&((this.primaryReason == null) ? (that.primaryReason == null) : this.primaryReason.equals(that.primaryReason))
       &&((this.secondaryReason == null) ? (that.secondaryReason == null) : this.secondaryReason.equals(that.secondaryReason))
       &&((this.cancellationPolicyOverride == null) ? (that.cancellationPolicyOverride == null) : this.cancellationPolicyOverride.equals(that.cancellationPolicyOverride));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (clientMutationId == null) ? 0 : clientMutationId.hashCode();
      __h *= 1000003;
      __h ^= (propertyId == null) ? 0 : propertyId.hashCode();
      __h *= 1000003;
      __h ^= (reservationId == null) ? 0 : reservationId.hashCode();
      __h *= 1000003;
      __h ^= (primaryReason == null) ? 0 : primaryReason.hashCode();
      __h *= 1000003;
      __h ^= (secondaryReason == null) ? 0 : secondaryReason.hashCode();
      __h *= 1000003;
      __h ^= (cancellationPolicyOverride == null) ? 0 : cancellationPolicyOverride.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "CancelVrboReservationInput{"
        + "clientMutationId=" + clientMutationId + ", "
        + "propertyId=" + propertyId + ", "
        + "reservationId=" + reservationId + ", "
        + "primaryReason=" + primaryReason + ", "
        + "secondaryReason=" + secondaryReason + ", "
        + "cancellationPolicyOverride=" + cancellationPolicyOverride
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Optional<String>> clientMutationId = Optional.empty();

    private String propertyId;

    private String reservationId;

    private VrboCancellationReason primaryReason;

    private Optional<Optional<VrboCancellationSecondaryReason>> secondaryReason = Optional.empty();

    private Optional<Optional<VrboCancellationPolicyOverride>> cancellationPolicyOverride = Optional.empty();

    Builder() {
    }

    /**
     * Partner supplied Unique mutation identifier
     */
    public Builder clientMutationId(@NotNull Optional<String> clientMutationId) {
      this.clientMutationId = Optional.of(clientMutationId);
      return this;
    }

    /**
     * Property ID with which this reservation is associated
     */
    public Builder propertyId(String propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    /**
     * Reservation identifier
     */
    public Builder reservationId(String reservationId) {
      this.reservationId = reservationId;
      return this;
    }

    /**
     * Primary reason for cancellation
     */
    public Builder primaryReason(VrboCancellationReason primaryReason) {
      this.primaryReason = primaryReason;
      return this;
    }

    /**
     * Secondary reason for cancellation - Only valid when reason is GUEST_REQUESTED_CANCEL
     */
    public Builder secondaryReason(
        @NotNull Optional<VrboCancellationSecondaryReason> secondaryReason) {
      this.secondaryReason = Optional.of(secondaryReason);
      return this;
    }

    /**
     * Cancellation Policy Override
     */
    public Builder cancellationPolicyOverride(
        @NotNull Optional<VrboCancellationPolicyOverride> cancellationPolicyOverride) {
      this.cancellationPolicyOverride = Optional.of(cancellationPolicyOverride);
      return this;
    }

    public CancelVrboReservationInput build() {
      return new CancelVrboReservationInput(clientMutationId, propertyId, reservationId, primaryReason, secondaryReason, cancellationPolicyOverride);
    }
  }
}
