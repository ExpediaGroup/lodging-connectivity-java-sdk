//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;

/**
 * Payload for indicating that the submitted Property IDs should be archived.
 */
public class ArchivePropertyIdsInput {
  public final String advertiserId;

  public final List<String> propertyIdsToArchive;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public ArchivePropertyIdsInput(String advertiserId, List<String> propertyIdsToArchive) {
    this.advertiserId = advertiserId;
    this.propertyIdsToArchive = propertyIdsToArchive;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof ArchivePropertyIdsInput) {
      ArchivePropertyIdsInput that = (ArchivePropertyIdsInput) o;
      return ((this.advertiserId == null) ? (that.advertiserId == null) : this.advertiserId.equals(that.advertiserId))
       &&((this.propertyIdsToArchive == null) ? (that.propertyIdsToArchive == null) : this.propertyIdsToArchive.equals(that.propertyIdsToArchive));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (advertiserId == null) ? 0 : advertiserId.hashCode();
      __h *= 1000003;
      __h ^= (propertyIdsToArchive == null) ? 0 : propertyIdsToArchive.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "ArchivePropertyIdsInput{"
        + "advertiserId=" + advertiserId + ", "
        + "propertyIdsToArchive=" + propertyIdsToArchive
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private String advertiserId;

    private List<String> propertyIdsToArchive;

    Builder() {
    }

    /**
     * The Advertiser ID associated with the property IDs that will be archived.
     */
    public Builder advertiserId(String advertiserId) {
      this.advertiserId = advertiserId;
      return this;
    }

    /**
     * A list of EG Property IDs that the Partner wishes to archive.
     */
    public Builder propertyIdsToArchive(List<String> propertyIdsToArchive) {
      this.propertyIdsToArchive = propertyIdsToArchive;
      return this;
    }

    public ArchivePropertyIdsInput build() {
      return new ArchivePropertyIdsInput(advertiserId, propertyIdsToArchive);
    }
  }
}
