//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.UpdateUnitMutation;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class UpdateUnitMutation_ResponseAdapter {
  public enum Data implements Adapter<UpdateUnitMutation.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("updateUnit");

    @Override
    public UpdateUnitMutation.Data fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      UpdateUnitMutation.UpdateUnit _updateUnit = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _updateUnit = new NullableAdapter<>(new ObjectAdapter<UpdateUnitMutation.UpdateUnit>(UpdateUnit.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new UpdateUnitMutation.Data(
        _updateUnit
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        UpdateUnitMutation.Data value) throws IOException {
      writer.name("updateUnit");
      new NullableAdapter<>(new ObjectAdapter<UpdateUnitMutation.UpdateUnit>(UpdateUnit.INSTANCE, false)).toJson(writer, customScalarAdapters, value.updateUnit);
    }
  }

  public enum UpdateUnit implements Adapter<UpdateUnitMutation.UpdateUnit> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("clientMutationId", "unit");

    @Override
    public UpdateUnitMutation.UpdateUnit fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String _clientMutationId = null;
      UpdateUnitMutation.Unit _unit = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _clientMutationId = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _unit = new ObjectAdapter<UpdateUnitMutation.Unit>(Unit.INSTANCE, false).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_unit, "unit");

      return new UpdateUnitMutation.UpdateUnit(
        _clientMutationId,
        _unit
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        UpdateUnitMutation.UpdateUnit value) throws IOException {
      writer.name("clientMutationId");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.clientMutationId);

      writer.name("unit");
      new ObjectAdapter<UpdateUnitMutation.Unit>(Unit.INSTANCE, false).toJson(writer, customScalarAdapters, value.unit);
    }
  }

  public enum Unit implements Adapter<UpdateUnitMutation.Unit> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("id");

    @Override
    public UpdateUnitMutation.Unit fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String _id = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _id = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_id, "id");

      return new UpdateUnitMutation.Unit(
        _id
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        UpdateUnitMutation.Unit value) throws IOException {
      writer.name("id");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.id);
    }
  }
}
