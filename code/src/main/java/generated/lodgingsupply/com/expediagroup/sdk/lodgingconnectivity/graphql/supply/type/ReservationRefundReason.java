//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import com.apollographql.apollo.api.EnumType;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.Objects;

/**
 * Valid reasons for a good will refund.
 */
public class ReservationRefundReason {
  public static EnumType type = new EnumType("ReservationRefundReason", Arrays.asList("GUEST_SATISFACTION_REFUND", "ACCESSIBILITY_ISSUE", "AMENITY_ISSUE", "ROOM_TYPE_ISSUE", "SPECIAL_REQUEST_NOT_MET", "SERVICE_ISSUE", "LOYALTY_PERK_NOT_FULFILLED"));

  public static ReservationRefundReason GUEST_SATISFACTION_REFUND = new ReservationRefundReason("GUEST_SATISFACTION_REFUND");

  public static ReservationRefundReason ACCESSIBILITY_ISSUE = new ReservationRefundReason("ACCESSIBILITY_ISSUE");

  public static ReservationRefundReason AMENITY_ISSUE = new ReservationRefundReason("AMENITY_ISSUE");

  public static ReservationRefundReason ROOM_TYPE_ISSUE = new ReservationRefundReason("ROOM_TYPE_ISSUE");

  public static ReservationRefundReason SPECIAL_REQUEST_NOT_MET = new ReservationRefundReason("SPECIAL_REQUEST_NOT_MET");

  public static ReservationRefundReason SERVICE_ISSUE = new ReservationRefundReason("SERVICE_ISSUE");

  public static ReservationRefundReason LOYALTY_PERK_NOT_FULFILLED = new ReservationRefundReason("LOYALTY_PERK_NOT_FULFILLED");

  public String rawValue;

  private ReservationRefundReason(String rawValue) {
    this.rawValue = rawValue;
  }

  /**
   * Returns the ReservationRefundReason that represents the specified rawValue.
   * Note: unknown values of rawValue will return UNKNOWN__. You may want to update your schema instead of calling this method directly.
   */
  public static ReservationRefundReason safeValueOf(String rawValue) {
    switch (Objects.requireNonNull(rawValue)) {
      case "GUEST_SATISFACTION_REFUND": return ReservationRefundReason.GUEST_SATISFACTION_REFUND;
      case "ACCESSIBILITY_ISSUE": return ReservationRefundReason.ACCESSIBILITY_ISSUE;
      case "AMENITY_ISSUE": return ReservationRefundReason.AMENITY_ISSUE;
      case "ROOM_TYPE_ISSUE": return ReservationRefundReason.ROOM_TYPE_ISSUE;
      case "SPECIAL_REQUEST_NOT_MET": return ReservationRefundReason.SPECIAL_REQUEST_NOT_MET;
      case "SERVICE_ISSUE": return ReservationRefundReason.SERVICE_ISSUE;
      case "LOYALTY_PERK_NOT_FULFILLED": return ReservationRefundReason.LOYALTY_PERK_NOT_FULFILLED;
      default: return new ReservationRefundReason.UNKNOWN__(rawValue);
    }
  }

  /**
   * An enum value that wasn't known at compile time.
   */
  public static class UNKNOWN__ extends ReservationRefundReason {
    private UNKNOWN__(String rawValue) {
      super(rawValue);
    }

    @Override
    public boolean equals(Object other) {
      if (this == other) return true;
      if (!(other instanceof UNKNOWN__)) return false;
      return rawValue.equals(((UNKNOWN__) other).rawValue);
    }

    @Override
    public int hashCode() {
      return rawValue.hashCode();
    }

    @Override
    public String toString() {
      return "UNKNOWN__(" + rawValue + ")";
    }
  }
}
