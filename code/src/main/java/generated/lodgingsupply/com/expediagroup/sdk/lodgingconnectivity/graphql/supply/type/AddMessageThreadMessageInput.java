//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import com.apollographql.apollo3.api.Optional;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;

public class AddMessageThreadMessageInput {
  public final Optional<MessageThreadLocalizedStringInput> body;

  public final Optional<List<String>> attachmentIds;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public AddMessageThreadMessageInput(Optional<MessageThreadLocalizedStringInput> body,
      Optional<List<String>> attachmentIds) {
    this.body = body;
    this.attachmentIds = attachmentIds;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof AddMessageThreadMessageInput) {
      AddMessageThreadMessageInput that = (AddMessageThreadMessageInput) o;
      return ((this.body == null) ? (that.body == null) : this.body.equals(that.body))
       &&((this.attachmentIds == null) ? (that.attachmentIds == null) : this.attachmentIds.equals(that.attachmentIds));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (body == null) ? 0 : body.hashCode();
      __h *= 1000003;
      __h ^= (attachmentIds == null) ? 0 : attachmentIds.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "AddMessageThreadMessageInput{"
        + "body=" + body + ", "
        + "attachmentIds=" + attachmentIds
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<MessageThreadLocalizedStringInput> body = Optional.absent();

    private Optional<List<String>> attachmentIds = Optional.absent();

    Builder() {
    }

    public Builder body(MessageThreadLocalizedStringInput body) {
      this.body = Optional.present(body);
      return this;
    }

    public Builder attachmentIds(List<String> attachmentIds) {
      this.attachmentIds = Optional.present(attachmentIds);
      return this;
    }

    public AddMessageThreadMessageInput build() {
      return new AddMessageThreadMessageInput(body, attachmentIds);
    }
  }
}
