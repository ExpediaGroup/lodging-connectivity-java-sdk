//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import com.apollographql.apollo.api.Optional;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;

public class AmenityValueInput {
  public final Boolean available;

  public final Optional<List<AmenityFieldInput>> fields;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public AmenityValueInput(Boolean available, Optional<List<AmenityFieldInput>> fields) {
    this.available = available;
    this.fields = fields;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof AmenityValueInput) {
      AmenityValueInput that = (AmenityValueInput) o;
      return ((this.available == null) ? (that.available == null) : this.available.equals(that.available))
       &&((this.fields == null) ? (that.fields == null) : this.fields.equals(that.fields));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (available == null) ? 0 : available.hashCode();
      __h *= 1000003;
      __h ^= (fields == null) ? 0 : fields.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "AmenityValueInput{"
        + "available=" + available + ", "
        + "fields=" + fields
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Boolean available;

    private Optional<List<AmenityFieldInput>> fields = Optional.absent();

    Builder() {
    }

    public Builder available(Boolean available) {
      this.available = available;
      return this;
    }

    public Builder fields(List<AmenityFieldInput> fields) {
      this.fields = Optional.present(fields);
      return this;
    }

    public AmenityValueInput build() {
      return new AmenityValueInput(available, fields);
    }
  }
}
