//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.selections;

import com.apollographql.apollo.api.CompiledArgument;
import com.apollographql.apollo.api.CompiledField;
import com.apollographql.apollo.api.CompiledListType;
import com.apollographql.apollo.api.CompiledNotNullType;
import com.apollographql.apollo.api.CompiledSelection;
import com.apollographql.apollo.api.CompiledVariable;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Compliant;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.GraphQLID;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.GraphQLInt;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.GraphQLString;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.IdNode;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.IdSource;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Property;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Query;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Registration;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.RegistrationDetail;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.RegistrationRecord;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.RegulatoryCategory;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.RegulatoryStatus;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Unit;
import java.util.Arrays;
import java.util.List;

public class PropertyRegistrationQuerySelections {
  private static List<CompiledSelection> __ids = Arrays.asList(
    new CompiledField.Builder("id", GraphQLID.type).build(),
    new CompiledField.Builder("idSource", new CompiledNotNullType(IdSource.type)).build()
  );

  private static List<CompiledSelection> __compliant = Arrays.asList(
    new CompiledField.Builder("status", new CompiledNotNullType(RegulatoryStatus.type)).build(),
    new CompiledField.Builder("reason", new CompiledNotNullType(GraphQLString.type)).build()
  );

  private static List<CompiledSelection> __registrationRecords = Arrays.asList(
    new CompiledField.Builder("registrationNumber", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledField.Builder("registrationNumberTypeLabel", GraphQLString.type).build(),
    new CompiledField.Builder("expiry", GraphQLString.type).build()
  );

  private static List<CompiledSelection> __detail = Arrays.asList(
    new CompiledField.Builder("compliant", Compliant.type).selections(__compliant).build(),
    new CompiledField.Builder("regulatoryCategory", new CompiledNotNullType(RegulatoryCategory.type)).build(),
    new CompiledField.Builder("numberOfPhysicalRooms", GraphQLInt.type).build(),
    new CompiledField.Builder("registrationRecords", new CompiledNotNullType(new CompiledListType(new CompiledNotNullType(RegistrationRecord.type)))).selections(__registrationRecords).build()
  );

  private static List<CompiledSelection> __registration = Arrays.asList(
    new CompiledField.Builder("district", GraphQLString.type).build(),
    new CompiledField.Builder("detail", new CompiledNotNullType(RegistrationDetail.type)).selections(__detail).build()
  );

  private static List<CompiledSelection> __units = Arrays.asList(
    new CompiledField.Builder("ids", new CompiledListType(IdNode.type)).selections(__ids).build(),
    new CompiledField.Builder("registration", Registration.type).selections(__registration).build()
  );

  private static List<CompiledSelection> __property = Arrays.asList(
    new CompiledField.Builder("id", new CompiledNotNullType(GraphQLID.type)).build(),
    new CompiledField.Builder("name", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledField.Builder("units", new CompiledListType(Unit.type)).selections(__units).build()
  );

  public static List<CompiledSelection> __root = Arrays.asList(
    new CompiledField.Builder("property", Property.type).arguments(Arrays.asList(new CompiledArgument.Builder(Query.__property_id).value(new CompiledVariable("propertyID")).build(), new CompiledArgument.Builder(Query.__property_idSource).value(new CompiledVariable("idSource")).build())).selections(__property).build()
  );
}
