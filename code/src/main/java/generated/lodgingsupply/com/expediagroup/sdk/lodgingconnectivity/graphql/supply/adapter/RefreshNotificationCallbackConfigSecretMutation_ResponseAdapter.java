//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.Adapters;
import com.apollographql.apollo.api.Assertions;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.NullableAdapter;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.RefreshNotificationCallbackConfigSecretMutation;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

public class RefreshNotificationCallbackConfigSecretMutation_ResponseAdapter {
  public enum Data implements Adapter<RefreshNotificationCallbackConfigSecretMutation.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("refreshNotificationCallbackConfigSecret");

    @Override
    public RefreshNotificationCallbackConfigSecretMutation.Data fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      RefreshNotificationCallbackConfigSecretMutation.RefreshNotificationCallbackConfigSecret _refreshNotificationCallbackConfigSecret = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _refreshNotificationCallbackConfigSecret = new NullableAdapter<>(new ObjectAdapter<RefreshNotificationCallbackConfigSecretMutation.RefreshNotificationCallbackConfigSecret>(RefreshNotificationCallbackConfigSecret.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new RefreshNotificationCallbackConfigSecretMutation.Data(
        _refreshNotificationCallbackConfigSecret
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        RefreshNotificationCallbackConfigSecretMutation.Data value) throws IOException {
      writer.name("refreshNotificationCallbackConfigSecret");
      new NullableAdapter<>(new ObjectAdapter<RefreshNotificationCallbackConfigSecretMutation.RefreshNotificationCallbackConfigSecret>(RefreshNotificationCallbackConfigSecret.INSTANCE, false)).toJson(writer, customScalarAdapters, value.refreshNotificationCallbackConfigSecret);
    }
  }

  public enum RefreshNotificationCallbackConfigSecret implements Adapter<RefreshNotificationCallbackConfigSecretMutation.RefreshNotificationCallbackConfigSecret> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("callbackConfigId", "secret", "secretExpirationDateTime");

    @Override
    public RefreshNotificationCallbackConfigSecretMutation.RefreshNotificationCallbackConfigSecret fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      String _callbackConfigId = null;
      String _secret = null;
      LocalDateTime _secretExpirationDateTime = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _callbackConfigId = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _secret = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 2: _secretExpirationDateTime = com.apollographql.adapter.core.JavaLocalDateTimeAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_callbackConfigId, "callbackConfigId");
      Assertions.checkFieldNotMissing(_secret, "secret");
      Assertions.checkFieldNotMissing(_secretExpirationDateTime, "secretExpirationDateTime");

      return new RefreshNotificationCallbackConfigSecretMutation.RefreshNotificationCallbackConfigSecret(
        _callbackConfigId,
        _secret,
        _secretExpirationDateTime
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        RefreshNotificationCallbackConfigSecretMutation.RefreshNotificationCallbackConfigSecret value)
        throws IOException {
      writer.name("callbackConfigId");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.callbackConfigId);

      writer.name("secret");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.secret);

      writer.name("secretExpirationDateTime");
      com.apollographql.adapter.core.JavaLocalDateTimeAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.secretExpirationDateTime);
    }
  }
}
