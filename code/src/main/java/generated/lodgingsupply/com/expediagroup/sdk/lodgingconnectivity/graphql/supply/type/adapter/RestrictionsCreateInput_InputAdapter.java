//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloOptionalAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.RestrictionsCreateInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum RestrictionsCreateInput_InputAdapter implements Adapter<RestrictionsCreateInput> {
  INSTANCE;

  @Override
  public RestrictionsCreateInput fromJson(JsonReader reader,
      CustomScalarAdapters customScalarAdapters) throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      RestrictionsCreateInput value) throws IOException {
    if (value.isMemberOnly instanceof Optional.Present) {
      writer.name("isMemberOnly");
      new ApolloOptionalAdapter<>(Adapters.NullableBooleanAdapter).toJson(writer, customScalarAdapters, value.isMemberOnly);
    }
    if (value.isMobileUserOnly instanceof Optional.Present) {
      writer.name("isMobileUserOnly");
      new ApolloOptionalAdapter<>(Adapters.NullableBooleanAdapter).toJson(writer, customScalarAdapters, value.isMobileUserOnly);
    }
    if (value.minLengthOfStay instanceof Optional.Present) {
      writer.name("minLengthOfStay");
      new ApolloOptionalAdapter<>(Adapters.NullableIntAdapter).toJson(writer, customScalarAdapters, value.minLengthOfStay);
    }
    if (value.maxLengthOfStay instanceof Optional.Present) {
      writer.name("maxLengthOfStay");
      new ApolloOptionalAdapter<>(Adapters.NullableIntAdapter).toJson(writer, customScalarAdapters, value.maxLengthOfStay);
    }
    if (value.minAdvanceBookingDays instanceof Optional.Present) {
      writer.name("minAdvanceBookingDays");
      new ApolloOptionalAdapter<>(Adapters.NullableIntAdapter).toJson(writer, customScalarAdapters, value.minAdvanceBookingDays);
    }
    if (value.maxAdvanceBookingDays instanceof Optional.Present) {
      writer.name("maxAdvanceBookingDays");
      new ApolloOptionalAdapter<>(Adapters.NullableIntAdapter).toJson(writer, customScalarAdapters, value.maxAdvanceBookingDays);
    }
    writer.name("bookingLocalDateTimeFrom");
    com.apollographql.apollo3.adapter.JavaLocalDateTimeAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.bookingLocalDateTimeFrom);
    writer.name("bookingLocalDateTimeTo");
    com.apollographql.apollo3.adapter.JavaLocalDateTimeAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.bookingLocalDateTimeTo);
    writer.name("travelDateFrom");
    com.apollographql.apollo3.adapter.JavaLocalDateAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.travelDateFrom);
    writer.name("travelDateTo");
    com.apollographql.apollo3.adapter.JavaLocalDateAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.travelDateTo);
    if (value.sameDayBookingStartTime instanceof Optional.Present) {
      writer.name("sameDayBookingStartTime");
      new ApolloOptionalAdapter<>(Adapters.NullableAnyAdapter).toJson(writer, customScalarAdapters, value.sameDayBookingStartTime);
    }
  }
}
