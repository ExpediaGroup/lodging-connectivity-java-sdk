//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import com.apollographql.apollo.api.Optional;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;

public class UpdateUnitSpacesDiningRoomInput {
  public final Optional<Integer> capacity;

  public final String id;

  public final Optional<Integer> order;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public UpdateUnitSpacesDiningRoomInput(Optional<Integer> capacity, String id,
      Optional<Integer> order) {
    this.capacity = capacity;
    this.id = id;
    this.order = order;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof UpdateUnitSpacesDiningRoomInput) {
      UpdateUnitSpacesDiningRoomInput that = (UpdateUnitSpacesDiningRoomInput) o;
      return ((this.capacity == null) ? (that.capacity == null) : this.capacity.equals(that.capacity))
       &&((this.id == null) ? (that.id == null) : this.id.equals(that.id))
       &&((this.order == null) ? (that.order == null) : this.order.equals(that.order));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (capacity == null) ? 0 : capacity.hashCode();
      __h *= 1000003;
      __h ^= (id == null) ? 0 : id.hashCode();
      __h *= 1000003;
      __h ^= (order == null) ? 0 : order.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "UpdateUnitSpacesDiningRoomInput{"
        + "capacity=" + capacity + ", "
        + "id=" + id + ", "
        + "order=" + order
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Integer> capacity = Optional.absent();

    private String id;

    private Optional<Integer> order = Optional.absent();

    Builder() {
    }

    public Builder capacity(Integer capacity) {
      this.capacity = Optional.present(capacity);
      return this;
    }

    public Builder id(String id) {
      this.id = id;
      return this;
    }

    public Builder order(Integer order) {
      this.order = Optional.present(order);
      return this;
    }

    public UpdateUnitSpacesDiningRoomInput build() {
      return new UpdateUnitSpacesDiningRoomInput(capacity, id, order);
    }
  }
}
