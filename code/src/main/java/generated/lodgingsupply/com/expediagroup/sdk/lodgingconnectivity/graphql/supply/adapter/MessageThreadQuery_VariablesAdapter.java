//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloOptionalAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.MessageThreadQuery;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.MessageThreadMessagesOrderByInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter.MessageThreadMessagesOrderByInput_InputAdapter;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum MessageThreadQuery_VariablesAdapter implements Adapter<MessageThreadQuery> {
  INSTANCE;

  @Override
  public MessageThreadQuery fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
      throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      MessageThreadQuery value) throws IOException {
    writer.name("messageThreadId");
    Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.messageThreadId);
    if (value.messagesLimit instanceof Optional.Present) {
      writer.name("messagesLimit");
      new ApolloOptionalAdapter<>(Adapters.NullableIntAdapter).toJson(writer, customScalarAdapters, value.messagesLimit);
    }
    if (value.messagesCursor instanceof Optional.Present) {
      writer.name("messagesCursor");
      new ApolloOptionalAdapter<>(Adapters.NullableStringAdapter).toJson(writer, customScalarAdapters, value.messagesCursor);
    }
    if (value.orderMessagesBy instanceof Optional.Present) {
      writer.name("orderMessagesBy");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ObjectAdapter<MessageThreadMessagesOrderByInput>(MessageThreadMessagesOrderByInput_InputAdapter.INSTANCE, false))).toJson(writer, customScalarAdapters, value.orderMessagesBy);
    }
  }
}
