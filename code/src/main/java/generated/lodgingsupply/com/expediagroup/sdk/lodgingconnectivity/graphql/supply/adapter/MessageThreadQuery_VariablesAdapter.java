//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter;

import com.apollographql.apollo.api.Adapters;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.MessageThreadQuery;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.MessageThreadMessagesOrderByInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter.MessageThreadMessagesOrderByInput_InputAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter.OptionalAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter.OptionalAdapters;
import java.io.IOException;

public enum MessageThreadQuery_VariablesAdapter {
  INSTANCE;

  public void serializeVariables(JsonWriter writer, MessageThreadQuery value,
      CustomScalarAdapters customScalarAdapters, boolean withDefaultValues) throws IOException {
    writer.name("messageThreadId");
    Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.messageThreadId);
    writer.name("messagesLimit");
    OptionalAdapters.OptionalIntAdapter.toJson(writer, customScalarAdapters, value.messagesLimit);
    writer.name("messagesCursor");
    OptionalAdapters.OptionalStringAdapter.toJson(writer, customScalarAdapters, value.messagesCursor);
    writer.name("orderMessagesBy");
    new OptionalAdapter<>(new ObjectAdapter<MessageThreadMessagesOrderByInput>(MessageThreadMessagesOrderByInput_InputAdapter.INSTANCE, false)).toJson(writer, customScalarAdapters, value.orderMessagesBy);
  }
}
