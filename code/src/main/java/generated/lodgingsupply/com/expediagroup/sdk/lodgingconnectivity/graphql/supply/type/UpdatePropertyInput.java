//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

public class UpdatePropertyInput {
  public final Optional<Optional<UpdateAddressInput>> address;

  public final Optional<Optional<List<AmenityInput>>> amenities;

  public final Optional<Optional<String>> clientMutationId;

  public final String id;

  public final Optional<Optional<UpdatePropertyLocationInput>> location;

  public final Optional<Optional<String>> name;

  public final Optional<Optional<List<LocalizedStringInput>>> names;

  public final Optional<Optional<UpdatePoliciesInput>> policies;

  public final Optional<Optional<String>> referenceName;

  public final Optional<Optional<List<TextInput>>> text;

  public final Optional<Optional<String>> type;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public UpdatePropertyInput(Optional<Optional<UpdateAddressInput>> address,
      Optional<Optional<List<AmenityInput>>> amenities, Optional<Optional<String>> clientMutationId,
      String id, Optional<Optional<UpdatePropertyLocationInput>> location,
      Optional<Optional<String>> name, Optional<Optional<List<LocalizedStringInput>>> names,
      Optional<Optional<UpdatePoliciesInput>> policies, Optional<Optional<String>> referenceName,
      Optional<Optional<List<TextInput>>> text, Optional<Optional<String>> type) {
    this.address = address;
    this.amenities = amenities;
    this.clientMutationId = clientMutationId;
    this.id = id;
    this.location = location;
    this.name = name;
    this.names = names;
    this.policies = policies;
    this.referenceName = referenceName;
    this.text = text;
    this.type = type;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof UpdatePropertyInput) {
      UpdatePropertyInput that = (UpdatePropertyInput) o;
      return ((this.address == null) ? (that.address == null) : this.address.equals(that.address))
       &&((this.amenities == null) ? (that.amenities == null) : this.amenities.equals(that.amenities))
       &&((this.clientMutationId == null) ? (that.clientMutationId == null) : this.clientMutationId.equals(that.clientMutationId))
       &&((this.id == null) ? (that.id == null) : this.id.equals(that.id))
       &&((this.location == null) ? (that.location == null) : this.location.equals(that.location))
       &&((this.name == null) ? (that.name == null) : this.name.equals(that.name))
       &&((this.names == null) ? (that.names == null) : this.names.equals(that.names))
       &&((this.policies == null) ? (that.policies == null) : this.policies.equals(that.policies))
       &&((this.referenceName == null) ? (that.referenceName == null) : this.referenceName.equals(that.referenceName))
       &&((this.text == null) ? (that.text == null) : this.text.equals(that.text))
       &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (address == null) ? 0 : address.hashCode();
      __h *= 1000003;
      __h ^= (amenities == null) ? 0 : amenities.hashCode();
      __h *= 1000003;
      __h ^= (clientMutationId == null) ? 0 : clientMutationId.hashCode();
      __h *= 1000003;
      __h ^= (id == null) ? 0 : id.hashCode();
      __h *= 1000003;
      __h ^= (location == null) ? 0 : location.hashCode();
      __h *= 1000003;
      __h ^= (name == null) ? 0 : name.hashCode();
      __h *= 1000003;
      __h ^= (names == null) ? 0 : names.hashCode();
      __h *= 1000003;
      __h ^= (policies == null) ? 0 : policies.hashCode();
      __h *= 1000003;
      __h ^= (referenceName == null) ? 0 : referenceName.hashCode();
      __h *= 1000003;
      __h ^= (text == null) ? 0 : text.hashCode();
      __h *= 1000003;
      __h ^= (type == null) ? 0 : type.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "UpdatePropertyInput{"
        + "address=" + address + ", "
        + "amenities=" + amenities + ", "
        + "clientMutationId=" + clientMutationId + ", "
        + "id=" + id + ", "
        + "location=" + location + ", "
        + "name=" + name + ", "
        + "names=" + names + ", "
        + "policies=" + policies + ", "
        + "referenceName=" + referenceName + ", "
        + "text=" + text + ", "
        + "type=" + type
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Optional<UpdateAddressInput>> address = Optional.empty();

    private Optional<Optional<List<AmenityInput>>> amenities = Optional.empty();

    private Optional<Optional<String>> clientMutationId = Optional.empty();

    private String id;

    private Optional<Optional<UpdatePropertyLocationInput>> location = Optional.empty();

    private Optional<Optional<String>> name = Optional.empty();

    private Optional<Optional<List<LocalizedStringInput>>> names = Optional.empty();

    private Optional<Optional<UpdatePoliciesInput>> policies = Optional.empty();

    private Optional<Optional<String>> referenceName = Optional.empty();

    private Optional<Optional<List<TextInput>>> text = Optional.empty();

    private Optional<Optional<String>> type = Optional.empty();

    Builder() {
    }

    public Builder address(@NotNull Optional<UpdateAddressInput> address) {
      this.address = Optional.of(address);
      return this;
    }

    public Builder amenities(@NotNull Optional<List<AmenityInput>> amenities) {
      this.amenities = Optional.of(amenities);
      return this;
    }

    public Builder clientMutationId(@NotNull Optional<String> clientMutationId) {
      this.clientMutationId = Optional.of(clientMutationId);
      return this;
    }

    public Builder id(String id) {
      this.id = id;
      return this;
    }

    public Builder location(@NotNull Optional<UpdatePropertyLocationInput> location) {
      this.location = Optional.of(location);
      return this;
    }

    public Builder name(@NotNull Optional<String> name) {
      this.name = Optional.of(name);
      return this;
    }

    public Builder names(@NotNull Optional<List<LocalizedStringInput>> names) {
      this.names = Optional.of(names);
      return this;
    }

    public Builder policies(@NotNull Optional<UpdatePoliciesInput> policies) {
      this.policies = Optional.of(policies);
      return this;
    }

    public Builder referenceName(@NotNull Optional<String> referenceName) {
      this.referenceName = Optional.of(referenceName);
      return this;
    }

    public Builder text(@NotNull Optional<List<TextInput>> text) {
      this.text = Optional.of(text);
      return this;
    }

    public Builder type(@NotNull Optional<String> type) {
      this.type = Optional.of(type);
      return this;
    }

    public UpdatePropertyInput build() {
      return new UpdatePropertyInput(address, amenities, clientMutationId, id, location, name, names, policies, referenceName, text, type);
    }
  }
}
