//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.time.LocalDate;

public class BlackoutDateRangeInput {
  public final LocalDate travelDateFrom;

  public final LocalDate travelDateTo;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public BlackoutDateRangeInput(LocalDate travelDateFrom, LocalDate travelDateTo) {
    this.travelDateFrom = travelDateFrom;
    this.travelDateTo = travelDateTo;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof BlackoutDateRangeInput) {
      BlackoutDateRangeInput that = (BlackoutDateRangeInput) o;
      return ((this.travelDateFrom == null) ? (that.travelDateFrom == null) : this.travelDateFrom.equals(that.travelDateFrom))
       &&((this.travelDateTo == null) ? (that.travelDateTo == null) : this.travelDateTo.equals(that.travelDateTo));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (travelDateFrom == null) ? 0 : travelDateFrom.hashCode();
      __h *= 1000003;
      __h ^= (travelDateTo == null) ? 0 : travelDateTo.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "BlackoutDateRangeInput{"
        + "travelDateFrom=" + travelDateFrom + ", "
        + "travelDateTo=" + travelDateTo
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private LocalDate travelDateFrom;

    private LocalDate travelDateTo;

    Builder() {
    }

    /**
     * The travel start date for the exception window.
     */
    public Builder travelDateFrom(LocalDate travelDateFrom) {
      this.travelDateFrom = travelDateFrom;
      return this;
    }

    /**
     * The travel end date for the exception window.
     */
    public Builder travelDateTo(LocalDate travelDateTo) {
      this.travelDateTo = travelDateTo;
      return this;
    }

    public BlackoutDateRangeInput build() {
      return new BlackoutDateRangeInput(travelDateFrom, travelDateTo);
    }
  }
}
