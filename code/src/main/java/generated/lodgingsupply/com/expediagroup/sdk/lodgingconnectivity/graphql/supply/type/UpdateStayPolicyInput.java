//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import com.apollographql.apollo.api.Optional;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.net.URL;
import java.util.List;

public class UpdateStayPolicyInput {
  public final Optional<UpdateCheckInPolicyInput> checkInPolicy;

  public final Optional<UpdateCheckOutPolicyInput> checkOutPolicy;

  public final Optional<UpdateChildrenPolicyInput> childrenPolicy;

  public final Optional<List<UpdateCustomStayPolicyInput>> customPolicies;

  public final Optional<UpdateEventsPolicyInput> eventsPolicy;

  public final Optional<UpdateMaxOccupancyPolicyInput> maxOccupancyPolicy;

  public final Optional<UpdatePetsPolicyInput> petsPolicy;

  public final Optional<URL> rentalAgreementUrl;

  public final Optional<UpdateSmokingPolicyInput> smokingPolicy;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public UpdateStayPolicyInput(Optional<UpdateCheckInPolicyInput> checkInPolicy,
      Optional<UpdateCheckOutPolicyInput> checkOutPolicy,
      Optional<UpdateChildrenPolicyInput> childrenPolicy,
      Optional<List<UpdateCustomStayPolicyInput>> customPolicies,
      Optional<UpdateEventsPolicyInput> eventsPolicy,
      Optional<UpdateMaxOccupancyPolicyInput> maxOccupancyPolicy,
      Optional<UpdatePetsPolicyInput> petsPolicy, Optional<URL> rentalAgreementUrl,
      Optional<UpdateSmokingPolicyInput> smokingPolicy) {
    this.checkInPolicy = checkInPolicy;
    this.checkOutPolicy = checkOutPolicy;
    this.childrenPolicy = childrenPolicy;
    this.customPolicies = customPolicies;
    this.eventsPolicy = eventsPolicy;
    this.maxOccupancyPolicy = maxOccupancyPolicy;
    this.petsPolicy = petsPolicy;
    this.rentalAgreementUrl = rentalAgreementUrl;
    this.smokingPolicy = smokingPolicy;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof UpdateStayPolicyInput) {
      UpdateStayPolicyInput that = (UpdateStayPolicyInput) o;
      return ((this.checkInPolicy == null) ? (that.checkInPolicy == null) : this.checkInPolicy.equals(that.checkInPolicy))
       &&((this.checkOutPolicy == null) ? (that.checkOutPolicy == null) : this.checkOutPolicy.equals(that.checkOutPolicy))
       &&((this.childrenPolicy == null) ? (that.childrenPolicy == null) : this.childrenPolicy.equals(that.childrenPolicy))
       &&((this.customPolicies == null) ? (that.customPolicies == null) : this.customPolicies.equals(that.customPolicies))
       &&((this.eventsPolicy == null) ? (that.eventsPolicy == null) : this.eventsPolicy.equals(that.eventsPolicy))
       &&((this.maxOccupancyPolicy == null) ? (that.maxOccupancyPolicy == null) : this.maxOccupancyPolicy.equals(that.maxOccupancyPolicy))
       &&((this.petsPolicy == null) ? (that.petsPolicy == null) : this.petsPolicy.equals(that.petsPolicy))
       &&((this.rentalAgreementUrl == null) ? (that.rentalAgreementUrl == null) : this.rentalAgreementUrl.equals(that.rentalAgreementUrl))
       &&((this.smokingPolicy == null) ? (that.smokingPolicy == null) : this.smokingPolicy.equals(that.smokingPolicy));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (checkInPolicy == null) ? 0 : checkInPolicy.hashCode();
      __h *= 1000003;
      __h ^= (checkOutPolicy == null) ? 0 : checkOutPolicy.hashCode();
      __h *= 1000003;
      __h ^= (childrenPolicy == null) ? 0 : childrenPolicy.hashCode();
      __h *= 1000003;
      __h ^= (customPolicies == null) ? 0 : customPolicies.hashCode();
      __h *= 1000003;
      __h ^= (eventsPolicy == null) ? 0 : eventsPolicy.hashCode();
      __h *= 1000003;
      __h ^= (maxOccupancyPolicy == null) ? 0 : maxOccupancyPolicy.hashCode();
      __h *= 1000003;
      __h ^= (petsPolicy == null) ? 0 : petsPolicy.hashCode();
      __h *= 1000003;
      __h ^= (rentalAgreementUrl == null) ? 0 : rentalAgreementUrl.hashCode();
      __h *= 1000003;
      __h ^= (smokingPolicy == null) ? 0 : smokingPolicy.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "UpdateStayPolicyInput{"
        + "checkInPolicy=" + checkInPolicy + ", "
        + "checkOutPolicy=" + checkOutPolicy + ", "
        + "childrenPolicy=" + childrenPolicy + ", "
        + "customPolicies=" + customPolicies + ", "
        + "eventsPolicy=" + eventsPolicy + ", "
        + "maxOccupancyPolicy=" + maxOccupancyPolicy + ", "
        + "petsPolicy=" + petsPolicy + ", "
        + "rentalAgreementUrl=" + rentalAgreementUrl + ", "
        + "smokingPolicy=" + smokingPolicy
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<UpdateCheckInPolicyInput> checkInPolicy = Optional.absent();

    private Optional<UpdateCheckOutPolicyInput> checkOutPolicy = Optional.absent();

    private Optional<UpdateChildrenPolicyInput> childrenPolicy = Optional.absent();

    private Optional<List<UpdateCustomStayPolicyInput>> customPolicies = Optional.absent();

    private Optional<UpdateEventsPolicyInput> eventsPolicy = Optional.absent();

    private Optional<UpdateMaxOccupancyPolicyInput> maxOccupancyPolicy = Optional.absent();

    private Optional<UpdatePetsPolicyInput> petsPolicy = Optional.absent();

    private Optional<URL> rentalAgreementUrl = Optional.absent();

    private Optional<UpdateSmokingPolicyInput> smokingPolicy = Optional.absent();

    Builder() {
    }

    public Builder checkInPolicy(UpdateCheckInPolicyInput checkInPolicy) {
      this.checkInPolicy = Optional.present(checkInPolicy);
      return this;
    }

    public Builder checkOutPolicy(UpdateCheckOutPolicyInput checkOutPolicy) {
      this.checkOutPolicy = Optional.present(checkOutPolicy);
      return this;
    }

    public Builder childrenPolicy(UpdateChildrenPolicyInput childrenPolicy) {
      this.childrenPolicy = Optional.present(childrenPolicy);
      return this;
    }

    public Builder customPolicies(List<UpdateCustomStayPolicyInput> customPolicies) {
      this.customPolicies = Optional.present(customPolicies);
      return this;
    }

    public Builder eventsPolicy(UpdateEventsPolicyInput eventsPolicy) {
      this.eventsPolicy = Optional.present(eventsPolicy);
      return this;
    }

    public Builder maxOccupancyPolicy(UpdateMaxOccupancyPolicyInput maxOccupancyPolicy) {
      this.maxOccupancyPolicy = Optional.present(maxOccupancyPolicy);
      return this;
    }

    public Builder petsPolicy(UpdatePetsPolicyInput petsPolicy) {
      this.petsPolicy = Optional.present(petsPolicy);
      return this;
    }

    public Builder rentalAgreementUrl(URL rentalAgreementUrl) {
      this.rentalAgreementUrl = Optional.present(rentalAgreementUrl);
      return this;
    }

    public Builder smokingPolicy(UpdateSmokingPolicyInput smokingPolicy) {
      this.smokingPolicy = Optional.present(smokingPolicy);
      return this;
    }

    public UpdateStayPolicyInput build() {
      return new UpdateStayPolicyInput(checkInPolicy, checkOutPolicy, childrenPolicy, customPolicies, eventsPolicy, maxOccupancyPolicy, petsPolicy, rentalAgreementUrl, smokingPolicy);
    }
  }
}
