//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

public class CreateUnitSpacesInput {
  public final Optional<Optional<List<CreateUnitSpacesBathroomInput>>> bathrooms;

  public final Optional<Optional<List<CreateUnitSpacesBedroomInput>>> bedrooms;

  public final Optional<Optional<String>> clientMutationId;

  public final Optional<Optional<List<CreateUnitSpacesDiningRoomInput>>> diningRooms;

  public final Optional<Optional<List<CreateUnitSpacesLivingRoomInput>>> livingRooms;

  public final Optional<Optional<List<CreateUnitSpacesOfficeInput>>> offices;

  public final String propertyId;

  public final String unitId;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public CreateUnitSpacesInput(Optional<Optional<List<CreateUnitSpacesBathroomInput>>> bathrooms,
      Optional<Optional<List<CreateUnitSpacesBedroomInput>>> bedrooms,
      Optional<Optional<String>> clientMutationId,
      Optional<Optional<List<CreateUnitSpacesDiningRoomInput>>> diningRooms,
      Optional<Optional<List<CreateUnitSpacesLivingRoomInput>>> livingRooms,
      Optional<Optional<List<CreateUnitSpacesOfficeInput>>> offices, String propertyId,
      String unitId) {
    this.bathrooms = bathrooms;
    this.bedrooms = bedrooms;
    this.clientMutationId = clientMutationId;
    this.diningRooms = diningRooms;
    this.livingRooms = livingRooms;
    this.offices = offices;
    this.propertyId = propertyId;
    this.unitId = unitId;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof CreateUnitSpacesInput) {
      CreateUnitSpacesInput that = (CreateUnitSpacesInput) o;
      return ((this.bathrooms == null) ? (that.bathrooms == null) : this.bathrooms.equals(that.bathrooms))
       &&((this.bedrooms == null) ? (that.bedrooms == null) : this.bedrooms.equals(that.bedrooms))
       &&((this.clientMutationId == null) ? (that.clientMutationId == null) : this.clientMutationId.equals(that.clientMutationId))
       &&((this.diningRooms == null) ? (that.diningRooms == null) : this.diningRooms.equals(that.diningRooms))
       &&((this.livingRooms == null) ? (that.livingRooms == null) : this.livingRooms.equals(that.livingRooms))
       &&((this.offices == null) ? (that.offices == null) : this.offices.equals(that.offices))
       &&((this.propertyId == null) ? (that.propertyId == null) : this.propertyId.equals(that.propertyId))
       &&((this.unitId == null) ? (that.unitId == null) : this.unitId.equals(that.unitId));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (bathrooms == null) ? 0 : bathrooms.hashCode();
      __h *= 1000003;
      __h ^= (bedrooms == null) ? 0 : bedrooms.hashCode();
      __h *= 1000003;
      __h ^= (clientMutationId == null) ? 0 : clientMutationId.hashCode();
      __h *= 1000003;
      __h ^= (diningRooms == null) ? 0 : diningRooms.hashCode();
      __h *= 1000003;
      __h ^= (livingRooms == null) ? 0 : livingRooms.hashCode();
      __h *= 1000003;
      __h ^= (offices == null) ? 0 : offices.hashCode();
      __h *= 1000003;
      __h ^= (propertyId == null) ? 0 : propertyId.hashCode();
      __h *= 1000003;
      __h ^= (unitId == null) ? 0 : unitId.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "CreateUnitSpacesInput{"
        + "bathrooms=" + bathrooms + ", "
        + "bedrooms=" + bedrooms + ", "
        + "clientMutationId=" + clientMutationId + ", "
        + "diningRooms=" + diningRooms + ", "
        + "livingRooms=" + livingRooms + ", "
        + "offices=" + offices + ", "
        + "propertyId=" + propertyId + ", "
        + "unitId=" + unitId
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Optional<List<CreateUnitSpacesBathroomInput>>> bathrooms = Optional.empty();

    private Optional<Optional<List<CreateUnitSpacesBedroomInput>>> bedrooms = Optional.empty();

    private Optional<Optional<String>> clientMutationId = Optional.empty();

    private Optional<Optional<List<CreateUnitSpacesDiningRoomInput>>> diningRooms = Optional.empty();

    private Optional<Optional<List<CreateUnitSpacesLivingRoomInput>>> livingRooms = Optional.empty();

    private Optional<Optional<List<CreateUnitSpacesOfficeInput>>> offices = Optional.empty();

    private String propertyId;

    private String unitId;

    Builder() {
    }

    public Builder bathrooms(@NotNull Optional<List<CreateUnitSpacesBathroomInput>> bathrooms) {
      this.bathrooms = Optional.of(bathrooms);
      return this;
    }

    public Builder bedrooms(@NotNull Optional<List<CreateUnitSpacesBedroomInput>> bedrooms) {
      this.bedrooms = Optional.of(bedrooms);
      return this;
    }

    public Builder clientMutationId(@NotNull Optional<String> clientMutationId) {
      this.clientMutationId = Optional.of(clientMutationId);
      return this;
    }

    public Builder diningRooms(
        @NotNull Optional<List<CreateUnitSpacesDiningRoomInput>> diningRooms) {
      this.diningRooms = Optional.of(diningRooms);
      return this;
    }

    public Builder livingRooms(
        @NotNull Optional<List<CreateUnitSpacesLivingRoomInput>> livingRooms) {
      this.livingRooms = Optional.of(livingRooms);
      return this;
    }

    public Builder offices(@NotNull Optional<List<CreateUnitSpacesOfficeInput>> offices) {
      this.offices = Optional.of(offices);
      return this;
    }

    public Builder propertyId(String propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    public Builder unitId(String unitId) {
      this.unitId = unitId;
      return this;
    }

    public CreateUnitSpacesInput build() {
      return new CreateUnitSpacesInput(bathrooms, bedrooms, clientMutationId, diningRooms, livingRooms, offices, propertyId, unitId);
    }
  }
}
