//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

public class UpdateChildrenPolicyInput {
  public final Optional<Optional<Boolean>> allowed;

  public final Optional<Optional<List<AgeRangeInput>>> allowedAges;

  public final Optional<Optional<List<LocalizedStringInput>>> childrenAllowedNote;

  public final Optional<Optional<List<LocalizedStringInput>>> childrenNotAllowedNote;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public UpdateChildrenPolicyInput(Optional<Optional<Boolean>> allowed,
      Optional<Optional<List<AgeRangeInput>>> allowedAges,
      Optional<Optional<List<LocalizedStringInput>>> childrenAllowedNote,
      Optional<Optional<List<LocalizedStringInput>>> childrenNotAllowedNote) {
    this.allowed = allowed;
    this.allowedAges = allowedAges;
    this.childrenAllowedNote = childrenAllowedNote;
    this.childrenNotAllowedNote = childrenNotAllowedNote;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof UpdateChildrenPolicyInput) {
      UpdateChildrenPolicyInput that = (UpdateChildrenPolicyInput) o;
      return ((this.allowed == null) ? (that.allowed == null) : this.allowed.equals(that.allowed))
       &&((this.allowedAges == null) ? (that.allowedAges == null) : this.allowedAges.equals(that.allowedAges))
       &&((this.childrenAllowedNote == null) ? (that.childrenAllowedNote == null) : this.childrenAllowedNote.equals(that.childrenAllowedNote))
       &&((this.childrenNotAllowedNote == null) ? (that.childrenNotAllowedNote == null) : this.childrenNotAllowedNote.equals(that.childrenNotAllowedNote));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (allowed == null) ? 0 : allowed.hashCode();
      __h *= 1000003;
      __h ^= (allowedAges == null) ? 0 : allowedAges.hashCode();
      __h *= 1000003;
      __h ^= (childrenAllowedNote == null) ? 0 : childrenAllowedNote.hashCode();
      __h *= 1000003;
      __h ^= (childrenNotAllowedNote == null) ? 0 : childrenNotAllowedNote.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "UpdateChildrenPolicyInput{"
        + "allowed=" + allowed + ", "
        + "allowedAges=" + allowedAges + ", "
        + "childrenAllowedNote=" + childrenAllowedNote + ", "
        + "childrenNotAllowedNote=" + childrenNotAllowedNote
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Optional<Boolean>> allowed = Optional.empty();

    private Optional<Optional<List<AgeRangeInput>>> allowedAges = Optional.empty();

    private Optional<Optional<List<LocalizedStringInput>>> childrenAllowedNote = Optional.empty();

    private Optional<Optional<List<LocalizedStringInput>>> childrenNotAllowedNote = Optional.empty();

    Builder() {
    }

    public Builder allowed(@NotNull Optional<Boolean> allowed) {
      this.allowed = Optional.of(allowed);
      return this;
    }

    public Builder allowedAges(@NotNull Optional<List<AgeRangeInput>> allowedAges) {
      this.allowedAges = Optional.of(allowedAges);
      return this;
    }

    public Builder childrenAllowedNote(
        @NotNull Optional<List<LocalizedStringInput>> childrenAllowedNote) {
      this.childrenAllowedNote = Optional.of(childrenAllowedNote);
      return this;
    }

    public Builder childrenNotAllowedNote(
        @NotNull Optional<List<LocalizedStringInput>> childrenNotAllowedNote) {
      this.childrenNotAllowedNote = Optional.of(childrenNotAllowedNote);
      return this;
    }

    public UpdateChildrenPolicyInput build() {
      return new UpdateChildrenPolicyInput(allowed, allowedAges, childrenAllowedNote, childrenNotAllowedNote);
    }
  }
}
