//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.Adapters;
import com.apollographql.apollo.api.Assertions;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.ConfirmReservationNotificationMutation;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class ConfirmReservationNotificationMutation_ResponseAdapter {
  public enum Data implements Adapter<ConfirmReservationNotificationMutation.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("confirmReservationNotification");

    @Override
    public ConfirmReservationNotificationMutation.Data fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      ConfirmReservationNotificationMutation.ConfirmReservationNotification _confirmReservationNotification = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _confirmReservationNotification = new ObjectAdapter<ConfirmReservationNotificationMutation.ConfirmReservationNotification>(ConfirmReservationNotification.INSTANCE, false).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_confirmReservationNotification, "confirmReservationNotification");

      return new ConfirmReservationNotificationMutation.Data(
        _confirmReservationNotification
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        ConfirmReservationNotificationMutation.Data value) throws IOException {
      writer.name("confirmReservationNotification");
      new ObjectAdapter<ConfirmReservationNotificationMutation.ConfirmReservationNotification>(ConfirmReservationNotification.INSTANCE, false).toJson(writer, customScalarAdapters, value.confirmReservationNotification);
    }
  }

  public enum ConfirmReservationNotification implements Adapter<ConfirmReservationNotificationMutation.ConfirmReservationNotification> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("clientMutationId");

    @Override
    public ConfirmReservationNotificationMutation.ConfirmReservationNotification fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      String _clientMutationId = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _clientMutationId = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new ConfirmReservationNotificationMutation.ConfirmReservationNotification(
        _clientMutationId
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        ConfirmReservationNotificationMutation.ConfirmReservationNotification value) throws
        IOException {
      writer.name("clientMutationId");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.clientMutationId);
    }
  }
}
