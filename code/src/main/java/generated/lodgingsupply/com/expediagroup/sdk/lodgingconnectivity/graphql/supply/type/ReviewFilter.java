//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import com.apollographql.apollo.api.Optional;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;

public class ReviewFilter {
  public final Optional<List<ReviewBrand>> brandNames;

  public final Optional<DateInput> createdDate;

  public final Optional<Boolean> hasOwnerResponse;

  public final Optional<ReviewReservationFilterInput> reservation;

  public final Optional<String> reviewId;

  public final Optional<String> source;

  public final Optional<DateInput> updatedDate;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public ReviewFilter(Optional<List<ReviewBrand>> brandNames, Optional<DateInput> createdDate,
      Optional<Boolean> hasOwnerResponse, Optional<ReviewReservationFilterInput> reservation,
      Optional<String> reviewId, Optional<String> source, Optional<DateInput> updatedDate) {
    this.brandNames = brandNames;
    this.createdDate = createdDate;
    this.hasOwnerResponse = hasOwnerResponse;
    this.reservation = reservation;
    this.reviewId = reviewId;
    this.source = source;
    this.updatedDate = updatedDate;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof ReviewFilter) {
      ReviewFilter that = (ReviewFilter) o;
      return ((this.brandNames == null) ? (that.brandNames == null) : this.brandNames.equals(that.brandNames))
       &&((this.createdDate == null) ? (that.createdDate == null) : this.createdDate.equals(that.createdDate))
       &&((this.hasOwnerResponse == null) ? (that.hasOwnerResponse == null) : this.hasOwnerResponse.equals(that.hasOwnerResponse))
       &&((this.reservation == null) ? (that.reservation == null) : this.reservation.equals(that.reservation))
       &&((this.reviewId == null) ? (that.reviewId == null) : this.reviewId.equals(that.reviewId))
       &&((this.source == null) ? (that.source == null) : this.source.equals(that.source))
       &&((this.updatedDate == null) ? (that.updatedDate == null) : this.updatedDate.equals(that.updatedDate));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (brandNames == null) ? 0 : brandNames.hashCode();
      __h *= 1000003;
      __h ^= (createdDate == null) ? 0 : createdDate.hashCode();
      __h *= 1000003;
      __h ^= (hasOwnerResponse == null) ? 0 : hasOwnerResponse.hashCode();
      __h *= 1000003;
      __h ^= (reservation == null) ? 0 : reservation.hashCode();
      __h *= 1000003;
      __h ^= (reviewId == null) ? 0 : reviewId.hashCode();
      __h *= 1000003;
      __h ^= (source == null) ? 0 : source.hashCode();
      __h *= 1000003;
      __h ^= (updatedDate == null) ? 0 : updatedDate.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "ReviewFilter{"
        + "brandNames=" + brandNames + ", "
        + "createdDate=" + createdDate + ", "
        + "hasOwnerResponse=" + hasOwnerResponse + ", "
        + "reservation=" + reservation + ", "
        + "reviewId=" + reviewId + ", "
        + "source=" + source + ", "
        + "updatedDate=" + updatedDate
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<List<ReviewBrand>> brandNames = Optional.absent();

    private Optional<DateInput> createdDate = Optional.absent();

    private Optional<Boolean> hasOwnerResponse = Optional.absent();

    private Optional<ReviewReservationFilterInput> reservation = Optional.absent();

    private Optional<String> reviewId = Optional.absent();

    private Optional<String> source = Optional.absent();

    private Optional<DateInput> updatedDate = Optional.absent();

    Builder() {
    }

    /**
     * filter by brandNames
     */
    public Builder brandNames(List<ReviewBrand> brandNames) {
      this.brandNames = Optional.present(brandNames);
      return this;
    }

    /**
     * filter reviews within created date range
     */
    public Builder createdDate(DateInput createdDate) {
      this.createdDate = Optional.present(createdDate);
      return this;
    }

    /**
     * filter by owner response exist or not
     */
    public Builder hasOwnerResponse(Boolean hasOwnerResponse) {
      this.hasOwnerResponse = Optional.present(hasOwnerResponse);
      return this;
    }

    /**
     * filter by Reservation
     */
    public Builder reservation(ReviewReservationFilterInput reservation) {
      this.reservation = Optional.present(reservation);
      return this;
    }

    /**
     * Id of the review as in the Expedia review platform.
     */
    public Builder reviewId(String reviewId) {
      this.reviewId = Optional.present(reviewId);
      return this;
    }

    /**
     * filter by source eg: PLATFORM or IMPORTED
     */
    public Builder source(String source) {
      this.source = Optional.present(source);
      return this;
    }

    /**
     * filter reviews within updated date range
     */
    public Builder updatedDate(DateInput updatedDate) {
      this.updatedDate = Optional.present(updatedDate);
      return this;
    }

    public ReviewFilter build() {
      return new ReviewFilter(brandNames, createdDate, hasOwnerResponse, reservation, reviewId, source, updatedDate);
    }
  }
}
