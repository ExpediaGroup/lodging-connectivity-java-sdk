//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloOptionalAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ListAdapter;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.AmenityFieldInput;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.AmenityValueInput;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum AmenityValueInput_InputAdapter implements Adapter<AmenityValueInput> {
  INSTANCE;

  @Override
  public AmenityValueInput fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
      throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      AmenityValueInput value) throws IOException {
    writer.name("available");
    Adapters.BooleanAdapter.toJson(writer, customScalarAdapters, value.available);
    if (value.fields instanceof Optional.Present) {
      writer.name("fields");
      new ApolloOptionalAdapter<>(new NullableAdapter<>(new ListAdapter<>(new ObjectAdapter<AmenityFieldInput>(AmenityFieldInput_InputAdapter.INSTANCE, false)))).toJson(writer, customScalarAdapters, value.fields);
    }
  }
}
