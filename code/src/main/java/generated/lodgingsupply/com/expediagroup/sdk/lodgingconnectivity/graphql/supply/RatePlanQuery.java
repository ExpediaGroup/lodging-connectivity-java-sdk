//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.Query;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter.RatePlanQuery_ResponseAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.adapter.RatePlanQuery_VariablesAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.selections.RatePlanQuerySelections;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeAgeCategory;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeBusinessModel;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeChargeDuration;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.FeeChargeType;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.MerchantOfRecord;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.PricingModel;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.RatePlanStatus;
import com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.RatePlanType;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;

public class RatePlanQuery implements Query<RatePlanQuery.Data> {
  public static final String OPERATION_ID = "3dbb3dc598a73fd08bcaa8e3f337085335fd90be6311f1f083f97d451ac19d0a";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query RatePlan($propertyId: ID!, $ratePlanId: ID!) {
   *   ratePlan(propertyId: $propertyId, ratePlanId: $ratePlanId) {
   *     id
   *     lastUpdateDateTime
   *     name
   *     paymentScheduleApplicable
   *     pricingModel
   *     propertyId
   *     status
   *     taxInclusive
   *     type
   *     unitId
   *     valueAdds
   *     baseRateGuestCount
   *     creationDateTime
   *     distributionRules {
   *       merchantOfRecord
   *       ratePlanCode
   *     }
   *     feeSet {
   *       id
   *       name
   *       businessModel
   *       fees {
   *         name
   *         scope
   *         taxable
   *         type
   *         variesByLengthOfStay
   *         ageCategory
   *         charges {
   *           duration
   *           flatAmount {
   *             amount
   *             currencyCode
   *           }
   *           percentage
   *           type
   *         }
   *         restrictions {
   *           dateRange {
   *             from
   *             to
   *           }
   *           extraGuestRange {
   *             max
   *             min
   *           }
   *           rangeOfNight {
   *             max
   *             min
   *           }
   *         }
   *       }
   *     }
   *     restrictions {
   *       advanceBookingDays {
   *         max
   *         min
   *       }
   *       lengthOfStay {
   *         max
   *         min
   *       }
   *       mobileOnly
   *       reservationDates {
   *         from
   *         to
   *       }
   *       travelDates {
   *         from
   *         to
   *       }
   *     }
   *     cancellationPolicyConfig {
   *       id
   *       name
   *     }
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query RatePlan($propertyId: ID!, $ratePlanId: ID!) { ratePlan(propertyId: $propertyId, ratePlanId: $ratePlanId) { id lastUpdateDateTime name paymentScheduleApplicable pricingModel propertyId status taxInclusive type unitId valueAdds baseRateGuestCount creationDateTime distributionRules { merchantOfRecord ratePlanCode } feeSet { id name businessModel fees { name scope taxable type variesByLengthOfStay ageCategory charges { duration flatAmount { amount currencyCode } percentage type } restrictions { dateRange { from to } extraGuestRange { max min } rangeOfNight { max min } } } } restrictions { advanceBookingDays { max min } lengthOfStay { max min } mobileOnly reservationDates { from to } travelDates { from to } } cancellationPolicyConfig { id name } } }";

  public static final String OPERATION_NAME = "RatePlan";

  public final String propertyId;

  public final String ratePlanId;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public RatePlanQuery(String propertyId, String ratePlanId) {
    this.propertyId = propertyId;
    this.ratePlanId = ratePlanId;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof RatePlanQuery) {
      RatePlanQuery that = (RatePlanQuery) o;
      return ((this.propertyId == null) ? (that.propertyId == null) : this.propertyId.equals(that.propertyId))
       &&((this.ratePlanId == null) ? (that.ratePlanId == null) : this.ratePlanId.equals(that.ratePlanId));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (propertyId == null) ? 0 : propertyId.hashCode();
      __h *= 1000003;
      __h ^= (ratePlanId == null) ? 0 : ratePlanId.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "RatePlanQuery{"
        + "propertyId=" + propertyId + ", "
        + "ratePlanId=" + ratePlanId
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters)
      throws IOException {
    RatePlanQuery_VariablesAdapter.INSTANCE.toJson(writer, customScalarAdapters, this);
  }

  @Override
  public Adapter<Data> adapter() {
    return new ObjectAdapter<Data>(RatePlanQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type.Query.type
    )
    .selections(RatePlanQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    private String propertyId;

    private String ratePlanId;

    Builder() {
    }

    public Builder propertyId(String propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    public Builder ratePlanId(String ratePlanId) {
      this.ratePlanId = ratePlanId;
      return this;
    }

    public RatePlanQuery build() {
      return new RatePlanQuery(propertyId, ratePlanId);
    }
  }

  public static class Data implements Query.Data {
    public RatePlan ratePlan;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Data(RatePlan ratePlan) {
      this.ratePlan = ratePlan;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.ratePlan == null) ? (that.ratePlan == null) : this.ratePlan.equals(that.ratePlan));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (ratePlan == null) ? 0 : ratePlan.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "ratePlan=" + ratePlan
          + "}";
      }
      return $toString;
    }
  }

  public static class RatePlan {
    public String id;

    public Object lastUpdateDateTime;

    public String name;

    public Boolean paymentScheduleApplicable;

    public PricingModel pricingModel;

    public String propertyId;

    public RatePlanStatus status;

    public Boolean taxInclusive;

    public RatePlanType type;

    public String unitId;

    public List<String> valueAdds;

    public Integer baseRateGuestCount;

    public Object creationDateTime;

    public List<DistributionRule> distributionRules;

    public FeeSet feeSet;

    public Restrictions1 restrictions;

    public CancellationPolicyConfig cancellationPolicyConfig;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public RatePlan(String id, Object lastUpdateDateTime, String name,
        Boolean paymentScheduleApplicable, PricingModel pricingModel, String propertyId,
        RatePlanStatus status, Boolean taxInclusive, RatePlanType type, String unitId,
        List<String> valueAdds, Integer baseRateGuestCount, Object creationDateTime,
        List<DistributionRule> distributionRules, FeeSet feeSet, Restrictions1 restrictions,
        CancellationPolicyConfig cancellationPolicyConfig) {
      this.id = id;
      this.lastUpdateDateTime = lastUpdateDateTime;
      this.name = name;
      this.paymentScheduleApplicable = paymentScheduleApplicable;
      this.pricingModel = pricingModel;
      this.propertyId = propertyId;
      this.status = status;
      this.taxInclusive = taxInclusive;
      this.type = type;
      this.unitId = unitId;
      this.valueAdds = valueAdds;
      this.baseRateGuestCount = baseRateGuestCount;
      this.creationDateTime = creationDateTime;
      this.distributionRules = distributionRules;
      this.feeSet = feeSet;
      this.restrictions = restrictions;
      this.cancellationPolicyConfig = cancellationPolicyConfig;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof RatePlan) {
        RatePlan that = (RatePlan) o;
        return ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.lastUpdateDateTime == null) ? (that.lastUpdateDateTime == null) : this.lastUpdateDateTime.equals(that.lastUpdateDateTime))
         &&((this.name == null) ? (that.name == null) : this.name.equals(that.name))
         &&((this.paymentScheduleApplicable == null) ? (that.paymentScheduleApplicable == null) : this.paymentScheduleApplicable.equals(that.paymentScheduleApplicable))
         &&((this.pricingModel == null) ? (that.pricingModel == null) : this.pricingModel.equals(that.pricingModel))
         &&((this.propertyId == null) ? (that.propertyId == null) : this.propertyId.equals(that.propertyId))
         &&((this.status == null) ? (that.status == null) : this.status.equals(that.status))
         &&((this.taxInclusive == null) ? (that.taxInclusive == null) : this.taxInclusive.equals(that.taxInclusive))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type))
         &&((this.unitId == null) ? (that.unitId == null) : this.unitId.equals(that.unitId))
         &&((this.valueAdds == null) ? (that.valueAdds == null) : this.valueAdds.equals(that.valueAdds))
         &&((this.baseRateGuestCount == null) ? (that.baseRateGuestCount == null) : this.baseRateGuestCount.equals(that.baseRateGuestCount))
         &&((this.creationDateTime == null) ? (that.creationDateTime == null) : this.creationDateTime.equals(that.creationDateTime))
         &&((this.distributionRules == null) ? (that.distributionRules == null) : this.distributionRules.equals(that.distributionRules))
         &&((this.feeSet == null) ? (that.feeSet == null) : this.feeSet.equals(that.feeSet))
         &&((this.restrictions == null) ? (that.restrictions == null) : this.restrictions.equals(that.restrictions))
         &&((this.cancellationPolicyConfig == null) ? (that.cancellationPolicyConfig == null) : this.cancellationPolicyConfig.equals(that.cancellationPolicyConfig));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (lastUpdateDateTime == null) ? 0 : lastUpdateDateTime.hashCode();
        __h *= 1000003;
        __h ^= (name == null) ? 0 : name.hashCode();
        __h *= 1000003;
        __h ^= (paymentScheduleApplicable == null) ? 0 : paymentScheduleApplicable.hashCode();
        __h *= 1000003;
        __h ^= (pricingModel == null) ? 0 : pricingModel.hashCode();
        __h *= 1000003;
        __h ^= (propertyId == null) ? 0 : propertyId.hashCode();
        __h *= 1000003;
        __h ^= (status == null) ? 0 : status.hashCode();
        __h *= 1000003;
        __h ^= (taxInclusive == null) ? 0 : taxInclusive.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        __h *= 1000003;
        __h ^= (unitId == null) ? 0 : unitId.hashCode();
        __h *= 1000003;
        __h ^= (valueAdds == null) ? 0 : valueAdds.hashCode();
        __h *= 1000003;
        __h ^= (baseRateGuestCount == null) ? 0 : baseRateGuestCount.hashCode();
        __h *= 1000003;
        __h ^= (creationDateTime == null) ? 0 : creationDateTime.hashCode();
        __h *= 1000003;
        __h ^= (distributionRules == null) ? 0 : distributionRules.hashCode();
        __h *= 1000003;
        __h ^= (feeSet == null) ? 0 : feeSet.hashCode();
        __h *= 1000003;
        __h ^= (restrictions == null) ? 0 : restrictions.hashCode();
        __h *= 1000003;
        __h ^= (cancellationPolicyConfig == null) ? 0 : cancellationPolicyConfig.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "RatePlan{"
          + "id=" + id + ", "
          + "lastUpdateDateTime=" + lastUpdateDateTime + ", "
          + "name=" + name + ", "
          + "paymentScheduleApplicable=" + paymentScheduleApplicable + ", "
          + "pricingModel=" + pricingModel + ", "
          + "propertyId=" + propertyId + ", "
          + "status=" + status + ", "
          + "taxInclusive=" + taxInclusive + ", "
          + "type=" + type + ", "
          + "unitId=" + unitId + ", "
          + "valueAdds=" + valueAdds + ", "
          + "baseRateGuestCount=" + baseRateGuestCount + ", "
          + "creationDateTime=" + creationDateTime + ", "
          + "distributionRules=" + distributionRules + ", "
          + "feeSet=" + feeSet + ", "
          + "restrictions=" + restrictions + ", "
          + "cancellationPolicyConfig=" + cancellationPolicyConfig
          + "}";
      }
      return $toString;
    }
  }

  public static class DistributionRule {
    public MerchantOfRecord merchantOfRecord;

    public String ratePlanCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public DistributionRule(MerchantOfRecord merchantOfRecord, String ratePlanCode) {
      this.merchantOfRecord = merchantOfRecord;
      this.ratePlanCode = ratePlanCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof DistributionRule) {
        DistributionRule that = (DistributionRule) o;
        return ((this.merchantOfRecord == null) ? (that.merchantOfRecord == null) : this.merchantOfRecord.equals(that.merchantOfRecord))
         &&((this.ratePlanCode == null) ? (that.ratePlanCode == null) : this.ratePlanCode.equals(that.ratePlanCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (merchantOfRecord == null) ? 0 : merchantOfRecord.hashCode();
        __h *= 1000003;
        __h ^= (ratePlanCode == null) ? 0 : ratePlanCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "DistributionRule{"
          + "merchantOfRecord=" + merchantOfRecord + ", "
          + "ratePlanCode=" + ratePlanCode
          + "}";
      }
      return $toString;
    }
  }

  public static class FeeSet {
    public String id;

    public String name;

    public FeeBusinessModel businessModel;

    public List<Fee> fees;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public FeeSet(String id, String name, FeeBusinessModel businessModel, List<Fee> fees) {
      this.id = id;
      this.name = name;
      this.businessModel = businessModel;
      this.fees = fees;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof FeeSet) {
        FeeSet that = (FeeSet) o;
        return ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.name == null) ? (that.name == null) : this.name.equals(that.name))
         &&((this.businessModel == null) ? (that.businessModel == null) : this.businessModel.equals(that.businessModel))
         &&((this.fees == null) ? (that.fees == null) : this.fees.equals(that.fees));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (name == null) ? 0 : name.hashCode();
        __h *= 1000003;
        __h ^= (businessModel == null) ? 0 : businessModel.hashCode();
        __h *= 1000003;
        __h ^= (fees == null) ? 0 : fees.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "FeeSet{"
          + "id=" + id + ", "
          + "name=" + name + ", "
          + "businessModel=" + businessModel + ", "
          + "fees=" + fees
          + "}";
      }
      return $toString;
    }
  }

  public static class Fee {
    public String name;

    public String scope;

    public Boolean taxable;

    public String type;

    public Boolean variesByLengthOfStay;

    public FeeAgeCategory ageCategory;

    public List<Charge> charges;

    public Restrictions restrictions;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Fee(String name, String scope, Boolean taxable, String type,
        Boolean variesByLengthOfStay, FeeAgeCategory ageCategory, List<Charge> charges,
        Restrictions restrictions) {
      this.name = name;
      this.scope = scope;
      this.taxable = taxable;
      this.type = type;
      this.variesByLengthOfStay = variesByLengthOfStay;
      this.ageCategory = ageCategory;
      this.charges = charges;
      this.restrictions = restrictions;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Fee) {
        Fee that = (Fee) o;
        return ((this.name == null) ? (that.name == null) : this.name.equals(that.name))
         &&((this.scope == null) ? (that.scope == null) : this.scope.equals(that.scope))
         &&((this.taxable == null) ? (that.taxable == null) : this.taxable.equals(that.taxable))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type))
         &&((this.variesByLengthOfStay == null) ? (that.variesByLengthOfStay == null) : this.variesByLengthOfStay.equals(that.variesByLengthOfStay))
         &&((this.ageCategory == null) ? (that.ageCategory == null) : this.ageCategory.equals(that.ageCategory))
         &&((this.charges == null) ? (that.charges == null) : this.charges.equals(that.charges))
         &&((this.restrictions == null) ? (that.restrictions == null) : this.restrictions.equals(that.restrictions));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (name == null) ? 0 : name.hashCode();
        __h *= 1000003;
        __h ^= (scope == null) ? 0 : scope.hashCode();
        __h *= 1000003;
        __h ^= (taxable == null) ? 0 : taxable.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        __h *= 1000003;
        __h ^= (variesByLengthOfStay == null) ? 0 : variesByLengthOfStay.hashCode();
        __h *= 1000003;
        __h ^= (ageCategory == null) ? 0 : ageCategory.hashCode();
        __h *= 1000003;
        __h ^= (charges == null) ? 0 : charges.hashCode();
        __h *= 1000003;
        __h ^= (restrictions == null) ? 0 : restrictions.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Fee{"
          + "name=" + name + ", "
          + "scope=" + scope + ", "
          + "taxable=" + taxable + ", "
          + "type=" + type + ", "
          + "variesByLengthOfStay=" + variesByLengthOfStay + ", "
          + "ageCategory=" + ageCategory + ", "
          + "charges=" + charges + ", "
          + "restrictions=" + restrictions
          + "}";
      }
      return $toString;
    }
  }

  public static class Charge {
    public FeeChargeDuration duration;

    public FlatAmount flatAmount;

    public Object percentage;

    public FeeChargeType type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Charge(FeeChargeDuration duration, FlatAmount flatAmount, Object percentage,
        FeeChargeType type) {
      this.duration = duration;
      this.flatAmount = flatAmount;
      this.percentage = percentage;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Charge) {
        Charge that = (Charge) o;
        return ((this.duration == null) ? (that.duration == null) : this.duration.equals(that.duration))
         &&((this.flatAmount == null) ? (that.flatAmount == null) : this.flatAmount.equals(that.flatAmount))
         &&((this.percentage == null) ? (that.percentage == null) : this.percentage.equals(that.percentage))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (duration == null) ? 0 : duration.hashCode();
        __h *= 1000003;
        __h ^= (flatAmount == null) ? 0 : flatAmount.hashCode();
        __h *= 1000003;
        __h ^= (percentage == null) ? 0 : percentage.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Charge{"
          + "duration=" + duration + ", "
          + "flatAmount=" + flatAmount + ", "
          + "percentage=" + percentage + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }

  public static class FlatAmount {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public Object amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public FlatAmount(Object amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof FlatAmount) {
        FlatAmount that = (FlatAmount) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "FlatAmount{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }

  public static class Restrictions {
    public DateRange dateRange;

    public ExtraGuestRange extraGuestRange;

    public RangeOfNight rangeOfNight;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Restrictions(DateRange dateRange, ExtraGuestRange extraGuestRange,
        RangeOfNight rangeOfNight) {
      this.dateRange = dateRange;
      this.extraGuestRange = extraGuestRange;
      this.rangeOfNight = rangeOfNight;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Restrictions) {
        Restrictions that = (Restrictions) o;
        return ((this.dateRange == null) ? (that.dateRange == null) : this.dateRange.equals(that.dateRange))
         &&((this.extraGuestRange == null) ? (that.extraGuestRange == null) : this.extraGuestRange.equals(that.extraGuestRange))
         &&((this.rangeOfNight == null) ? (that.rangeOfNight == null) : this.rangeOfNight.equals(that.rangeOfNight));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (dateRange == null) ? 0 : dateRange.hashCode();
        __h *= 1000003;
        __h ^= (extraGuestRange == null) ? 0 : extraGuestRange.hashCode();
        __h *= 1000003;
        __h ^= (rangeOfNight == null) ? 0 : rangeOfNight.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Restrictions{"
          + "dateRange=" + dateRange + ", "
          + "extraGuestRange=" + extraGuestRange + ", "
          + "rangeOfNight=" + rangeOfNight
          + "}";
      }
      return $toString;
    }
  }

  public static class DateRange {
    public Object from;

    public Object to;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public DateRange(Object from, Object to) {
      this.from = from;
      this.to = to;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof DateRange) {
        DateRange that = (DateRange) o;
        return ((this.from == null) ? (that.from == null) : this.from.equals(that.from))
         &&((this.to == null) ? (that.to == null) : this.to.equals(that.to));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (from == null) ? 0 : from.hashCode();
        __h *= 1000003;
        __h ^= (to == null) ? 0 : to.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "DateRange{"
          + "from=" + from + ", "
          + "to=" + to
          + "}";
      }
      return $toString;
    }
  }

  public static class ExtraGuestRange {
    public Integer max;

    public Integer min;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public ExtraGuestRange(Integer max, Integer min) {
      this.max = max;
      this.min = min;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof ExtraGuestRange) {
        ExtraGuestRange that = (ExtraGuestRange) o;
        return ((this.max == null) ? (that.max == null) : this.max.equals(that.max))
         &&((this.min == null) ? (that.min == null) : this.min.equals(that.min));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (max == null) ? 0 : max.hashCode();
        __h *= 1000003;
        __h ^= (min == null) ? 0 : min.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "ExtraGuestRange{"
          + "max=" + max + ", "
          + "min=" + min
          + "}";
      }
      return $toString;
    }
  }

  public static class RangeOfNight {
    public Integer max;

    public Integer min;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public RangeOfNight(Integer max, Integer min) {
      this.max = max;
      this.min = min;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof RangeOfNight) {
        RangeOfNight that = (RangeOfNight) o;
        return ((this.max == null) ? (that.max == null) : this.max.equals(that.max))
         &&((this.min == null) ? (that.min == null) : this.min.equals(that.min));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (max == null) ? 0 : max.hashCode();
        __h *= 1000003;
        __h ^= (min == null) ? 0 : min.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "RangeOfNight{"
          + "max=" + max + ", "
          + "min=" + min
          + "}";
      }
      return $toString;
    }
  }

  public static class Restrictions1 {
    public AdvanceBookingDays advanceBookingDays;

    public LengthOfStay lengthOfStay;

    public Boolean mobileOnly;

    public ReservationDates reservationDates;

    public TravelDates travelDates;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Restrictions1(AdvanceBookingDays advanceBookingDays, LengthOfStay lengthOfStay,
        Boolean mobileOnly, ReservationDates reservationDates, TravelDates travelDates) {
      this.advanceBookingDays = advanceBookingDays;
      this.lengthOfStay = lengthOfStay;
      this.mobileOnly = mobileOnly;
      this.reservationDates = reservationDates;
      this.travelDates = travelDates;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Restrictions1) {
        Restrictions1 that = (Restrictions1) o;
        return ((this.advanceBookingDays == null) ? (that.advanceBookingDays == null) : this.advanceBookingDays.equals(that.advanceBookingDays))
         &&((this.lengthOfStay == null) ? (that.lengthOfStay == null) : this.lengthOfStay.equals(that.lengthOfStay))
         &&((this.mobileOnly == null) ? (that.mobileOnly == null) : this.mobileOnly.equals(that.mobileOnly))
         &&((this.reservationDates == null) ? (that.reservationDates == null) : this.reservationDates.equals(that.reservationDates))
         &&((this.travelDates == null) ? (that.travelDates == null) : this.travelDates.equals(that.travelDates));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (advanceBookingDays == null) ? 0 : advanceBookingDays.hashCode();
        __h *= 1000003;
        __h ^= (lengthOfStay == null) ? 0 : lengthOfStay.hashCode();
        __h *= 1000003;
        __h ^= (mobileOnly == null) ? 0 : mobileOnly.hashCode();
        __h *= 1000003;
        __h ^= (reservationDates == null) ? 0 : reservationDates.hashCode();
        __h *= 1000003;
        __h ^= (travelDates == null) ? 0 : travelDates.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Restrictions1{"
          + "advanceBookingDays=" + advanceBookingDays + ", "
          + "lengthOfStay=" + lengthOfStay + ", "
          + "mobileOnly=" + mobileOnly + ", "
          + "reservationDates=" + reservationDates + ", "
          + "travelDates=" + travelDates
          + "}";
      }
      return $toString;
    }
  }

  public static class AdvanceBookingDays {
    public Integer max;

    public Integer min;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public AdvanceBookingDays(Integer max, Integer min) {
      this.max = max;
      this.min = min;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof AdvanceBookingDays) {
        AdvanceBookingDays that = (AdvanceBookingDays) o;
        return ((this.max == null) ? (that.max == null) : this.max.equals(that.max))
         &&((this.min == null) ? (that.min == null) : this.min.equals(that.min));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (max == null) ? 0 : max.hashCode();
        __h *= 1000003;
        __h ^= (min == null) ? 0 : min.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "AdvanceBookingDays{"
          + "max=" + max + ", "
          + "min=" + min
          + "}";
      }
      return $toString;
    }
  }

  public static class LengthOfStay {
    public Integer max;

    public Integer min;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public LengthOfStay(Integer max, Integer min) {
      this.max = max;
      this.min = min;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof LengthOfStay) {
        LengthOfStay that = (LengthOfStay) o;
        return ((this.max == null) ? (that.max == null) : this.max.equals(that.max))
         &&((this.min == null) ? (that.min == null) : this.min.equals(that.min));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (max == null) ? 0 : max.hashCode();
        __h *= 1000003;
        __h ^= (min == null) ? 0 : min.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "LengthOfStay{"
          + "max=" + max + ", "
          + "min=" + min
          + "}";
      }
      return $toString;
    }
  }

  public static class ReservationDates {
    public Object from;

    public Object to;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public ReservationDates(Object from, Object to) {
      this.from = from;
      this.to = to;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof ReservationDates) {
        ReservationDates that = (ReservationDates) o;
        return ((this.from == null) ? (that.from == null) : this.from.equals(that.from))
         &&((this.to == null) ? (that.to == null) : this.to.equals(that.to));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (from == null) ? 0 : from.hashCode();
        __h *= 1000003;
        __h ^= (to == null) ? 0 : to.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "ReservationDates{"
          + "from=" + from + ", "
          + "to=" + to
          + "}";
      }
      return $toString;
    }
  }

  public static class TravelDates {
    public Object from;

    public Object to;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public TravelDates(Object from, Object to) {
      this.from = from;
      this.to = to;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof TravelDates) {
        TravelDates that = (TravelDates) o;
        return ((this.from == null) ? (that.from == null) : this.from.equals(that.from))
         &&((this.to == null) ? (that.to == null) : this.to.equals(that.to));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (from == null) ? 0 : from.hashCode();
        __h *= 1000003;
        __h ^= (to == null) ? 0 : to.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "TravelDates{"
          + "from=" + from + ", "
          + "to=" + to
          + "}";
      }
      return $toString;
    }
  }

  public static class CancellationPolicyConfig {
    public String id;

    public String name;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public CancellationPolicyConfig(String id, String name) {
      this.id = id;
      this.name = name;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof CancellationPolicyConfig) {
        CancellationPolicyConfig that = (CancellationPolicyConfig) o;
        return ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.name == null) ? (that.name == null) : this.name.equals(that.name));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (name == null) ? 0 : name.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "CancellationPolicyConfig{"
          + "id=" + id + ", "
          + "name=" + name
          + "}";
      }
      return $toString;
    }
  }
}
