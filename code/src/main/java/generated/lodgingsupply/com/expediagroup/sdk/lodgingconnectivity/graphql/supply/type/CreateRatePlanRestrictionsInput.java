//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.supply.type;

import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

public class CreateRatePlanRestrictionsInput {
  public final Optional<Optional<IntRangeInput>> advanceBookingDays;

  public final Optional<Optional<IntRangeInput>> lengthOfStay;

  public final Optional<Optional<Boolean>> mobileOnly;

  public final Optional<Optional<DateRangeInput>> reservationDates;

  public final Optional<Optional<DateRangeInput>> travelDates;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public CreateRatePlanRestrictionsInput(Optional<Optional<IntRangeInput>> advanceBookingDays,
      Optional<Optional<IntRangeInput>> lengthOfStay, Optional<Optional<Boolean>> mobileOnly,
      Optional<Optional<DateRangeInput>> reservationDates,
      Optional<Optional<DateRangeInput>> travelDates) {
    this.advanceBookingDays = advanceBookingDays;
    this.lengthOfStay = lengthOfStay;
    this.mobileOnly = mobileOnly;
    this.reservationDates = reservationDates;
    this.travelDates = travelDates;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof CreateRatePlanRestrictionsInput) {
      CreateRatePlanRestrictionsInput that = (CreateRatePlanRestrictionsInput) o;
      return ((this.advanceBookingDays == null) ? (that.advanceBookingDays == null) : this.advanceBookingDays.equals(that.advanceBookingDays))
       &&((this.lengthOfStay == null) ? (that.lengthOfStay == null) : this.lengthOfStay.equals(that.lengthOfStay))
       &&((this.mobileOnly == null) ? (that.mobileOnly == null) : this.mobileOnly.equals(that.mobileOnly))
       &&((this.reservationDates == null) ? (that.reservationDates == null) : this.reservationDates.equals(that.reservationDates))
       &&((this.travelDates == null) ? (that.travelDates == null) : this.travelDates.equals(that.travelDates));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (advanceBookingDays == null) ? 0 : advanceBookingDays.hashCode();
      __h *= 1000003;
      __h ^= (lengthOfStay == null) ? 0 : lengthOfStay.hashCode();
      __h *= 1000003;
      __h ^= (mobileOnly == null) ? 0 : mobileOnly.hashCode();
      __h *= 1000003;
      __h ^= (reservationDates == null) ? 0 : reservationDates.hashCode();
      __h *= 1000003;
      __h ^= (travelDates == null) ? 0 : travelDates.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "CreateRatePlanRestrictionsInput{"
        + "advanceBookingDays=" + advanceBookingDays + ", "
        + "lengthOfStay=" + lengthOfStay + ", "
        + "mobileOnly=" + mobileOnly + ", "
        + "reservationDates=" + reservationDates + ", "
        + "travelDates=" + travelDates
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Optional<IntRangeInput>> advanceBookingDays = Optional.empty();

    private Optional<Optional<IntRangeInput>> lengthOfStay = Optional.empty();

    private Optional<Optional<Boolean>> mobileOnly = Optional.empty();

    private Optional<Optional<DateRangeInput>> reservationDates = Optional.empty();

    private Optional<Optional<DateRangeInput>> travelDates = Optional.empty();

    Builder() {
    }

    public Builder advanceBookingDays(@NotNull Optional<IntRangeInput> advanceBookingDays) {
      this.advanceBookingDays = Optional.of(advanceBookingDays);
      return this;
    }

    public Builder lengthOfStay(@NotNull Optional<IntRangeInput> lengthOfStay) {
      this.lengthOfStay = Optional.of(lengthOfStay);
      return this;
    }

    public Builder mobileOnly(@NotNull Optional<Boolean> mobileOnly) {
      this.mobileOnly = Optional.of(mobileOnly);
      return this;
    }

    public Builder reservationDates(@NotNull Optional<DateRangeInput> reservationDates) {
      this.reservationDates = Optional.of(reservationDates);
      return this;
    }

    public Builder travelDates(@NotNull Optional<DateRangeInput> travelDates) {
      this.travelDates = Optional.of(travelDates);
      return this;
    }

    public CreateRatePlanRestrictionsInput build() {
      return new CreateRatePlanRestrictionsInput(advanceBookingDays, lengthOfStay, mobileOnly, reservationDates, travelDates);
    }
  }
}
