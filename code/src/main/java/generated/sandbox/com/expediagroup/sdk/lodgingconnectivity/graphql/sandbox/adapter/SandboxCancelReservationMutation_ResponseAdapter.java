//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.adapter;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.Adapters;
import com.apollographql.apollo.api.Assertions;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.json.JsonReader;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.SandboxCancelReservationMutation;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.ReservationStatus;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.adapter.OptionalAdapters;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.adapter.ReservationStatus_ResponseAdapter;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;

public class SandboxCancelReservationMutation_ResponseAdapter {
  public enum Data implements Adapter<SandboxCancelReservationMutation.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("cancelReservation");

    @Override
    public SandboxCancelReservationMutation.Data fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      SandboxCancelReservationMutation.CancelReservation _cancelReservation = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _cancelReservation = new ObjectAdapter<SandboxCancelReservationMutation.CancelReservation>(CancelReservation.INSTANCE, false).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_cancelReservation, "cancelReservation");

      return new SandboxCancelReservationMutation.Data(
        _cancelReservation
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        SandboxCancelReservationMutation.Data value) throws IOException {
      writer.name("cancelReservation");
      new ObjectAdapter<SandboxCancelReservationMutation.CancelReservation>(CancelReservation.INSTANCE, false).toJson(writer, customScalarAdapters, value.cancelReservation);
    }
  }

  public enum CancelReservation implements Adapter<SandboxCancelReservationMutation.CancelReservation> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("clientMutationId", "reservation");

    @Override
    public SandboxCancelReservationMutation.CancelReservation fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      Optional<String> _clientMutationId = null;
      SandboxCancelReservationMutation.Reservation _reservation = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _clientMutationId = OptionalAdapters.OptionalStringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _reservation = new ObjectAdapter<SandboxCancelReservationMutation.Reservation>(Reservation.INSTANCE, false).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_reservation, "reservation");

      return new SandboxCancelReservationMutation.CancelReservation(
        _clientMutationId,
        _reservation
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        SandboxCancelReservationMutation.CancelReservation value) throws IOException {
      writer.name("clientMutationId");
      OptionalAdapters.OptionalStringAdapter.toJson(writer, customScalarAdapters, value.clientMutationId);

      writer.name("reservation");
      new ObjectAdapter<SandboxCancelReservationMutation.Reservation>(Reservation.INSTANCE, false).toJson(writer, customScalarAdapters, value.reservation);
    }
  }

  public enum Reservation implements Adapter<SandboxCancelReservationMutation.Reservation> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("id", "status");

    @Override
    public SandboxCancelReservationMutation.Reservation fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String _id = null;
      ReservationStatus _status = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _id = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _status = ReservationStatus_ResponseAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_id, "id");
      Assertions.checkFieldNotMissing(_status, "status");

      return new SandboxCancelReservationMutation.Reservation(
        _id,
        _status
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        SandboxCancelReservationMutation.Reservation value) throws IOException {
      writer.name("id");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.id);

      writer.name("status");
      ReservationStatus_ResponseAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.status);
    }
  }
}
