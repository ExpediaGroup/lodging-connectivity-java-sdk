//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.selections;

import com.apollographql.apollo.api.CompiledArgument;
import com.apollographql.apollo.api.CompiledCondition;
import com.apollographql.apollo.api.CompiledField;
import com.apollographql.apollo.api.CompiledFragment;
import com.apollographql.apollo.api.CompiledListType;
import com.apollographql.apollo.api.CompiledNotNullType;
import com.apollographql.apollo.api.CompiledSelection;
import com.apollographql.apollo.api.CompiledVariable;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.selections.SandboxReservationFragmentSelections;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.GraphQLID;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.GraphQLInt;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.GraphQLString;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.PropertiesResponse;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.Property;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.Query;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.Reservation;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.ReservationsResponse;
import java.util.Arrays;
import java.util.List;

public class SandboxPropertiesQuerySelections {
  private static List<CompiledSelection> __elements1 = Arrays.asList(
    new CompiledField.Builder("__typename", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledFragment.Builder("Reservation", Arrays.asList("Reservation")).selections(SandboxReservationFragmentSelections.__root).build()
  );

  private static List<CompiledSelection> __reservations = Arrays.asList(
    new CompiledField.Builder("totalCount", new CompiledNotNullType(GraphQLInt.type)).build(),
    new CompiledField.Builder("cursor", GraphQLString.type).build(),
    new CompiledField.Builder("elements", new CompiledNotNullType(new CompiledListType(new CompiledNotNullType(Reservation.type)))).selections(__elements1).build()
  );

  private static List<CompiledSelection> __elements = Arrays.asList(
    new CompiledField.Builder("id", new CompiledNotNullType(GraphQLID.type)).build(),
    new CompiledField.Builder("name", new CompiledNotNullType(GraphQLString.type)).build(),
    new CompiledField.Builder("reservations", new CompiledNotNullType(ReservationsResponse.type)).condition(Arrays.asList(new CompiledCondition("skipReservations", true))).selections(__reservations).build()
  );

  private static List<CompiledSelection> __properties = Arrays.asList(
    new CompiledField.Builder("cursor", GraphQLString.type).build(),
    new CompiledField.Builder("totalCount", new CompiledNotNullType(GraphQLInt.type)).build(),
    new CompiledField.Builder("elements", new CompiledNotNullType(new CompiledListType(new CompiledNotNullType(Property.type)))).selections(__elements).build()
  );

  public static List<CompiledSelection> __root = Arrays.asList(
    new CompiledField.Builder("properties", new CompiledNotNullType(PropertiesResponse.type)).arguments(Arrays.asList(new CompiledArgument.Builder(Query.__properties_cursor).value(new CompiledVariable("cursor")).build(), new CompiledArgument.Builder(Query.__properties_limit).value(new CompiledVariable("limit")).build())).selections(__properties).build()
  );
}
