//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment;

import com.apollographql.apollo.api.Fragment;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.BookingSource;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.BusinessModel;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.IdSource;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.ReconciliationType;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.ReservationStatus;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.time.LocalDate;
import java.util.List;

public class SandboxReservationFragment implements Fragment.Data {
  /**
   * Accessibility requests made by the guest for the reservation.
   */
  public List<String> accessibilityText;

  /**
   * Count for all adult guests associated with the reservation.
   */
  public Integer adultCount;

  /**
   * Amounts associated with the reservation.
   */
  public Amounts amounts;

  /**
   * Bed type of the reservation.
   */
  public String bedTypes;

  /**
   * Source of the reservation booking.
   */
  public BookingSource bookingSource;

  /**
   * Entity that collects payment for the reservation.
   */
  public BusinessModel businessModel;

  /**
   * Check-in date (format: YYYY-MM-DD) of the reservation.
   */
  public LocalDate checkInDate;

  /**
   * Check-out date (format: YYYY-MM-DD) of the reservation.
   */
  public LocalDate checkOutDate;

  /**
   * Ages of children associated with the reservation.
   */
  public List<Integer> childAges;

  /**
   * Count for all child guests associated with the reservation.
   */
  public Integer childCount;

  /**
   * Date/time when the reservation was created (format: yyyy-MM-dd'T'HH:mm:ss.SSSX, will always be in UTC timezone).
   */
  public String creationDateTime;

  /**
   * Unique identifier for the reservation.
   */
  public String id;

  /**
   * Whether the reservation has been reconciled or not.
   */
  public Boolean isReconciled;

  /**
   * Date/time when the reservation was last updated (format: yyyy-MM-dd'T'HH:mm:ss.SSSX, will always be in UTC timezone).
   */
  public String lastUpdatedDateTime;

  /**
   * Text that is displayed to guests if there is a multi-room booking associated with the reservation.
   */
  public String multiRoomText;

  /**
   * Payment details associated with the reservation.
   */
  public Payment payment;

  /**
   * Count of pets associated with the reservation.
   */
  public Integer petCount;

  /**
   * Guest who made the reservation.
   */
  public PrimaryGuest primaryGuest;

  /**
   * Unique identifier for the property.
   */
  public String propertyId;

  /**
   * Unique identifiers for the rates associated with the reservation.
   */
  public List<RateId> rateIds;

  /**
   * Type of reconciliation that has been performed on the reservation, if any.
   */
  public ReconciliationType reconciliationType;

  /**
   * Unique identifiers for the reservation, each corresponding to a different source associated with the reservation.
   */
  public List<ReservationId> reservationIds;

  /**
   * Whether smoking is allowed for the reservation.
   */
  public String smokingType;

  /**
   * ext that is displayed to guests if there is a special request associated with the reservation.
   */
  public String specialRequest;

  /**
   * Current status of the reservation.
   */
  public ReservationStatus status;

  /**
   * Current substatus of the reservation. Applicable for Vrbo reservations only.
   */
  public String subStatus;

  /**
   * Travel Industry Designator Service (TIDS) code that allows a reservation to be recognized by industry suppliers.
   */
  public Integer tidsCode;

  /**
   * Total number of guests associated with the reservation.
   */
  public Integer totalGuestCount;

  /**
   * Known IDs for the unit/room in the source system(s). IDs that are returned depend on where the property was onboarded:
   * - If the property was onboarded onto Vrbo, three IDs are returned: the partnerâ€™s (external ID), Vrboâ€™s (Vrbo internal ID), and Expedia's (EID).
   * - If the property was onboarded onto Expedia, only the Expedia ID is included in the response.
   */
  public List<UnitId> unitIds;

  /**
   * Value add promotion(s) used to book the reservation.
   */
  public List<ValueAddedPromotion> valueAddedPromotions;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public SandboxReservationFragment(List<String> accessibilityText, Integer adultCount,
      Amounts amounts, String bedTypes, BookingSource bookingSource, BusinessModel businessModel,
      LocalDate checkInDate, LocalDate checkOutDate, List<Integer> childAges, Integer childCount,
      String creationDateTime, String id, Boolean isReconciled, String lastUpdatedDateTime,
      String multiRoomText, Payment payment, Integer petCount, PrimaryGuest primaryGuest,
      String propertyId, List<RateId> rateIds, ReconciliationType reconciliationType,
      List<ReservationId> reservationIds, String smokingType, String specialRequest,
      ReservationStatus status, String subStatus, Integer tidsCode, Integer totalGuestCount,
      List<UnitId> unitIds, List<ValueAddedPromotion> valueAddedPromotions) {
    this.accessibilityText = accessibilityText;
    this.adultCount = adultCount;
    this.amounts = amounts;
    this.bedTypes = bedTypes;
    this.bookingSource = bookingSource;
    this.businessModel = businessModel;
    this.checkInDate = checkInDate;
    this.checkOutDate = checkOutDate;
    this.childAges = childAges;
    this.childCount = childCount;
    this.creationDateTime = creationDateTime;
    this.id = id;
    this.isReconciled = isReconciled;
    this.lastUpdatedDateTime = lastUpdatedDateTime;
    this.multiRoomText = multiRoomText;
    this.payment = payment;
    this.petCount = petCount;
    this.primaryGuest = primaryGuest;
    this.propertyId = propertyId;
    this.rateIds = rateIds;
    this.reconciliationType = reconciliationType;
    this.reservationIds = reservationIds;
    this.smokingType = smokingType;
    this.specialRequest = specialRequest;
    this.status = status;
    this.subStatus = subStatus;
    this.tidsCode = tidsCode;
    this.totalGuestCount = totalGuestCount;
    this.unitIds = unitIds;
    this.valueAddedPromotions = valueAddedPromotions;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof SandboxReservationFragment) {
      SandboxReservationFragment that = (SandboxReservationFragment) o;
      return ((this.accessibilityText == null) ? (that.accessibilityText == null) : this.accessibilityText.equals(that.accessibilityText))
       &&((this.adultCount == null) ? (that.adultCount == null) : this.adultCount.equals(that.adultCount))
       &&((this.amounts == null) ? (that.amounts == null) : this.amounts.equals(that.amounts))
       &&((this.bedTypes == null) ? (that.bedTypes == null) : this.bedTypes.equals(that.bedTypes))
       &&((this.bookingSource == null) ? (that.bookingSource == null) : this.bookingSource.equals(that.bookingSource))
       &&((this.businessModel == null) ? (that.businessModel == null) : this.businessModel.equals(that.businessModel))
       &&((this.checkInDate == null) ? (that.checkInDate == null) : this.checkInDate.equals(that.checkInDate))
       &&((this.checkOutDate == null) ? (that.checkOutDate == null) : this.checkOutDate.equals(that.checkOutDate))
       &&((this.childAges == null) ? (that.childAges == null) : this.childAges.equals(that.childAges))
       &&((this.childCount == null) ? (that.childCount == null) : this.childCount.equals(that.childCount))
       &&((this.creationDateTime == null) ? (that.creationDateTime == null) : this.creationDateTime.equals(that.creationDateTime))
       &&((this.id == null) ? (that.id == null) : this.id.equals(that.id))
       &&((this.isReconciled == null) ? (that.isReconciled == null) : this.isReconciled.equals(that.isReconciled))
       &&((this.lastUpdatedDateTime == null) ? (that.lastUpdatedDateTime == null) : this.lastUpdatedDateTime.equals(that.lastUpdatedDateTime))
       &&((this.multiRoomText == null) ? (that.multiRoomText == null) : this.multiRoomText.equals(that.multiRoomText))
       &&((this.payment == null) ? (that.payment == null) : this.payment.equals(that.payment))
       &&((this.petCount == null) ? (that.petCount == null) : this.petCount.equals(that.petCount))
       &&((this.primaryGuest == null) ? (that.primaryGuest == null) : this.primaryGuest.equals(that.primaryGuest))
       &&((this.propertyId == null) ? (that.propertyId == null) : this.propertyId.equals(that.propertyId))
       &&((this.rateIds == null) ? (that.rateIds == null) : this.rateIds.equals(that.rateIds))
       &&((this.reconciliationType == null) ? (that.reconciliationType == null) : this.reconciliationType.equals(that.reconciliationType))
       &&((this.reservationIds == null) ? (that.reservationIds == null) : this.reservationIds.equals(that.reservationIds))
       &&((this.smokingType == null) ? (that.smokingType == null) : this.smokingType.equals(that.smokingType))
       &&((this.specialRequest == null) ? (that.specialRequest == null) : this.specialRequest.equals(that.specialRequest))
       &&((this.status == null) ? (that.status == null) : this.status.equals(that.status))
       &&((this.subStatus == null) ? (that.subStatus == null) : this.subStatus.equals(that.subStatus))
       &&((this.tidsCode == null) ? (that.tidsCode == null) : this.tidsCode.equals(that.tidsCode))
       &&((this.totalGuestCount == null) ? (that.totalGuestCount == null) : this.totalGuestCount.equals(that.totalGuestCount))
       &&((this.unitIds == null) ? (that.unitIds == null) : this.unitIds.equals(that.unitIds))
       &&((this.valueAddedPromotions == null) ? (that.valueAddedPromotions == null) : this.valueAddedPromotions.equals(that.valueAddedPromotions));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (accessibilityText == null) ? 0 : accessibilityText.hashCode();
      __h *= 1000003;
      __h ^= (adultCount == null) ? 0 : adultCount.hashCode();
      __h *= 1000003;
      __h ^= (amounts == null) ? 0 : amounts.hashCode();
      __h *= 1000003;
      __h ^= (bedTypes == null) ? 0 : bedTypes.hashCode();
      __h *= 1000003;
      __h ^= (bookingSource == null) ? 0 : bookingSource.hashCode();
      __h *= 1000003;
      __h ^= (businessModel == null) ? 0 : businessModel.hashCode();
      __h *= 1000003;
      __h ^= (checkInDate == null) ? 0 : checkInDate.hashCode();
      __h *= 1000003;
      __h ^= (checkOutDate == null) ? 0 : checkOutDate.hashCode();
      __h *= 1000003;
      __h ^= (childAges == null) ? 0 : childAges.hashCode();
      __h *= 1000003;
      __h ^= (childCount == null) ? 0 : childCount.hashCode();
      __h *= 1000003;
      __h ^= (creationDateTime == null) ? 0 : creationDateTime.hashCode();
      __h *= 1000003;
      __h ^= (id == null) ? 0 : id.hashCode();
      __h *= 1000003;
      __h ^= (isReconciled == null) ? 0 : isReconciled.hashCode();
      __h *= 1000003;
      __h ^= (lastUpdatedDateTime == null) ? 0 : lastUpdatedDateTime.hashCode();
      __h *= 1000003;
      __h ^= (multiRoomText == null) ? 0 : multiRoomText.hashCode();
      __h *= 1000003;
      __h ^= (payment == null) ? 0 : payment.hashCode();
      __h *= 1000003;
      __h ^= (petCount == null) ? 0 : petCount.hashCode();
      __h *= 1000003;
      __h ^= (primaryGuest == null) ? 0 : primaryGuest.hashCode();
      __h *= 1000003;
      __h ^= (propertyId == null) ? 0 : propertyId.hashCode();
      __h *= 1000003;
      __h ^= (rateIds == null) ? 0 : rateIds.hashCode();
      __h *= 1000003;
      __h ^= (reconciliationType == null) ? 0 : reconciliationType.hashCode();
      __h *= 1000003;
      __h ^= (reservationIds == null) ? 0 : reservationIds.hashCode();
      __h *= 1000003;
      __h ^= (smokingType == null) ? 0 : smokingType.hashCode();
      __h *= 1000003;
      __h ^= (specialRequest == null) ? 0 : specialRequest.hashCode();
      __h *= 1000003;
      __h ^= (status == null) ? 0 : status.hashCode();
      __h *= 1000003;
      __h ^= (subStatus == null) ? 0 : subStatus.hashCode();
      __h *= 1000003;
      __h ^= (tidsCode == null) ? 0 : tidsCode.hashCode();
      __h *= 1000003;
      __h ^= (totalGuestCount == null) ? 0 : totalGuestCount.hashCode();
      __h *= 1000003;
      __h ^= (unitIds == null) ? 0 : unitIds.hashCode();
      __h *= 1000003;
      __h ^= (valueAddedPromotions == null) ? 0 : valueAddedPromotions.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "SandboxReservationFragment{"
        + "accessibilityText=" + accessibilityText + ", "
        + "adultCount=" + adultCount + ", "
        + "amounts=" + amounts + ", "
        + "bedTypes=" + bedTypes + ", "
        + "bookingSource=" + bookingSource + ", "
        + "businessModel=" + businessModel + ", "
        + "checkInDate=" + checkInDate + ", "
        + "checkOutDate=" + checkOutDate + ", "
        + "childAges=" + childAges + ", "
        + "childCount=" + childCount + ", "
        + "creationDateTime=" + creationDateTime + ", "
        + "id=" + id + ", "
        + "isReconciled=" + isReconciled + ", "
        + "lastUpdatedDateTime=" + lastUpdatedDateTime + ", "
        + "multiRoomText=" + multiRoomText + ", "
        + "payment=" + payment + ", "
        + "petCount=" + petCount + ", "
        + "primaryGuest=" + primaryGuest + ", "
        + "propertyId=" + propertyId + ", "
        + "rateIds=" + rateIds + ", "
        + "reconciliationType=" + reconciliationType + ", "
        + "reservationIds=" + reservationIds + ", "
        + "smokingType=" + smokingType + ", "
        + "specialRequest=" + specialRequest + ", "
        + "status=" + status + ", "
        + "subStatus=" + subStatus + ", "
        + "tidsCode=" + tidsCode + ", "
        + "totalGuestCount=" + totalGuestCount + ", "
        + "unitIds=" + unitIds + ", "
        + "valueAddedPromotions=" + valueAddedPromotions
        + "}";
    }
    return $toString;
  }

  public static class Amounts {
    /**
     * Detailed list of payments associated with the reservation.
     */
    public NightlyPayments nightlyPayments;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Amounts(NightlyPayments nightlyPayments) {
      this.nightlyPayments = nightlyPayments;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Amounts) {
        Amounts that = (Amounts) o;
        return ((this.nightlyPayments == null) ? (that.nightlyPayments == null) : this.nightlyPayments.equals(that.nightlyPayments));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (nightlyPayments == null) ? 0 : nightlyPayments.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Amounts{"
          + "nightlyPayments=" + nightlyPayments
          + "}";
      }
      return $toString;
    }
  }

  public static class Payment {
    /**
     * Card number. Sandbox value is always be "4111111111111111".
     */
    public String cardNumber;

    /**
     * Name of the issuer associated with the card. Sandbox value is "VISA" for HOTEL_COLLECT reservations and "MasterCard" for EXPEDIA_COLLECT reservations.
     */
    public String issuerName;

    /**
     * Type of payment instrument. Sandbox value is "GUEST_CREDIT_CARD" for HOTEL_COLLECT reservations and "EXPEDIA_VIRTUAL_CARD" for EXPEDIA_COLLECT reservations.
     */
    public String paymentInstrumentType;

    /**
     * Randomly generated 3-digits verification number associated with the card.
     */
    public String verificationNumber;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Payment(String cardNumber, String issuerName, String paymentInstrumentType,
        String verificationNumber) {
      this.cardNumber = cardNumber;
      this.issuerName = issuerName;
      this.paymentInstrumentType = paymentInstrumentType;
      this.verificationNumber = verificationNumber;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Payment) {
        Payment that = (Payment) o;
        return ((this.cardNumber == null) ? (that.cardNumber == null) : this.cardNumber.equals(that.cardNumber))
         &&((this.issuerName == null) ? (that.issuerName == null) : this.issuerName.equals(that.issuerName))
         &&((this.paymentInstrumentType == null) ? (that.paymentInstrumentType == null) : this.paymentInstrumentType.equals(that.paymentInstrumentType))
         &&((this.verificationNumber == null) ? (that.verificationNumber == null) : this.verificationNumber.equals(that.verificationNumber));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (cardNumber == null) ? 0 : cardNumber.hashCode();
        __h *= 1000003;
        __h ^= (issuerName == null) ? 0 : issuerName.hashCode();
        __h *= 1000003;
        __h ^= (paymentInstrumentType == null) ? 0 : paymentInstrumentType.hashCode();
        __h *= 1000003;
        __h ^= (verificationNumber == null) ? 0 : verificationNumber.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Payment{"
          + "cardNumber=" + cardNumber + ", "
          + "issuerName=" + issuerName + ", "
          + "paymentInstrumentType=" + paymentInstrumentType + ", "
          + "verificationNumber=" + verificationNumber
          + "}";
      }
      return $toString;
    }
  }

  public static class PrimaryGuest {
    /**
     * Email address of the guest.
     */
    public String emailAddress;

    /**
     * First (given) name of the guest.
     */
    public String firstName;

    /**
     * Last name (surname) of the guest.
     */
    public String lastName;

    /**
     * Guest loyalty tier. Values include MEMBER, VIP, PREMIUMVIP, and NONE.
     */
    public String loyaltyTier;

    /**
     * Phone numbers associated with the guest.
     */
    public List<PhoneNumber> phoneNumbers;

    /**
     * Details about the frequent traveler reward program.
     */
    public SupplierLoyaltyPlanInfo supplierLoyaltyPlanInfo;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public PrimaryGuest(String emailAddress, String firstName, String lastName, String loyaltyTier,
        List<PhoneNumber> phoneNumbers, SupplierLoyaltyPlanInfo supplierLoyaltyPlanInfo) {
      this.emailAddress = emailAddress;
      this.firstName = firstName;
      this.lastName = lastName;
      this.loyaltyTier = loyaltyTier;
      this.phoneNumbers = phoneNumbers;
      this.supplierLoyaltyPlanInfo = supplierLoyaltyPlanInfo;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof PrimaryGuest) {
        PrimaryGuest that = (PrimaryGuest) o;
        return ((this.emailAddress == null) ? (that.emailAddress == null) : this.emailAddress.equals(that.emailAddress))
         &&((this.firstName == null) ? (that.firstName == null) : this.firstName.equals(that.firstName))
         &&((this.lastName == null) ? (that.lastName == null) : this.lastName.equals(that.lastName))
         &&((this.loyaltyTier == null) ? (that.loyaltyTier == null) : this.loyaltyTier.equals(that.loyaltyTier))
         &&((this.phoneNumbers == null) ? (that.phoneNumbers == null) : this.phoneNumbers.equals(that.phoneNumbers))
         &&((this.supplierLoyaltyPlanInfo == null) ? (that.supplierLoyaltyPlanInfo == null) : this.supplierLoyaltyPlanInfo.equals(that.supplierLoyaltyPlanInfo));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (emailAddress == null) ? 0 : emailAddress.hashCode();
        __h *= 1000003;
        __h ^= (firstName == null) ? 0 : firstName.hashCode();
        __h *= 1000003;
        __h ^= (lastName == null) ? 0 : lastName.hashCode();
        __h *= 1000003;
        __h ^= (loyaltyTier == null) ? 0 : loyaltyTier.hashCode();
        __h *= 1000003;
        __h ^= (phoneNumbers == null) ? 0 : phoneNumbers.hashCode();
        __h *= 1000003;
        __h ^= (supplierLoyaltyPlanInfo == null) ? 0 : supplierLoyaltyPlanInfo.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "PrimaryGuest{"
          + "emailAddress=" + emailAddress + ", "
          + "firstName=" + firstName + ", "
          + "lastName=" + lastName + ", "
          + "loyaltyTier=" + loyaltyTier + ", "
          + "phoneNumbers=" + phoneNumbers + ", "
          + "supplierLoyaltyPlanInfo=" + supplierLoyaltyPlanInfo
          + "}";
      }
      return $toString;
    }
  }

  public static class RateId {
    /**
     * The ID in the source system.
     */
    public String id;

    /**
     * The source of the ID.
     */
    public IdSource idSource;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public RateId(String id, IdSource idSource) {
      this.id = id;
      this.idSource = idSource;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof RateId) {
        RateId that = (RateId) o;
        return ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.idSource == null) ? (that.idSource == null) : this.idSource.equals(that.idSource));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (idSource == null) ? 0 : idSource.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "RateId{"
          + "id=" + id + ", "
          + "idSource=" + idSource
          + "}";
      }
      return $toString;
    }
  }

  public static class ReservationId {
    /**
     * The ID in the source system.
     */
    public String id;

    /**
     * The source of the ID.
     */
    public IdSource idSource;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public ReservationId(String id, IdSource idSource) {
      this.id = id;
      this.idSource = idSource;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof ReservationId) {
        ReservationId that = (ReservationId) o;
        return ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.idSource == null) ? (that.idSource == null) : this.idSource.equals(that.idSource));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (idSource == null) ? 0 : idSource.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "ReservationId{"
          + "id=" + id + ", "
          + "idSource=" + idSource
          + "}";
      }
      return $toString;
    }
  }

  public static class UnitId {
    /**
     * The ID in the source system.
     */
    public String id;

    /**
     * The source of the ID.
     */
    public IdSource idSource;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public UnitId(String id, IdSource idSource) {
      this.id = id;
      this.idSource = idSource;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof UnitId) {
        UnitId that = (UnitId) o;
        return ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.idSource == null) ? (that.idSource == null) : this.idSource.equals(that.idSource));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (idSource == null) ? 0 : idSource.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "UnitId{"
          + "id=" + id + ", "
          + "idSource=" + idSource
          + "}";
      }
      return $toString;
    }
  }

  public static class ValueAddedPromotion {
    /**
     * Description of the value add promotion.
     */
    public String description;

    /**
     * ID of the value added promotion.
     */
    public String id;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public ValueAddedPromotion(String description, String id) {
      this.description = description;
      this.id = id;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof ValueAddedPromotion) {
        ValueAddedPromotion that = (ValueAddedPromotion) o;
        return ((this.description == null) ? (that.description == null) : this.description.equals(that.description))
         &&((this.id == null) ? (that.id == null) : this.id.equals(that.id));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (description == null) ? 0 : description.hashCode();
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "ValueAddedPromotion{"
          + "description=" + description + ", "
          + "id=" + id
          + "}";
      }
      return $toString;
    }
  }

  public static class NightlyPayments {
    /**
     * Cancellation amounts for the reservation.
     */
    public List<CancellationAmount> cancellationAmounts;

    /**
     * Reservation amounts for a specific stay date.
     */
    public List<DailyAmount> dailyAmounts;

    /**
     * Reservation amounts that apply to the whole stay.
     */
    public List<PerStayAmount> perStayAmounts;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public NightlyPayments(List<CancellationAmount> cancellationAmounts,
        List<DailyAmount> dailyAmounts, List<PerStayAmount> perStayAmounts) {
      this.cancellationAmounts = cancellationAmounts;
      this.dailyAmounts = dailyAmounts;
      this.perStayAmounts = perStayAmounts;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof NightlyPayments) {
        NightlyPayments that = (NightlyPayments) o;
        return ((this.cancellationAmounts == null) ? (that.cancellationAmounts == null) : this.cancellationAmounts.equals(that.cancellationAmounts))
         &&((this.dailyAmounts == null) ? (that.dailyAmounts == null) : this.dailyAmounts.equals(that.dailyAmounts))
         &&((this.perStayAmounts == null) ? (that.perStayAmounts == null) : this.perStayAmounts.equals(that.perStayAmounts));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (cancellationAmounts == null) ? 0 : cancellationAmounts.hashCode();
        __h *= 1000003;
        __h ^= (dailyAmounts == null) ? 0 : dailyAmounts.hashCode();
        __h *= 1000003;
        __h ^= (perStayAmounts == null) ? 0 : perStayAmounts.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "NightlyPayments{"
          + "cancellationAmounts=" + cancellationAmounts + ", "
          + "dailyAmounts=" + dailyAmounts + ", "
          + "perStayAmounts=" + perStayAmounts
          + "}";
      }
      return $toString;
    }
  }

  public static class CancellationAmount {
    /**
     * Amount value.
     */
    public Amount amount;

    /**
     * Description associated to the amount.
     */
    public String description;

    /**
     * Percentage of amount (when applicable), expressed as a fraction of 1 (e.g., 0.12 for 12%).
     */
    public Double percent;

    /**
     * Amount type (BASE, DISCOUNT, TAX, GUESS_PAYMENT, PAYOUT, ...).
     */
    public String type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public CancellationAmount(Amount amount, String description, Double percent, String type) {
      this.amount = amount;
      this.description = description;
      this.percent = percent;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof CancellationAmount) {
        CancellationAmount that = (CancellationAmount) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.description == null) ? (that.description == null) : this.description.equals(that.description))
         &&((this.percent == null) ? (that.percent == null) : this.percent.equals(that.percent))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (description == null) ? 0 : description.hashCode();
        __h *= 1000003;
        __h ^= (percent == null) ? 0 : percent.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "CancellationAmount{"
          + "amount=" + amount + ", "
          + "description=" + description + ", "
          + "percent=" + percent + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }

  public static class Amount {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public String amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Amount(String amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Amount) {
        Amount that = (Amount) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Amount{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }

  public static class DailyAmount {
    /**
     * Amount value.
     */
    public Amount1 amount;

    /**
     * Amount date, in the "yyyy-MM-dd" format (e.g. 2023-01-30).
     */
    public LocalDate date;

    /**
     * Description associated to the amount.
     */
    public String description;

    /**
     * Percentage of amount (when applicable), expressed as a fraction of 1 (e.g., 0.12 for 12%).
     */
    public Double percent;

    /**
     * Amount type (BASE, DISCOUNT, TAX, GUESS_PAYMENT, PAYOUT, ...).
     */
    public String type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public DailyAmount(Amount1 amount, LocalDate date, String description, Double percent,
        String type) {
      this.amount = amount;
      this.date = date;
      this.description = description;
      this.percent = percent;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof DailyAmount) {
        DailyAmount that = (DailyAmount) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.date == null) ? (that.date == null) : this.date.equals(that.date))
         &&((this.description == null) ? (that.description == null) : this.description.equals(that.description))
         &&((this.percent == null) ? (that.percent == null) : this.percent.equals(that.percent))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (date == null) ? 0 : date.hashCode();
        __h *= 1000003;
        __h ^= (description == null) ? 0 : description.hashCode();
        __h *= 1000003;
        __h ^= (percent == null) ? 0 : percent.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "DailyAmount{"
          + "amount=" + amount + ", "
          + "date=" + date + ", "
          + "description=" + description + ", "
          + "percent=" + percent + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }

  public static class Amount1 {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public String amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Amount1(String amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Amount1) {
        Amount1 that = (Amount1) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Amount1{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }

  public static class PerStayAmount {
    /**
     * Amount value.
     */
    public Amount2 amount;

    /**
     * Description associated to the amount.
     */
    public String description;

    /**
     * Percentage of amount (when applicable), expressed as a fraction of 1 (e.g., 0.12 for 12%).
     */
    public Double percent;

    /**
     * Amount type (BASE, DISCOUNT, TAX, GUESS_PAYMENT, PAYOUT, ...).
     */
    public String type;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public PerStayAmount(Amount2 amount, String description, Double percent, String type) {
      this.amount = amount;
      this.description = description;
      this.percent = percent;
      this.type = type;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof PerStayAmount) {
        PerStayAmount that = (PerStayAmount) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.description == null) ? (that.description == null) : this.description.equals(that.description))
         &&((this.percent == null) ? (that.percent == null) : this.percent.equals(that.percent))
         &&((this.type == null) ? (that.type == null) : this.type.equals(that.type));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (description == null) ? 0 : description.hashCode();
        __h *= 1000003;
        __h ^= (percent == null) ? 0 : percent.hashCode();
        __h *= 1000003;
        __h ^= (type == null) ? 0 : type.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "PerStayAmount{"
          + "amount=" + amount + ", "
          + "description=" + description + ", "
          + "percent=" + percent + ", "
          + "type=" + type
          + "}";
      }
      return $toString;
    }
  }

  public static class Amount2 {
    /**
     * The actual monetary amount value. The scale of the amount will vary according to the currency or any rate conversion that may have been applied.
     */
    public String amount;

    /**
     * The code of the currency of the amount.
     */
    public String currencyCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Amount2(String amount, String currencyCode) {
      this.amount = amount;
      this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Amount2) {
        Amount2 that = (Amount2) o;
        return ((this.amount == null) ? (that.amount == null) : this.amount.equals(that.amount))
         &&((this.currencyCode == null) ? (that.currencyCode == null) : this.currencyCode.equals(that.currencyCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (amount == null) ? 0 : amount.hashCode();
        __h *= 1000003;
        __h ^= (currencyCode == null) ? 0 : currencyCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Amount2{"
          + "amount=" + amount + ", "
          + "currencyCode=" + currencyCode
          + "}";
      }
      return $toString;
    }
  }

  public static class PhoneNumber {
    /**
     * Area code (three digits).
     */
    public String areaCode;

    /**
     * Country code (two digits).
     */
    public String countryCode;

    /**
     * Phone number (seven digits, no hyphen).
     */
    public String number;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public PhoneNumber(String areaCode, String countryCode, String number) {
      this.areaCode = areaCode;
      this.countryCode = countryCode;
      this.number = number;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof PhoneNumber) {
        PhoneNumber that = (PhoneNumber) o;
        return ((this.areaCode == null) ? (that.areaCode == null) : this.areaCode.equals(that.areaCode))
         &&((this.countryCode == null) ? (that.countryCode == null) : this.countryCode.equals(that.countryCode))
         &&((this.number == null) ? (that.number == null) : this.number.equals(that.number));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (areaCode == null) ? 0 : areaCode.hashCode();
        __h *= 1000003;
        __h ^= (countryCode == null) ? 0 : countryCode.hashCode();
        __h *= 1000003;
        __h ^= (number == null) ? 0 : number.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "PhoneNumber{"
          + "areaCode=" + areaCode + ", "
          + "countryCode=" + countryCode + ", "
          + "number=" + number
          + "}";
      }
      return $toString;
    }
  }

  public static class SupplierLoyaltyPlanInfo {
    /**
     * Traveler's membership number.
     */
    public Integer membershipNumber;

    /**
     * Reward program code.
     */
    public String planCode;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public SupplierLoyaltyPlanInfo(Integer membershipNumber, String planCode) {
      this.membershipNumber = membershipNumber;
      this.planCode = planCode;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof SupplierLoyaltyPlanInfo) {
        SupplierLoyaltyPlanInfo that = (SupplierLoyaltyPlanInfo) o;
        return ((this.membershipNumber == null) ? (that.membershipNumber == null) : this.membershipNumber.equals(that.membershipNumber))
         &&((this.planCode == null) ? (that.planCode == null) : this.planCode.equals(that.planCode));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (membershipNumber == null) ? 0 : membershipNumber.hashCode();
        __h *= 1000003;
        __h ^= (planCode == null) ? 0 : planCode.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "SupplierLoyaltyPlanInfo{"
          + "membershipNumber=" + membershipNumber + ", "
          + "planCode=" + planCode
          + "}";
      }
      return $toString;
    }
  }
}
