//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloOptionalAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.SandboxPropertyQuery;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum SandboxPropertyQuery_VariablesAdapter implements Adapter<SandboxPropertyQuery> {
  INSTANCE;

  @Override
  public SandboxPropertyQuery fromJson(JsonReader reader, CustomScalarAdapters customScalarAdapters)
      throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      SandboxPropertyQuery value) throws IOException {
    writer.name("id");
    Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.id);
    if (value.reservationsCursor instanceof Optional.Present) {
      writer.name("reservationsCursor");
      new ApolloOptionalAdapter<>(Adapters.NullableStringAdapter).toJson(writer, customScalarAdapters, value.reservationsCursor);
    }
    if (value.reservationsLimit instanceof Optional.Present) {
      writer.name("reservationsLimit");
      new ApolloOptionalAdapter<>(Adapters.NullableIntAdapter).toJson(writer, customScalarAdapters, value.reservationsLimit);
    }
    if (value.skipReservations instanceof Optional.Present) {
      writer.name("skipReservations");
      new ApolloOptionalAdapter<>(Adapters.BooleanAdapter).toJson(writer, customScalarAdapters, value.skipReservations);
    }
    else if (customScalarAdapters.getAdapterContext().getSerializeVariablesWithDefaultBooleanValues()) {
      writer.name("skipReservations");
      Adapters.BooleanAdapter.toJson(writer, customScalarAdapters, false);
    }
  }
}
