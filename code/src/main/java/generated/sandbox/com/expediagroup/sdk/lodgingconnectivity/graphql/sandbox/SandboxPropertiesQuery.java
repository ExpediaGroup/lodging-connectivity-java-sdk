//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox;

import com.apollographql.apollo.api.Adapter;
import com.apollographql.apollo.api.CompiledField;
import com.apollographql.apollo.api.CustomScalarAdapters;
import com.apollographql.apollo.api.ObjectAdapter;
import com.apollographql.apollo.api.Optional;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.adapter.SandboxPropertiesQuery_ResponseAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.adapter.SandboxPropertiesQuery_VariablesAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.selections.SandboxPropertiesQuerySelections;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;

public class SandboxPropertiesQuery implements Query<SandboxPropertiesQuery.Data> {
  public static final String OPERATION_ID = "4031dec8a8c839cfcd51be658deac084fbd5a65b86bae53543ca9629132fe46c";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query SandboxProperties($cursor: String, $limit: Int, $skipReservations: Boolean! = false ) {
   *   properties(cursor: $cursor, limit: $limit) {
   *     cursor
   *     totalCount
   *     elements {
   *       id
   *       name
   *       reservations @skip(if: $skipReservations) {
   *         totalCount
   *         cursor
   *         elements {
   *           __typename
   *           ...SandboxReservationFragment
   *         }
   *       }
   *     }
   *   }
   * }
   *
   * fragment SandboxReservationFragment on Reservation {
   *   accessibilityText
   *   adultCount
   *   amounts {
   *     nightlyPayments {
   *       cancellationAmounts {
   *         amount {
   *           amount
   *           currencyCode
   *         }
   *         description
   *         percent
   *         type
   *       }
   *       dailyAmounts {
   *         amount {
   *           amount
   *           currencyCode
   *         }
   *         date
   *         description
   *         percent
   *         type
   *       }
   *       perStayAmounts {
   *         amount {
   *           amount
   *           currencyCode
   *         }
   *         description
   *         percent
   *         type
   *       }
   *     }
   *   }
   *   bedTypes
   *   bookingSource
   *   businessModel
   *   checkInDate
   *   checkOutDate
   *   childAges
   *   childCount
   *   creationDateTime
   *   id
   *   isReconciled
   *   lastUpdatedDateTime
   *   multiRoomText
   *   payment {
   *     cardNumber
   *     issuerName
   *     paymentInstrumentType
   *     verificationNumber
   *   }
   *   petCount
   *   primaryGuest {
   *     emailAddress
   *     firstName
   *     lastName
   *     loyaltyTier
   *     phoneNumbers {
   *       areaCode
   *       countryCode
   *       number
   *     }
   *     supplierLoyaltyPlanInfo {
   *       membershipNumber
   *       planCode
   *     }
   *   }
   *   propertyId
   *   rateIds {
   *     id
   *     idSource
   *   }
   *   reconciliationType
   *   reservationIds {
   *     id
   *     idSource
   *   }
   *   smokingType
   *   specialRequest
   *   status
   *   subStatus
   *   tidsCode
   *   totalGuestCount
   *   unitIds {
   *     id
   *     idSource
   *   }
   *   valueAddedPromotions {
   *     description
   *     id
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query SandboxProperties($cursor: String, $limit: Int, $skipReservations: Boolean! = false ) { properties(cursor: $cursor, limit: $limit) { cursor totalCount elements { id name reservations @skip(if: $skipReservations) { totalCount cursor elements { __typename ...SandboxReservationFragment } } } } }  fragment SandboxReservationFragment on Reservation { accessibilityText adultCount amounts { nightlyPayments { cancellationAmounts { amount { amount currencyCode } description percent type } dailyAmounts { amount { amount currencyCode } date description percent type } perStayAmounts { amount { amount currencyCode } description percent type } } } bedTypes bookingSource businessModel checkInDate checkOutDate childAges childCount creationDateTime id isReconciled lastUpdatedDateTime multiRoomText payment { cardNumber issuerName paymentInstrumentType verificationNumber } petCount primaryGuest { emailAddress firstName lastName loyaltyTier phoneNumbers { areaCode countryCode number } supplierLoyaltyPlanInfo { membershipNumber planCode } } propertyId rateIds { id idSource } reconciliationType reservationIds { id idSource } smokingType specialRequest status subStatus tidsCode totalGuestCount unitIds { id idSource } valueAddedPromotions { description id } }";

  public static final String OPERATION_NAME = "SandboxProperties";

  public final Optional<String> cursor;

  public final Optional<Integer> limit;

  public final Optional<Boolean> skipReservations;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public SandboxPropertiesQuery(Optional<String> cursor, Optional<Integer> limit,
      Optional<Boolean> skipReservations) {
    this.cursor = cursor;
    this.limit = limit;
    this.skipReservations = skipReservations;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof SandboxPropertiesQuery) {
      SandboxPropertiesQuery that = (SandboxPropertiesQuery) o;
      return ((this.cursor == null) ? (that.cursor == null) : this.cursor.equals(that.cursor))
       &&((this.limit == null) ? (that.limit == null) : this.limit.equals(that.limit))
       &&((this.skipReservations == null) ? (that.skipReservations == null) : this.skipReservations.equals(that.skipReservations));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int __h = 1;
      __h *= 1000003;
      __h ^= (cursor == null) ? 0 : cursor.hashCode();
      __h *= 1000003;
      __h ^= (limit == null) ? 0 : limit.hashCode();
      __h *= 1000003;
      __h ^= (skipReservations == null) ? 0 : skipReservations.hashCode();
      $hashCode = __h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = "SandboxPropertiesQuery{"
        + "cursor=" + cursor + ", "
        + "limit=" + limit + ", "
        + "skipReservations=" + skipReservations
        + "}";
    }
    return $toString;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withDefaultValues) throws IOException {
    SandboxPropertiesQuery_VariablesAdapter.INSTANCE.serializeVariables(writer, this, customScalarAdapters, withDefaultValues);
  }

  @Override
  public Adapter<Data> adapter() {
    return new ObjectAdapter<Data>(SandboxPropertiesQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.Query.type
    )
    .selections(SandboxPropertiesQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    private Optional<String> cursor = Optional.absent();

    private Optional<Integer> limit = Optional.absent();

    private Optional<Boolean> skipReservations = Optional.absent();

    Builder() {
    }

    public Builder cursor(String cursor) {
      this.cursor = Optional.present(cursor);
      return this;
    }

    public Builder limit(Integer limit) {
      this.limit = Optional.present(limit);
      return this;
    }

    public Builder skipReservations(Boolean skipReservations) {
      this.skipReservations = Optional.present(skipReservations);
      return this;
    }

    public SandboxPropertiesQuery build() {
      return new SandboxPropertiesQuery(cursor, limit, skipReservations);
    }
  }

  public static class Data implements Query.Data {
    /**
     * Retrieves information about all sandbox properties connected partner has access to.
     *
     * This query uses pagination to manage the amount of data returned in each request. By default, it returns 25 results at a time.
     *
     * To control the number of results returned, you can use the limit input field. If you want to fetch more or less than 25 results,
     * you can set the limit to the desired number.
     *
     * To fetch all results, you need to use the cursor input field. For the first request, you can leave the cursor as null.
     * For subsequent requests, set the cursor to the value from the previous response. This will return the next set of results
     * starting from the property after the cursor.
     */
    public Properties properties;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Data(Properties properties) {
      this.properties = properties;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.properties == null) ? (that.properties == null) : this.properties.equals(that.properties));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (properties == null) ? 0 : properties.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "properties=" + properties
          + "}";
      }
      return $toString;
    }
  }

  public static class Properties {
    /**
     * Cursor for pagination.
     */
    public String cursor;

    /**
     * Total count of properties.
     */
    public Integer totalCount;

    /**
     * List of properties.
     */
    public List<Element> elements;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Properties(String cursor, Integer totalCount, List<Element> elements) {
      this.cursor = cursor;
      this.totalCount = totalCount;
      this.elements = elements;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Properties) {
        Properties that = (Properties) o;
        return ((this.cursor == null) ? (that.cursor == null) : this.cursor.equals(that.cursor))
         &&((this.totalCount == null) ? (that.totalCount == null) : this.totalCount.equals(that.totalCount))
         &&((this.elements == null) ? (that.elements == null) : this.elements.equals(that.elements));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (cursor == null) ? 0 : cursor.hashCode();
        __h *= 1000003;
        __h ^= (totalCount == null) ? 0 : totalCount.hashCode();
        __h *= 1000003;
        __h ^= (elements == null) ? 0 : elements.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Properties{"
          + "cursor=" + cursor + ", "
          + "totalCount=" + totalCount + ", "
          + "elements=" + elements
          + "}";
      }
      return $toString;
    }
  }

  public static class Element {
    /**
     * The ID of the property.
     */
    public String id;

    /**
     * The name of the property.
     */
    public String name;

    /**
     * Reservation details for this sandbox property.
     *
     * This query uses pagination to manage the amount of data returned in each request. By default, it returns 25 results at a time.
     *
     * To control the number of results returned, you can use the limit input field. If you want to fetch more or less than 25 results,
     * you can set the limit to the desired number.
     *
     * To fetch all results, you need to use the cursor input field. For the first request, you can leave the cursor as null.
     * For subsequent requests, set the cursor to the value from the previous response. This will return the next set of results
     * starting from the reservation after the cursor.
     */
    public Reservations reservations;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Element(String id, String name, Reservations reservations) {
      this.id = id;
      this.name = name;
      this.reservations = reservations;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Element) {
        Element that = (Element) o;
        return ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.name == null) ? (that.name == null) : this.name.equals(that.name))
         &&((this.reservations == null) ? (that.reservations == null) : this.reservations.equals(that.reservations));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (id == null) ? 0 : id.hashCode();
        __h *= 1000003;
        __h ^= (name == null) ? 0 : name.hashCode();
        __h *= 1000003;
        __h ^= (reservations == null) ? 0 : reservations.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Element{"
          + "id=" + id + ", "
          + "name=" + name + ", "
          + "reservations=" + reservations
          + "}";
      }
      return $toString;
    }
  }

  public static class Reservations {
    /**
     * Total count of reservations.
     */
    public Integer totalCount;

    /**
     * Cursor for pagination.
     */
    public String cursor;

    /**
     * List of reservations.
     */
    public List<Element1> elements;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Reservations(Integer totalCount, String cursor, List<Element1> elements) {
      this.totalCount = totalCount;
      this.cursor = cursor;
      this.elements = elements;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Reservations) {
        Reservations that = (Reservations) o;
        return ((this.totalCount == null) ? (that.totalCount == null) : this.totalCount.equals(that.totalCount))
         &&((this.cursor == null) ? (that.cursor == null) : this.cursor.equals(that.cursor))
         &&((this.elements == null) ? (that.elements == null) : this.elements.equals(that.elements));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (totalCount == null) ? 0 : totalCount.hashCode();
        __h *= 1000003;
        __h ^= (cursor == null) ? 0 : cursor.hashCode();
        __h *= 1000003;
        __h ^= (elements == null) ? 0 : elements.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Reservations{"
          + "totalCount=" + totalCount + ", "
          + "cursor=" + cursor + ", "
          + "elements=" + elements
          + "}";
      }
      return $toString;
    }
  }

  public static class Element1 {
    public String __typename;

    /**
     * Synthetic field for 'SandboxReservationFragment'
     */
    public SandboxReservationFragment sandboxReservationFragment;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Element1(String __typename, SandboxReservationFragment sandboxReservationFragment) {
      this.__typename = __typename;
      this.sandboxReservationFragment = sandboxReservationFragment;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Element1) {
        Element1 that = (Element1) o;
        return ((this.__typename == null) ? (that.__typename == null) : this.__typename.equals(that.__typename))
         &&((this.sandboxReservationFragment == null) ? (that.sandboxReservationFragment == null) : this.sandboxReservationFragment.equals(that.sandboxReservationFragment));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int __h = 1;
        __h *= 1000003;
        __h ^= (__typename == null) ? 0 : __typename.hashCode();
        __h *= 1000003;
        __h ^= (sandboxReservationFragment == null) ? 0 : sandboxReservationFragment.hashCode();
        $hashCode = __h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Element1{"
          + "__typename=" + __typename + ", "
          + "sandboxReservationFragment=" + sandboxReservationFragment
          + "}";
      }
      return $toString;
    }
  }
}
