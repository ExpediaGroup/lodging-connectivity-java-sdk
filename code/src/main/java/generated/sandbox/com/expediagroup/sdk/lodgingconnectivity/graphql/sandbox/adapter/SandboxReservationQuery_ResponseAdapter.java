//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.SandboxReservationQuery;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class SandboxReservationQuery_ResponseAdapter {
  public enum Data implements Adapter<SandboxReservationQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("reservation");

    @Override
    public SandboxReservationQuery.Data fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      SandboxReservationQuery.Reservation _reservation = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _reservation = new ObjectAdapter<SandboxReservationQuery.Reservation>(Reservation.INSTANCE, true).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_reservation, "reservation");

      return new SandboxReservationQuery.Data(
        _reservation
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        SandboxReservationQuery.Data value) throws IOException {
      writer.name("reservation");
      new ObjectAdapter<SandboxReservationQuery.Reservation>(Reservation.INSTANCE, true).toJson(writer, customScalarAdapters, value.reservation);
    }
  }

  public enum Reservation implements Adapter<SandboxReservationQuery.Reservation> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("__typename");

    @Override
    public SandboxReservationQuery.Reservation fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String __typename = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: __typename = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      reader.rewind();
      SandboxReservationFragment _sandboxReservationFragment = com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragmentImpl_ResponseAdapter.SandboxReservationFragment.INSTANCE.fromJson(reader, customScalarAdapters);

      Assertions.checkFieldNotMissing(__typename, "__typename");

      return new SandboxReservationQuery.Reservation(
        __typename,
        _sandboxReservationFragment
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        SandboxReservationQuery.Reservation value) throws IOException {
      writer.name("__typename");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.__typename);

      com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragmentImpl_ResponseAdapter.SandboxReservationFragment.INSTANCE.toJson(writer, customScalarAdapters, value.sandboxReservationFragment);
    }
  }
}
