//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.ApolloOptionalAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.SandboxPropertiesQuery;
import java.io.IOException;
import java.lang.IllegalStateException;
import java.lang.Override;

public enum SandboxPropertiesQuery_VariablesAdapter implements Adapter<SandboxPropertiesQuery> {
  INSTANCE;

  @Override
  public SandboxPropertiesQuery fromJson(JsonReader reader,
      CustomScalarAdapters customScalarAdapters) throws IOException {
    throw new IllegalStateException("Input type used in output position");
  }

  @Override
  public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      SandboxPropertiesQuery value) throws IOException {
    if (value.cursor instanceof Optional.Present) {
      writer.name("cursor");
      new ApolloOptionalAdapter<>(Adapters.NullableStringAdapter).toJson(writer, customScalarAdapters, value.cursor);
    }
    if (value.limit instanceof Optional.Present) {
      writer.name("limit");
      new ApolloOptionalAdapter<>(Adapters.NullableIntAdapter).toJson(writer, customScalarAdapters, value.limit);
    }
    if (value.skipReservations instanceof Optional.Present) {
      writer.name("skipReservations");
      new ApolloOptionalAdapter<>(Adapters.BooleanAdapter).toJson(writer, customScalarAdapters, value.skipReservations);
    }
    else if (customScalarAdapters.getAdapterContext().getSerializeVariablesWithDefaultBooleanValues()) {
      writer.name("skipReservations");
      Adapters.BooleanAdapter.toJson(writer, customScalarAdapters, false);
    }
  }
}
