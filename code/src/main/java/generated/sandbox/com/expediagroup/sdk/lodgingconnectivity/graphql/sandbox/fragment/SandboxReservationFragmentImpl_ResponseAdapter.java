//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.4'.
//
package com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ListAdapter;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.BookingSource;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.BusinessModel;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.IdSource;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.ReconciliationType;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.ReservationStatus;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.adapter.BookingSource_ResponseAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.adapter.BusinessModel_ResponseAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.adapter.IdSource_ResponseAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.adapter.ReconciliationType_ResponseAdapter;
import com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.type.adapter.ReservationStatus_ResponseAdapter;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

public class SandboxReservationFragmentImpl_ResponseAdapter {
  public enum SandboxReservationFragment implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("accessibilityText", "adultCount", "amounts", "bedTypes", "bookingSource", "businessModel", "checkInDate", "checkOutDate", "childAges", "childCount", "creationDateTime", "id", "isReconciled", "lastUpdatedDateTime", "multiRoomText", "payment", "petCount", "primaryGuest", "propertyId", "rateIds", "reconciliationType", "reservationIds", "smokingType", "specialRequest", "status", "subStatus", "tidsCode", "totalGuestCount", "unitIds", "valueAddedPromotions");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      List<String> _accessibilityText = null;
      Integer _adultCount = null;
      com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amounts _amounts = null;
      String _bedTypes = null;
      BookingSource _bookingSource = null;
      BusinessModel _businessModel = null;
      LocalDate _checkInDate = null;
      LocalDate _checkOutDate = null;
      List<Integer> _childAges = null;
      Integer _childCount = null;
      String _creationDateTime = null;
      String _id = null;
      Boolean _isReconciled = null;
      String _lastUpdatedDateTime = null;
      String _multiRoomText = null;
      com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Payment _payment = null;
      Integer _petCount = null;
      com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PrimaryGuest _primaryGuest = null;
      String _propertyId = null;
      List<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.RateId> _rateIds = null;
      ReconciliationType _reconciliationType = null;
      List<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.ReservationId> _reservationIds = null;
      String _smokingType = null;
      String _specialRequest = null;
      ReservationStatus _status = null;
      String _subStatus = null;
      Integer _tidsCode = null;
      Integer _totalGuestCount = null;
      List<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.UnitId> _unitIds = null;
      List<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.ValueAddedPromotion> _valueAddedPromotions = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _accessibilityText = new ListAdapter<>(Adapters.StringAdapter).fromJson(reader, customScalarAdapters); break;
          case 1: _adultCount = Adapters.IntAdapter.fromJson(reader, customScalarAdapters); break;
          case 2: _amounts = new NullableAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amounts>(Amounts.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          case 3: _bedTypes = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          case 4: _bookingSource = BookingSource_ResponseAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          case 5: _businessModel = BusinessModel_ResponseAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          case 6: _checkInDate = com.apollographql.apollo3.adapter.JavaLocalDateAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          case 7: _checkOutDate = com.apollographql.apollo3.adapter.JavaLocalDateAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          case 8: _childAges = new NullableAdapter<>(new ListAdapter<>(Adapters.IntAdapter)).fromJson(reader, customScalarAdapters); break;
          case 9: _childCount = Adapters.IntAdapter.fromJson(reader, customScalarAdapters); break;
          case 10: _creationDateTime = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 11: _id = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 12: _isReconciled = Adapters.BooleanAdapter.fromJson(reader, customScalarAdapters); break;
          case 13: _lastUpdatedDateTime = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 14: _multiRoomText = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          case 15: _payment = new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Payment>(Payment.INSTANCE, false).fromJson(reader, customScalarAdapters); break;
          case 16: _petCount = Adapters.NullableIntAdapter.fromJson(reader, customScalarAdapters); break;
          case 17: _primaryGuest = new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PrimaryGuest>(PrimaryGuest.INSTANCE, false).fromJson(reader, customScalarAdapters); break;
          case 18: _propertyId = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 19: _rateIds = new NullableAdapter<>(new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.RateId>(RateId.INSTANCE, false))).fromJson(reader, customScalarAdapters); break;
          case 20: _reconciliationType = new NullableAdapter<>(ReconciliationType_ResponseAdapter.INSTANCE).fromJson(reader, customScalarAdapters); break;
          case 21: _reservationIds = new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.ReservationId>(ReservationId.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          case 22: _smokingType = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 23: _specialRequest = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          case 24: _status = ReservationStatus_ResponseAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          case 25: _subStatus = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          case 26: _tidsCode = Adapters.NullableIntAdapter.fromJson(reader, customScalarAdapters); break;
          case 27: _totalGuestCount = Adapters.IntAdapter.fromJson(reader, customScalarAdapters); break;
          case 28: _unitIds = new NullableAdapter<>(new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.UnitId>(UnitId.INSTANCE, false))).fromJson(reader, customScalarAdapters); break;
          case 29: _valueAddedPromotions = new NullableAdapter<>(new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.ValueAddedPromotion>(ValueAddedPromotion.INSTANCE, false))).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_accessibilityText, "accessibilityText");
      Assertions.checkFieldNotMissing(_adultCount, "adultCount");
      Assertions.checkFieldNotMissing(_bookingSource, "bookingSource");
      Assertions.checkFieldNotMissing(_businessModel, "businessModel");
      Assertions.checkFieldNotMissing(_checkInDate, "checkInDate");
      Assertions.checkFieldNotMissing(_checkOutDate, "checkOutDate");
      Assertions.checkFieldNotMissing(_childCount, "childCount");
      Assertions.checkFieldNotMissing(_creationDateTime, "creationDateTime");
      Assertions.checkFieldNotMissing(_id, "id");
      Assertions.checkFieldNotMissing(_isReconciled, "isReconciled");
      Assertions.checkFieldNotMissing(_lastUpdatedDateTime, "lastUpdatedDateTime");
      Assertions.checkFieldNotMissing(_payment, "payment");
      Assertions.checkFieldNotMissing(_primaryGuest, "primaryGuest");
      Assertions.checkFieldNotMissing(_propertyId, "propertyId");
      Assertions.checkFieldNotMissing(_reservationIds, "reservationIds");
      Assertions.checkFieldNotMissing(_smokingType, "smokingType");
      Assertions.checkFieldNotMissing(_status, "status");
      Assertions.checkFieldNotMissing(_totalGuestCount, "totalGuestCount");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment(
        _accessibilityText,
        _adultCount,
        _amounts,
        _bedTypes,
        _bookingSource,
        _businessModel,
        _checkInDate,
        _checkOutDate,
        _childAges,
        _childCount,
        _creationDateTime,
        _id,
        _isReconciled,
        _lastUpdatedDateTime,
        _multiRoomText,
        _payment,
        _petCount,
        _primaryGuest,
        _propertyId,
        _rateIds,
        _reconciliationType,
        _reservationIds,
        _smokingType,
        _specialRequest,
        _status,
        _subStatus,
        _tidsCode,
        _totalGuestCount,
        _unitIds,
        _valueAddedPromotions
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment value)
        throws IOException {
      writer.name("accessibilityText");
      new ListAdapter<>(Adapters.StringAdapter).toJson(writer, customScalarAdapters, value.accessibilityText);

      writer.name("adultCount");
      Adapters.IntAdapter.toJson(writer, customScalarAdapters, value.adultCount);

      writer.name("amounts");
      new NullableAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amounts>(Amounts.INSTANCE, false)).toJson(writer, customScalarAdapters, value.amounts);

      writer.name("bedTypes");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.bedTypes);

      writer.name("bookingSource");
      BookingSource_ResponseAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.bookingSource);

      writer.name("businessModel");
      BusinessModel_ResponseAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.businessModel);

      writer.name("checkInDate");
      com.apollographql.apollo3.adapter.JavaLocalDateAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.checkInDate);

      writer.name("checkOutDate");
      com.apollographql.apollo3.adapter.JavaLocalDateAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.checkOutDate);

      writer.name("childAges");
      new NullableAdapter<>(new ListAdapter<>(Adapters.IntAdapter)).toJson(writer, customScalarAdapters, value.childAges);

      writer.name("childCount");
      Adapters.IntAdapter.toJson(writer, customScalarAdapters, value.childCount);

      writer.name("creationDateTime");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.creationDateTime);

      writer.name("id");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.id);

      writer.name("isReconciled");
      Adapters.BooleanAdapter.toJson(writer, customScalarAdapters, value.isReconciled);

      writer.name("lastUpdatedDateTime");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.lastUpdatedDateTime);

      writer.name("multiRoomText");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.multiRoomText);

      writer.name("payment");
      new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Payment>(Payment.INSTANCE, false).toJson(writer, customScalarAdapters, value.payment);

      writer.name("petCount");
      Adapters.NullableIntAdapter.toJson(writer, customScalarAdapters, value.petCount);

      writer.name("primaryGuest");
      new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PrimaryGuest>(PrimaryGuest.INSTANCE, false).toJson(writer, customScalarAdapters, value.primaryGuest);

      writer.name("propertyId");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.propertyId);

      writer.name("rateIds");
      new NullableAdapter<>(new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.RateId>(RateId.INSTANCE, false))).toJson(writer, customScalarAdapters, value.rateIds);

      writer.name("reconciliationType");
      new NullableAdapter<>(ReconciliationType_ResponseAdapter.INSTANCE).toJson(writer, customScalarAdapters, value.reconciliationType);

      writer.name("reservationIds");
      new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.ReservationId>(ReservationId.INSTANCE, false)).toJson(writer, customScalarAdapters, value.reservationIds);

      writer.name("smokingType");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.smokingType);

      writer.name("specialRequest");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.specialRequest);

      writer.name("status");
      ReservationStatus_ResponseAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.status);

      writer.name("subStatus");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.subStatus);

      writer.name("tidsCode");
      Adapters.NullableIntAdapter.toJson(writer, customScalarAdapters, value.tidsCode);

      writer.name("totalGuestCount");
      Adapters.IntAdapter.toJson(writer, customScalarAdapters, value.totalGuestCount);

      writer.name("unitIds");
      new NullableAdapter<>(new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.UnitId>(UnitId.INSTANCE, false))).toJson(writer, customScalarAdapters, value.unitIds);

      writer.name("valueAddedPromotions");
      new NullableAdapter<>(new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.ValueAddedPromotion>(ValueAddedPromotion.INSTANCE, false))).toJson(writer, customScalarAdapters, value.valueAddedPromotions);
    }
  }

  public enum Amounts implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amounts> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("nightlyPayments");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amounts fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.NightlyPayments _nightlyPayments = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _nightlyPayments = new NullableAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.NightlyPayments>(NightlyPayments.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amounts(
        _nightlyPayments
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amounts value)
        throws IOException {
      writer.name("nightlyPayments");
      new NullableAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.NightlyPayments>(NightlyPayments.INSTANCE, false)).toJson(writer, customScalarAdapters, value.nightlyPayments);
    }
  }

  public enum NightlyPayments implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.NightlyPayments> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("cancellationAmounts", "dailyAmounts", "perStayAmounts");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.NightlyPayments fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      List<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.CancellationAmount> _cancellationAmounts = null;
      List<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.DailyAmount> _dailyAmounts = null;
      List<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PerStayAmount> _perStayAmounts = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _cancellationAmounts = new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.CancellationAmount>(CancellationAmount.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          case 1: _dailyAmounts = new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.DailyAmount>(DailyAmount.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          case 2: _perStayAmounts = new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PerStayAmount>(PerStayAmount.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_cancellationAmounts, "cancellationAmounts");
      Assertions.checkFieldNotMissing(_dailyAmounts, "dailyAmounts");
      Assertions.checkFieldNotMissing(_perStayAmounts, "perStayAmounts");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.NightlyPayments(
        _cancellationAmounts,
        _dailyAmounts,
        _perStayAmounts
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.NightlyPayments value)
        throws IOException {
      writer.name("cancellationAmounts");
      new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.CancellationAmount>(CancellationAmount.INSTANCE, false)).toJson(writer, customScalarAdapters, value.cancellationAmounts);

      writer.name("dailyAmounts");
      new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.DailyAmount>(DailyAmount.INSTANCE, false)).toJson(writer, customScalarAdapters, value.dailyAmounts);

      writer.name("perStayAmounts");
      new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PerStayAmount>(PerStayAmount.INSTANCE, false)).toJson(writer, customScalarAdapters, value.perStayAmounts);
    }
  }

  public enum CancellationAmount implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.CancellationAmount> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("amount", "description", "percent", "type");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.CancellationAmount fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount _amount = null;
      String _description = null;
      Double _percent = null;
      String _type = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _amount = new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount>(Amount.INSTANCE, false).fromJson(reader, customScalarAdapters); break;
          case 1: _description = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 2: _percent = Adapters.NullableDoubleAdapter.fromJson(reader, customScalarAdapters); break;
          case 3: _type = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_amount, "amount");
      Assertions.checkFieldNotMissing(_description, "description");
      Assertions.checkFieldNotMissing(_type, "type");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.CancellationAmount(
        _amount,
        _description,
        _percent,
        _type
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.CancellationAmount value)
        throws IOException {
      writer.name("amount");
      new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount>(Amount.INSTANCE, false).toJson(writer, customScalarAdapters, value.amount);

      writer.name("description");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.description);

      writer.name("percent");
      Adapters.NullableDoubleAdapter.toJson(writer, customScalarAdapters, value.percent);

      writer.name("type");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.type);
    }
  }

  public enum Amount implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("amount", "currencyCode");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      String _amount = null;
      String _currencyCode = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _amount = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _currencyCode = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_amount, "amount");
      Assertions.checkFieldNotMissing(_currencyCode, "currencyCode");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount(
        _amount,
        _currencyCode
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount value)
        throws IOException {
      writer.name("amount");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.amount);

      writer.name("currencyCode");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.currencyCode);
    }
  }

  public enum DailyAmount implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.DailyAmount> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("amount", "date", "description", "percent", "type");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.DailyAmount fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount1 _amount = null;
      LocalDate _date = null;
      String _description = null;
      Double _percent = null;
      String _type = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _amount = new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount1>(Amount1.INSTANCE, false).fromJson(reader, customScalarAdapters); break;
          case 1: _date = com.apollographql.apollo3.adapter.JavaLocalDateAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          case 2: _description = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 3: _percent = Adapters.NullableDoubleAdapter.fromJson(reader, customScalarAdapters); break;
          case 4: _type = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_amount, "amount");
      Assertions.checkFieldNotMissing(_date, "date");
      Assertions.checkFieldNotMissing(_description, "description");
      Assertions.checkFieldNotMissing(_type, "type");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.DailyAmount(
        _amount,
        _date,
        _description,
        _percent,
        _type
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.DailyAmount value)
        throws IOException {
      writer.name("amount");
      new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount1>(Amount1.INSTANCE, false).toJson(writer, customScalarAdapters, value.amount);

      writer.name("date");
      com.apollographql.apollo3.adapter.JavaLocalDateAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.date);

      writer.name("description");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.description);

      writer.name("percent");
      Adapters.NullableDoubleAdapter.toJson(writer, customScalarAdapters, value.percent);

      writer.name("type");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.type);
    }
  }

  public enum Amount1 implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount1> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("amount", "currencyCode");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount1 fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      String _amount = null;
      String _currencyCode = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _amount = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _currencyCode = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_amount, "amount");
      Assertions.checkFieldNotMissing(_currencyCode, "currencyCode");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount1(
        _amount,
        _currencyCode
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount1 value)
        throws IOException {
      writer.name("amount");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.amount);

      writer.name("currencyCode");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.currencyCode);
    }
  }

  public enum PerStayAmount implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PerStayAmount> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("amount", "description", "percent", "type");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PerStayAmount fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount2 _amount = null;
      String _description = null;
      Double _percent = null;
      String _type = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _amount = new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount2>(Amount2.INSTANCE, false).fromJson(reader, customScalarAdapters); break;
          case 1: _description = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 2: _percent = Adapters.NullableDoubleAdapter.fromJson(reader, customScalarAdapters); break;
          case 3: _type = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_amount, "amount");
      Assertions.checkFieldNotMissing(_description, "description");
      Assertions.checkFieldNotMissing(_type, "type");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PerStayAmount(
        _amount,
        _description,
        _percent,
        _type
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PerStayAmount value)
        throws IOException {
      writer.name("amount");
      new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount2>(Amount2.INSTANCE, false).toJson(writer, customScalarAdapters, value.amount);

      writer.name("description");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.description);

      writer.name("percent");
      Adapters.NullableDoubleAdapter.toJson(writer, customScalarAdapters, value.percent);

      writer.name("type");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.type);
    }
  }

  public enum Amount2 implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount2> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("amount", "currencyCode");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount2 fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      String _amount = null;
      String _currencyCode = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _amount = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _currencyCode = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_amount, "amount");
      Assertions.checkFieldNotMissing(_currencyCode, "currencyCode");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount2(
        _amount,
        _currencyCode
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Amount2 value)
        throws IOException {
      writer.name("amount");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.amount);

      writer.name("currencyCode");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.currencyCode);
    }
  }

  public enum Payment implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Payment> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("cardNumber", "issuerName", "paymentInstrumentType", "verificationNumber");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Payment fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      String _cardNumber = null;
      String _issuerName = null;
      String _paymentInstrumentType = null;
      String _verificationNumber = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _cardNumber = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _issuerName = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 2: _paymentInstrumentType = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 3: _verificationNumber = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_cardNumber, "cardNumber");
      Assertions.checkFieldNotMissing(_issuerName, "issuerName");
      Assertions.checkFieldNotMissing(_paymentInstrumentType, "paymentInstrumentType");
      Assertions.checkFieldNotMissing(_verificationNumber, "verificationNumber");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Payment(
        _cardNumber,
        _issuerName,
        _paymentInstrumentType,
        _verificationNumber
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.Payment value)
        throws IOException {
      writer.name("cardNumber");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.cardNumber);

      writer.name("issuerName");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.issuerName);

      writer.name("paymentInstrumentType");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.paymentInstrumentType);

      writer.name("verificationNumber");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.verificationNumber);
    }
  }

  public enum PrimaryGuest implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PrimaryGuest> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("emailAddress", "firstName", "lastName", "loyaltyTier", "phoneNumbers", "supplierLoyaltyPlanInfo");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PrimaryGuest fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      String _emailAddress = null;
      String _firstName = null;
      String _lastName = null;
      String _loyaltyTier = null;
      List<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PhoneNumber> _phoneNumbers = null;
      com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.SupplierLoyaltyPlanInfo _supplierLoyaltyPlanInfo = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _emailAddress = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _firstName = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 2: _lastName = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 3: _loyaltyTier = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 4: _phoneNumbers = new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PhoneNumber>(PhoneNumber.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          case 5: _supplierLoyaltyPlanInfo = new NullableAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.SupplierLoyaltyPlanInfo>(SupplierLoyaltyPlanInfo.INSTANCE, false)).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_emailAddress, "emailAddress");
      Assertions.checkFieldNotMissing(_firstName, "firstName");
      Assertions.checkFieldNotMissing(_lastName, "lastName");
      Assertions.checkFieldNotMissing(_loyaltyTier, "loyaltyTier");
      Assertions.checkFieldNotMissing(_phoneNumbers, "phoneNumbers");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PrimaryGuest(
        _emailAddress,
        _firstName,
        _lastName,
        _loyaltyTier,
        _phoneNumbers,
        _supplierLoyaltyPlanInfo
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PrimaryGuest value)
        throws IOException {
      writer.name("emailAddress");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.emailAddress);

      writer.name("firstName");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.firstName);

      writer.name("lastName");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.lastName);

      writer.name("loyaltyTier");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.loyaltyTier);

      writer.name("phoneNumbers");
      new ListAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PhoneNumber>(PhoneNumber.INSTANCE, false)).toJson(writer, customScalarAdapters, value.phoneNumbers);

      writer.name("supplierLoyaltyPlanInfo");
      new NullableAdapter<>(new ObjectAdapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.SupplierLoyaltyPlanInfo>(SupplierLoyaltyPlanInfo.INSTANCE, false)).toJson(writer, customScalarAdapters, value.supplierLoyaltyPlanInfo);
    }
  }

  public enum PhoneNumber implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PhoneNumber> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("areaCode", "countryCode", "number");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PhoneNumber fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      String _areaCode = null;
      String _countryCode = null;
      String _number = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _areaCode = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _countryCode = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 2: _number = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_areaCode, "areaCode");
      Assertions.checkFieldNotMissing(_countryCode, "countryCode");
      Assertions.checkFieldNotMissing(_number, "number");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PhoneNumber(
        _areaCode,
        _countryCode,
        _number
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.PhoneNumber value)
        throws IOException {
      writer.name("areaCode");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.areaCode);

      writer.name("countryCode");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.countryCode);

      writer.name("number");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.number);
    }
  }

  public enum SupplierLoyaltyPlanInfo implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.SupplierLoyaltyPlanInfo> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("membershipNumber", "planCode");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.SupplierLoyaltyPlanInfo fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      Integer _membershipNumber = null;
      String _planCode = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _membershipNumber = Adapters.IntAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _planCode = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_membershipNumber, "membershipNumber");
      Assertions.checkFieldNotMissing(_planCode, "planCode");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.SupplierLoyaltyPlanInfo(
        _membershipNumber,
        _planCode
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.SupplierLoyaltyPlanInfo value)
        throws IOException {
      writer.name("membershipNumber");
      Adapters.IntAdapter.toJson(writer, customScalarAdapters, value.membershipNumber);

      writer.name("planCode");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.planCode);
    }
  }

  public enum RateId implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.RateId> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("id", "idSource");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.RateId fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      String _id = null;
      IdSource _idSource = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _id = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _idSource = IdSource_ResponseAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_id, "id");
      Assertions.checkFieldNotMissing(_idSource, "idSource");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.RateId(
        _id,
        _idSource
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.RateId value)
        throws IOException {
      writer.name("id");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.id);

      writer.name("idSource");
      IdSource_ResponseAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.idSource);
    }
  }

  public enum ReservationId implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.ReservationId> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("id", "idSource");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.ReservationId fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      String _id = null;
      IdSource _idSource = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _id = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _idSource = IdSource_ResponseAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_id, "id");
      Assertions.checkFieldNotMissing(_idSource, "idSource");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.ReservationId(
        _id,
        _idSource
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.ReservationId value)
        throws IOException {
      writer.name("id");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.id);

      writer.name("idSource");
      IdSource_ResponseAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.idSource);
    }
  }

  public enum UnitId implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.UnitId> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("id", "idSource");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.UnitId fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      String _id = null;
      IdSource _idSource = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _id = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _idSource = IdSource_ResponseAdapter.INSTANCE.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_id, "id");
      Assertions.checkFieldNotMissing(_idSource, "idSource");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.UnitId(
        _id,
        _idSource
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.UnitId value)
        throws IOException {
      writer.name("id");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.id);

      writer.name("idSource");
      IdSource_ResponseAdapter.INSTANCE.toJson(writer, customScalarAdapters, value.idSource);
    }
  }

  public enum ValueAddedPromotion implements Adapter<com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.ValueAddedPromotion> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("description", "id");

    @Override
    public com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.ValueAddedPromotion fromJson(
        JsonReader reader, CustomScalarAdapters customScalarAdapters) throws IOException {
      String _description = null;
      String _id = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _description = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _id = Adapters.StringAdapter.fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_description, "description");
      Assertions.checkFieldNotMissing(_id, "id");

      return new com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.ValueAddedPromotion(
        _description,
        _id
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        com.expediagroup.sdk.lodgingconnectivity.graphql.sandbox.fragment.SandboxReservationFragment.ValueAddedPromotion value)
        throws IOException {
      writer.name("description");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.description);

      writer.name("id");
      Adapters.StringAdapter.toJson(writer, customScalarAdapters, value.id);
    }
  }
}
