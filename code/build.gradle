plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.1.0'
    id 'org.jetbrains.dokka' version '1.9.20'
    id 'com.apollographql.apollo' version '4.1.0'

    /* Publishing Plugins */
    id 'maven-publish'
    id 'signing'

    /* Test Reporting */
    id 'org.jetbrains.kotlinx.kover' version "0.9.0"
}

kotlin {
    jvmToolchain(8)
}

dependencies {
    /* Kotlin */
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:2.1.0'

    /* Dokka */
    dokkaHtmlPlugin 'org.jetbrains.dokka:versioning-plugin:1.9.20'

    /* Apollo */
    api 'com.apollographql.java:client:0.0.2'
    implementation 'com.apollographql.adapters:apollo-adapters-core:0.0.4'


    /* EG SDK Core */
    implementation 'com.ebay.ejmask:ejmask-api:1.3.0'
    implementation 'com.ebay.ejmask:ejmask-extensions:1.3.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.18.2'
    implementation 'org.slf4j:slf4j-api:2.0.16'

    /* Testing */
    testImplementation platform('org.junit:junit-bom:5.11.3')
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'io.mockk:mockk:1.13.13'
    testImplementation "com.squareup.okhttp3:mockwebserver:4.12.0"
}

apply from: "tasks-gradle/test.gradle"
apply from: "tasks-gradle/sdk-properties.gradle"
apply from: "tasks-gradle/apollo.gradle"
apply from: "tasks-gradle/publishing.gradle"
apply from: "tasks-gradle/dokka.gradle"
