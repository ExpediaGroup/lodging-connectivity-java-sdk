plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.0.21'
    id 'org.jetbrains.dokka' version '1.9.20'
    id 'com.apollographql.apollo' version '4.1.0'

    /* Publishing Plugins */
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
}

kotlin {
    jvmToolchain(8)
}

jar {
    manifest {
        attributes(
                "version": version,
                "artifactId": rootProject.name,
                "userAgentPrefix": "expediagroup-sdk-java-${rootProject.name.replaceFirst("-sdk", "")}"
        )
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        html.required = true
    }
}

jacoco {
    toolVersion = "0.8.12"
}

dependencies {
    /* Kotlin */
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:2.0.21'

    /* Dokka */
    dokkaHtmlPlugin 'org.jetbrains.dokka:versioning-plugin:1.9.20'

    /* Apollo Kotlin */
    implementation 'com.apollographql.adapters:apollo-adapters-core:0.0.4'

    /* Apollo Java */
    api 'com.apollographql.java:client:0.0.2'

    /* EG SDK Core */
    implementation 'com.ebay.ejmask:ejmask-api:1.0.3'
    implementation 'com.ebay.ejmask:ejmask-extensions:1.0.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.1'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.18.1'
    implementation 'org.slf4j:slf4j-api:2.0.16'

    /* Testing */
    testImplementation platform('org.junit:junit-bom:5.11.3')
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    testImplementation 'org.assertj:assertj-core:3.26.3'
}

apply from: "tasks-gradle/apollo.gradle"
apply from: "tasks-gradle/publishing.gradle"
apply from: "tasks-gradle/dokka.gradle"
